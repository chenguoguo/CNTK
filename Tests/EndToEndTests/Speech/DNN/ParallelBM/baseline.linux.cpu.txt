=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 17:56:15
		Last modified date: Tue May  3 11:36:23 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
		Built by philly on 87698aadbc9d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 17:56:15
		Last modified date: Tue May  3 11:36:23 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
		Built by philly on 87698aadbc9d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
05/03/2016 18:00:39: Redirecting stderr to file /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
05/03/2016 18:00:39: Redirecting stderr to file /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 0: 05/03/2016 18:00:39: -------------------------------------------------------------------
MPI Rank 0: 05/03/2016 18:00:39: Build info: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: 		Built time: May  3 2016 17:56:15
MPI Rank 0: 05/03/2016 18:00:39: 		Last modified date: Tue May  3 11:36:23 2016
MPI Rank 0: 05/03/2016 18:00:39: 		Build type: release
MPI Rank 0: 05/03/2016 18:00:39: 		Build target: GPU
MPI Rank 0: 05/03/2016 18:00:39: 		With 1bit-SGD: yes
MPI Rank 0: 05/03/2016 18:00:39: 		Math lib: acml
MPI Rank 0: 05/03/2016 18:00:39: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 05/03/2016 18:00:39: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 05/03/2016 18:00:39: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 05/03/2016 18:00:39: 		Build Branch: HEAD
MPI Rank 0: 05/03/2016 18:00:39: 		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
MPI Rank 0: 05/03/2016 18:00:39: 		Built by philly on 87698aadbc9d
MPI Rank 0: 05/03/2016 18:00:39: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 05/03/2016 18:00:39: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Running on localhost at 2016/05/03 18:00:39
MPI Rank 0: 05/03/2016 18:00:39: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 05/03/2016 18:00:39: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 05/03/2016 18:00:39: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 05/03/2016 18:00:39: Commands: speechTrain
MPI Rank 0: 05/03/2016 18:00:39: Precision = "double"
MPI Rank 0: 05/03/2016 18:00:39: Using 12 CPU threads.
MPI Rank 0: 05/03/2016 18:00:39: CNTKModelPath: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 05/03/2016 18:00:39: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 05/03/2016 18:00:39: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: ##############################################################################
MPI Rank 0: 05/03/2016 18:00:39: #                                                                            #
MPI Rank 0: 05/03/2016 18:00:39: # Action "train"                                                             #
MPI Rank 0: 05/03/2016 18:00:39: #                                                                            #
MPI Rank 0: 05/03/2016 18:00:39: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Training criterion node(s):
MPI Rank 0: 05/03/2016 18:00:39: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x15645d8: {[B0 Value[512 x 1]] }
MPI Rank 0: 0x1565758: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x1569408: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x156bb78: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x15b5888: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x15e7d88: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x1605158: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x1611d68: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x161c8b8: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x1645ac8: {[features Value[363 x *]] }
MPI Rank 0: 0x1668d38: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x166c6e8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x166c8a8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x166ca68: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x166cc28: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0x167c2a8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x167c468: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x167c628: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x167c7e8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x167c9a8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x167cb68: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x1683bb8: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x16872a8: {[labels Value[132 x *]] }
MPI Rank 0: 0x1688f08: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x16890c8: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x1689348: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x168ad08: {[Prior Value[132]] }
MPI Rank 0: 0x168d2c8: {[LogOfPrior Value[132]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:39: 	MeanOfFeatures = Mean()
MPI Rank 0: 05/03/2016 18:00:39: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 05/03/2016 18:00:39: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:50: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:50: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:00:50: Starting minibatch loop.
MPI Rank 0: 05/03/2016 18:00:50:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.56947300 * 192; EvalErrorPrediction = 0.93750000 * 192; time = 0.4765s; samplesPerSecond = 402.9
MPI Rank 0: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.43406315 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.1968s; samplesPerSecond = 975.4
MPI Rank 0: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.27880063 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1842s; samplesPerSecond = 1042.2
MPI Rank 0: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.08751953 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.2121s; samplesPerSecond = 905.3
MPI Rank 0: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.21737559 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.1813s; samplesPerSecond = 1059.0
MPI Rank 0: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.14259750 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1878s; samplesPerSecond = 1022.1
MPI Rank 0: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.03221539 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1961s; samplesPerSecond = 979.2
MPI Rank 0: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.09889450 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1826s; samplesPerSecond = 1051.3
MPI Rank 0: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.89612175 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.1740s; samplesPerSecond = 1103.4
MPI Rank 0: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.98897999 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.1760s; samplesPerSecond = 1091.1
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93572978 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.3962s; samplesPerSecond = 484.6
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.76284095 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1789s; samplesPerSecond = 1072.9
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.98522385 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1669s; samplesPerSecond = 1150.6
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.66209590 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.1739s; samplesPerSecond = 1104.3
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.96368107 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.1757s; samplesPerSecond = 1092.9
MPI Rank 0: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.76732554 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1774s; samplesPerSecond = 1082.1
MPI Rank 0: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.69456327 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1753s; samplesPerSecond = 1095.4
MPI Rank 0: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.82975145 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.1746s; samplesPerSecond = 1099.6
MPI Rank 0: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.82370243 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.1823s; samplesPerSecond = 1053.2
MPI Rank 0: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.57625565 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.1893s; samplesPerSecond = 1014.2
MPI Rank 0: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.38811493 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1941s; samplesPerSecond = 989.4
MPI Rank 0: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.52208661 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.3877s; samplesPerSecond = 495.2
MPI Rank 0: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.80866929 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1867s; samplesPerSecond = 1028.2
MPI Rank 0: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.54345746 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1959s; samplesPerSecond = 979.9
MPI Rank 0: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.33936350 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1795s; samplesPerSecond = 1069.4
MPI Rank 0: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43672338 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1762s; samplesPerSecond = 1089.5
MPI Rank 0: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.44585129 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1808s; samplesPerSecond = 1062.0
MPI Rank 0: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.43498669 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1798s; samplesPerSecond = 1067.8
MPI Rank 0: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.31632754 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.1819s; samplesPerSecond = 1055.6
MPI Rank 0: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.33946924 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1914s; samplesPerSecond = 1003.3
MPI Rank 0: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.26118575 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.1702s; samplesPerSecond = 1128.0
MPI Rank 0: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.56686839 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1908s; samplesPerSecond = 1006.2
MPI Rank 0: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.36674876 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.3715s; samplesPerSecond = 516.8
MPI Rank 0: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.28977127 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.1739s; samplesPerSecond = 1104.2
MPI Rank 0: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.27969909 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1746s; samplesPerSecond = 1099.8
MPI Rank 0: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.12259596 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.1702s; samplesPerSecond = 1127.8
MPI Rank 0: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.41981056 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.1723s; samplesPerSecond = 1114.5
MPI Rank 0: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.38297602 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1741s; samplesPerSecond = 1103.0
MPI Rank 0: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.41994711 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1737s; samplesPerSecond = 1105.1
MPI Rank 0: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.24732267 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1994s; samplesPerSecond = 962.7
MPI Rank 0: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20269035 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1753s; samplesPerSecond = 1095.5
MPI Rank 0: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.15326365 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.1733s; samplesPerSecond = 1107.6
MPI Rank 0: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.21802066 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1732s; samplesPerSecond = 1108.3
MPI Rank 0: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.26091070 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.3911s; samplesPerSecond = 490.9
MPI Rank 0: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.94987113 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1868s; samplesPerSecond = 1027.8
MPI Rank 0: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.01829231 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1795s; samplesPerSecond = 1069.7
MPI Rank 0: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.19981302 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.2016s; samplesPerSecond = 952.5
MPI Rank 0: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.01620054 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.1699s; samplesPerSecond = 1129.9
MPI Rank 0: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.07482512 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.2033s; samplesPerSecond = 944.6
MPI Rank 0: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.95940261 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.1890s; samplesPerSecond = 1015.8
MPI Rank 0: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.18955068 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1862s; samplesPerSecond = 1030.9
MPI Rank 0: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.80225800 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1845s; samplesPerSecond = 1040.8
MPI Rank 0: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.08865913 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.2250s; samplesPerSecond = 853.2
MPI Rank 0: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.87171438 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1998s; samplesPerSecond = 960.9
MPI Rank 0: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.90723268 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.4146s; samplesPerSecond = 463.1
MPI Rank 0: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.96438386 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.1836s; samplesPerSecond = 1045.8
MPI Rank 0: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.85407675 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.2077s; samplesPerSecond = 924.6
MPI Rank 0: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.64516293 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1869s; samplesPerSecond = 1027.3
MPI Rank 0: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78779884 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.1905s; samplesPerSecond = 1007.9
MPI Rank 0: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.77691077 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1687s; samplesPerSecond = 1138.1
MPI Rank 0: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.93466303 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1995s; samplesPerSecond = 962.2
MPI Rank 0: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.79665615 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.2005s; samplesPerSecond = 957.6
MPI Rank 0: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.79141433 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1824s; samplesPerSecond = 1052.4
MPI Rank 0: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.85677634 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.2012s; samplesPerSecond = 954.2
MPI Rank 0: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.60438340 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.4016s; samplesPerSecond = 478.0
MPI Rank 0: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.67867701 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.2026s; samplesPerSecond = 947.7
MPI Rank 0: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.35420452 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.1884s; samplesPerSecond = 1019.2
MPI Rank 0: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.67860524 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.1926s; samplesPerSecond = 997.0
MPI Rank 0: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.74438644 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.2218s; samplesPerSecond = 865.7
MPI Rank 0: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.61472294 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.2284s; samplesPerSecond = 840.5
MPI Rank 0: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.56292238 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.1803s; samplesPerSecond = 1064.9
MPI Rank 0: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.49905414 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.2062s; samplesPerSecond = 931.3
MPI Rank 0: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.77977518 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1698s; samplesPerSecond = 1130.7
MPI Rank 0: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.46098943 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1824s; samplesPerSecond = 1052.8
MPI Rank 0: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.53972637 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.3841s; samplesPerSecond = 499.8
MPI Rank 0: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58069409 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1763s; samplesPerSecond = 1089.2
MPI Rank 0: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.42808307 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1726s; samplesPerSecond = 1112.4
MPI Rank 0: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.51795774 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.1730s; samplesPerSecond = 1110.1
MPI Rank 0: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.31017953 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1820s; samplesPerSecond = 1054.7
MPI Rank 0: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.42763250 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1654s; samplesPerSecond = 1160.9
MPI Rank 0: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.38337452 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.2016s; samplesPerSecond = 952.3
MPI Rank 0: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.45688385 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1900s; samplesPerSecond = 1010.3
MPI Rank 0: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.35065649 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1915s; samplesPerSecond = 1002.6
MPI Rank 0: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.39950363 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1887s; samplesPerSecond = 1017.6
MPI Rank 0: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.48031632 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.1816s; samplesPerSecond = 1057.2
MPI Rank 0: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.62124157 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.3902s; samplesPerSecond = 492.0
MPI Rank 0: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.43263192 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.1853s; samplesPerSecond = 1036.0
MPI Rank 0: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.13490764 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1830s; samplesPerSecond = 1049.2
MPI Rank 0: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.52272390 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1811s; samplesPerSecond = 1060.1
MPI Rank 0: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.31215555 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.2117s; samplesPerSecond = 906.8
MPI Rank 0: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.33888920 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.2119s; samplesPerSecond = 906.1
MPI Rank 0: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.19318149 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.1880s; samplesPerSecond = 1021.4
MPI Rank 0: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.19368853 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.1823s; samplesPerSecond = 1052.9
MPI Rank 0: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.31322736 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.2035s; samplesPerSecond = 943.3
MPI Rank 0: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.21496162 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1995s; samplesPerSecond = 962.3
MPI Rank 0: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.38257678 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.3844s; samplesPerSecond = 499.4
MPI Rank 0: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34785036 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1840s; samplesPerSecond = 1043.4
MPI Rank 0: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.20545861 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1689s; samplesPerSecond = 1136.8
MPI Rank 0: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.08751143 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1986s; samplesPerSecond = 966.7
MPI Rank 0: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.28302994 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1750s; samplesPerSecond = 1097.0
MPI Rank 0: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.22267854 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1730s; samplesPerSecond = 1109.8
MPI Rank 0: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.19855044 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1928s; samplesPerSecond = 995.6
MPI Rank 0: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.49612283 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1857s; samplesPerSecond = 1034.1
MPI Rank 0: 05/03/2016 18:01:12:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25409762 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1711s; samplesPerSecond = 1122.1
MPI Rank 0: 05/03/2016 18:01:12:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.13085317 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1831s; samplesPerSecond = 1048.7
MPI Rank 0: 05/03/2016 18:01:12:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.28902612 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1743s; samplesPerSecond = 1101.4
MPI Rank 0: 05/03/2016 18:01:12: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01292779 * 20480; EvalErrorPrediction = 0.72778320 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=21.9902s
MPI Rank 0: 05/03/2016 18:01:12: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:12: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:12: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.25052560 * 519; EvalErrorPrediction = 0.62042389 * 519; time = 0.5723s; samplesPerSecond = 906.9
MPI Rank 0: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.02824382 * 529; EvalErrorPrediction = 0.54442344 * 529; time = 0.4311s; samplesPerSecond = 1227.0
MPI Rank 0: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.04039147 * 494; EvalErrorPrediction = 0.55668016 * 494; time = 0.3481s; samplesPerSecond = 1419.1
MPI Rank 0: 05/03/2016 18:01:14:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 1.98880977 * 491; EvalErrorPrediction = 0.55193483 * 491; time = 0.3707s; samplesPerSecond = 1324.7
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.51 seconds since last report (0.08 seconds on comm.); 4447 samples processed by 2 workers (2243 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 155470288.00k samplesPerSecond , throughputPerWorker = 77735144.00k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:15:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.12620927 * 488; EvalErrorPrediction = 0.55327869 * 488; time = 1.0529s; samplesPerSecond = 463.5
MPI Rank 0: 05/03/2016 18:01:15:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.00690071 * 485; EvalErrorPrediction = 0.56494845 * 485; time = 0.3466s; samplesPerSecond = 1399.4
MPI Rank 0: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.99194220 * 529; EvalErrorPrediction = 0.54442344 * 529; time = 0.4233s; samplesPerSecond = 1249.6
MPI Rank 0: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.96438270 * 468; EvalErrorPrediction = 0.56410256 * 468; time = 0.3289s; samplesPerSecond = 1423.0
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.26 seconds since last report (0.15 seconds on comm.); 4232 samples processed by 2 workers (2154 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 1.87k samplesPerSecond , throughputPerWorker = 0.94k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:17:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.00145662 * 499; EvalErrorPrediction = 0.53707415 * 499; time = 1.0484s; samplesPerSecond = 476.0
MPI Rank 0: 05/03/2016 18:01:17:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.18677023 * 494; EvalErrorPrediction = 0.58502024 * 494; time = 0.3788s; samplesPerSecond = 1304.1
MPI Rank 0: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.97121551 * 479; EvalErrorPrediction = 0.55532359 * 479; time = 0.3484s; samplesPerSecond = 1375.0
MPI Rank 0: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.01765091 * 488; EvalErrorPrediction = 0.54303279 * 488; time = 0.3559s; samplesPerSecond = 1371.4
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.34 seconds since last report (0.23 seconds on comm.); 4185 samples processed by 2 workers (2125 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 1.79k samplesPerSecond , throughputPerWorker = 0.90k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:19:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.90503909 * 506; EvalErrorPrediction = 0.52173913 * 506; time = 1.0994s; samplesPerSecond = 460.2
MPI Rank 0: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.87253137 * 512; EvalErrorPrediction = 0.53710938 * 512; time = 0.3845s; samplesPerSecond = 1331.5
MPI Rank 0: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.92699152 * 497; EvalErrorPrediction = 0.49899396 * 497; time = 0.3525s; samplesPerSecond = 1410.1
MPI Rank 0: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86967957 * 502; EvalErrorPrediction = 0.54581673 * 502; time = 0.3856s; samplesPerSecond = 1301.8
MPI Rank 0: 05/03/2016 18:01:21:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.08077350 * 476; EvalErrorPrediction = 0.57142857 * 476; time = 0.3330s; samplesPerSecond = 1429.6
MPI Rank 0: 05/03/2016 18:01:21:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.00372686 * 487; EvalErrorPrediction = 0.53388090 * 487; time = 0.5998s; samplesPerSecond = 812.0
MPI Rank 0: 05/03/2016 18:01:22:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.92223751 * 499; EvalErrorPrediction = 0.53306613 * 499; time = 0.3902s; samplesPerSecond = 1279.0
MPI Rank 0: 05/03/2016 18:01:22:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.96031873 * 475; EvalErrorPrediction = 0.54947368 * 475; time = 0.3519s; samplesPerSecond = 1349.7
MPI Rank 0: 05/03/2016 18:01:22:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.94324612 * 506; EvalErrorPrediction = 0.52964427 * 506; time = 0.3425s; samplesPerSecond = 1477.3
MPI Rank 0: 05/03/2016 18:01:23:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.94596052 * 472; EvalErrorPrediction = 0.53389831 * 472; time = 0.3730s; samplesPerSecond = 1265.5
MPI Rank 0: 05/03/2016 18:01:23:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.87864114 * 490; EvalErrorPrediction = 0.54693878 * 490; time = 0.5984s; samplesPerSecond = 818.8
MPI Rank 0: 05/03/2016 18:01:24:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.94844616 * 477; EvalErrorPrediction = 0.51153040 * 477; time = 0.3724s; samplesPerSecond = 1280.8
MPI Rank 0: 05/03/2016 18:01:24:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.93817444 * 469; EvalErrorPrediction = 0.53091684 * 469; time = 0.3784s; samplesPerSecond = 1239.5
MPI Rank 0: 05/03/2016 18:01:24:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.94722731 * 495; EvalErrorPrediction = 0.53939394 * 495; time = 0.3956s; samplesPerSecond = 1251.1
MPI Rank 0: 05/03/2016 18:01:25:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.88543102 * 322; EvalErrorPrediction = 0.55279503 * 322; time = 0.2703s; samplesPerSecond = 1191.2
MPI Rank 0: 		(model aggregation stats) 4-th sync:     5.58 seconds since last report (0.00 seconds on comm.); 7732 samples processed by 2 workers (6679 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.39k samplesPerSecond , throughputPerWorker = 0.69k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:25: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00885273 * 20480; EvalErrorPrediction = 0.55078125 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=12.6872s
MPI Rank 0: 05/03/2016 18:01:25: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:25: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:01:27:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87780257 * 1939; EvalErrorPrediction = 0.50644662 * 1939; time = 1.8247s; samplesPerSecond = 1062.6
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.44 seconds since last report (0.15 seconds on comm.); 4844 samples processed by 2 workers (2583 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 1.99k samplesPerSecond , throughputPerWorker = 0.99k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:28:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89404862 * 1944; EvalErrorPrediction = 0.52726337 * 1944; time = 1.6876s; samplesPerSecond = 1151.9
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.14 seconds since last report (0.17 seconds on comm.); 4849 samples processed by 2 workers (2580 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 2.26k samplesPerSecond , throughputPerWorker = 1.13k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:30:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90812492 * 1918; EvalErrorPrediction = 0.53336809 * 1918; time = 1.6940s; samplesPerSecond = 1132.3
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.41 seconds since last report (0.26 seconds on comm.); 4868 samples processed by 2 workers (2595 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 2.02k samplesPerSecond , throughputPerWorker = 1.01k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:32:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.89877106 * 1957; EvalErrorPrediction = 0.53449157 * 1957; time = 1.7800s; samplesPerSecond = 1099.5
MPI Rank 0: 05/03/2016 18:01:33:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.88324196 * 1942; EvalErrorPrediction = 0.51956746 * 1942; time = 1.3951s; samplesPerSecond = 1392.0
MPI Rank 0: 05/03/2016 18:01:35:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.86867010 * 1929; EvalErrorPrediction = 0.52514256 * 1929; time = 1.4284s; samplesPerSecond = 1350.5
MPI Rank 0: 05/03/2016 18:01:36:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.90242165 * 1290; EvalErrorPrediction = 0.53023256 * 1290; time = 1.0371s; samplesPerSecond = 1243.8
MPI Rank 0: 		(model aggregation stats) 4-th sync:     4.08 seconds since last report (0.14 seconds on comm.); 5919 samples processed by 2 workers (5161 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.45k samplesPerSecond , throughputPerWorker = 0.73k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:36: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89787888 * 20480; EvalErrorPrediction = 0.52875977 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=11.0687s
MPI Rank 0: 05/03/2016 18:01:36: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:36: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:36: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:01:38:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.91224926 * 1926; EvalErrorPrediction = 0.52803738 * 1926; time = 1.5261s; samplesPerSecond = 1262.0
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.17 seconds since last report (0.19 seconds on comm.); 4905 samples processed by 2 workers (2581 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 2.26k samplesPerSecond , throughputPerWorker = 1.13k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:39:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.80760312 * 1894; EvalErrorPrediction = 0.51108765 * 1894; time = 1.6624s; samplesPerSecond = 1139.3
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.09 seconds since last report (0.13 seconds on comm.); 4870 samples processed by 2 workers (2537 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 2.33k samplesPerSecond , throughputPerWorker = 1.17k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:41:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.86234536 * 1931; EvalErrorPrediction = 0.51424133 * 1931; time = 1.5962s; samplesPerSecond = 1209.7
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.19 seconds since last report (0.10 seconds on comm.); 4916 samples processed by 2 workers (2513 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 2.25k samplesPerSecond , throughputPerWorker = 1.12k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:43:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83816606 * 1880; EvalErrorPrediction = 0.50638298 * 1880; time = 1.6577s; samplesPerSecond = 1134.1
MPI Rank 0: 05/03/2016 18:01:44:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80548301 * 1880; EvalErrorPrediction = 0.49680851 * 1880; time = 1.3468s; samplesPerSecond = 1395.9
MPI Rank 0: 05/03/2016 18:01:45:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81476104 * 1861; EvalErrorPrediction = 0.50940355 * 1861; time = 1.3799s; samplesPerSecond = 1348.6
MPI Rank 0: 05/03/2016 18:01:46:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.82832821 * 1263; EvalErrorPrediction = 0.49802059 * 1263; time = 0.8310s; samplesPerSecond = 1519.9
MPI Rank 0: 		(model aggregation stats) 4-th sync:     3.76 seconds since last report (0.14 seconds on comm.); 5789 samples processed by 2 workers (5004 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.54k samplesPerSecond , throughputPerWorker = 0.77k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:46: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84940336 * 20480; EvalErrorPrediction = 0.51445312 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=10.2358s
MPI Rank 0: 05/03/2016 18:01:47: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:47: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:47: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:01:48:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80847097 * 1897; EvalErrorPrediction = 0.50237217 * 1897; time = 1.5300s; samplesPerSecond = 1239.8
MPI Rank 0: 		(model aggregation stats) 1-th sync:     2.26 seconds since last report (0.11 seconds on comm.); 4916 samples processed by 2 workers (2490 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 2.18k samplesPerSecond , throughputPerWorker = 1.09k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:50:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.86742287 * 1821; EvalErrorPrediction = 0.51784734 * 1821; time = 1.6572s; samplesPerSecond = 1098.8
MPI Rank 0: 		(model aggregation stats) 2-th sync:     2.13 seconds since last report (0.23 seconds on comm.); 4884 samples processed by 2 workers (2481 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 2.29k samplesPerSecond , throughputPerWorker = 1.15k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:51:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90215948 * 1871; EvalErrorPrediction = 0.51950828 * 1871; time = 1.6368s; samplesPerSecond = 1143.1
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.19 seconds since last report (0.20 seconds on comm.); 4855 samples processed by 2 workers (2488 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 2.22k samplesPerSecond , throughputPerWorker = 1.11k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:53:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.83673317 * 1870; EvalErrorPrediction = 0.50320856 * 1870; time = 1.7506s; samplesPerSecond = 1068.2
MPI Rank 0: 05/03/2016 18:01:55:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.91249924 * 1899; EvalErrorPrediction = 0.52553976 * 1899; time = 1.4692s; samplesPerSecond = 1292.6
MPI Rank 0: 05/03/2016 18:01:56:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87327558 * 1878; EvalErrorPrediction = 0.52183174 * 1878; time = 1.2403s; samplesPerSecond = 1514.2
MPI Rank 0: 05/03/2016 18:01:57:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.87043426 * 1221; EvalErrorPrediction = 0.51678952 * 1221; time = 1.0281s; samplesPerSecond = 1187.7
MPI Rank 0: 		(model aggregation stats) 4-th sync:     3.83 seconds since last report (0.00 seconds on comm.); 5825 samples processed by 2 workers (4998 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 1.52k samplesPerSecond , throughputPerWorker = 0.76k samplesPerSecond
MPI Rank 0: 05/03/2016 18:01:57: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.85300231 * 20480; EvalErrorPrediction = 0.51425781 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=10.4096s
MPI Rank 0: 05/03/2016 18:01:57: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4.
MPI Rank 0: ValidateSubNetwork: InvStdOfFeatures InvStdDev operation changed, from [363 x 1] to [363].ValidateSubNetwork: MeanOfFeatures Mean operation changed, from [363 x 1] to [363].ValidateSubNetwork: Prior Mean operation changed, from [132 x 1] to [132].05/03/2016 18:01:57: learnRatePerSample reduced to 4.8828126e-05
MPI Rank 0: 05/03/2016 18:01:57: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 05/03/2016 18:01:57: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:57: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:57: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 05/03/2016 18:00:39: -------------------------------------------------------------------
MPI Rank 1: 05/03/2016 18:00:39: Build info: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: 		Built time: May  3 2016 17:56:15
MPI Rank 1: 05/03/2016 18:00:39: 		Last modified date: Tue May  3 11:36:23 2016
MPI Rank 1: 05/03/2016 18:00:39: 		Build type: release
MPI Rank 1: 05/03/2016 18:00:39: 		Build target: GPU
MPI Rank 1: 05/03/2016 18:00:39: 		With 1bit-SGD: yes
MPI Rank 1: 05/03/2016 18:00:39: 		Math lib: acml
MPI Rank 1: 05/03/2016 18:00:39: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 05/03/2016 18:00:39: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 05/03/2016 18:00:39: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 05/03/2016 18:00:39: 		Build Branch: HEAD
MPI Rank 1: 05/03/2016 18:00:39: 		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
MPI Rank 1: 05/03/2016 18:00:39: 		Built by philly on 87698aadbc9d
MPI Rank 1: 05/03/2016 18:00:39: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 05/03/2016 18:00:39: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Running on localhost at 2016/05/03 18:00:39
MPI Rank 1: 05/03/2016 18:00:39: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 05/03/2016 18:00:39: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 05/03/2016 18:00:39: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 05/03/2016 18:00:39: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 05/03/2016 18:00:39: Commands: speechTrain
MPI Rank 1: 05/03/2016 18:00:39: Precision = "double"
MPI Rank 1: 05/03/2016 18:00:39: Using 12 CPU threads.
MPI Rank 1: 05/03/2016 18:00:39: CNTKModelPath: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 05/03/2016 18:00:39: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 05/03/2016 18:00:39: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: ##############################################################################
MPI Rank 1: 05/03/2016 18:00:39: #                                                                            #
MPI Rank 1: 05/03/2016 18:00:39: # Action "train"                                                             #
MPI Rank 1: 05/03/2016 18:00:39: #                                                                            #
MPI Rank 1: 05/03/2016 18:00:39: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Training criterion node(s):
MPI Rank 1: 05/03/2016 18:00:39: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x19d1748: {[features Value[363 x *]] }
MPI Rank 1: 0x19d1ce8: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x19d5d58: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x19d6268: {[Prior Value[132]] }
MPI Rank 1: 0x1a3ed28: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x1a3ee88: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x1a3f048: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x1a3f208: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0x1a3f3c8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x1a3f4c8: {[LogOfPrior Value[132]] }
MPI Rank 1: 0x1a68ed8: {[B0 Value[512 x 1]] }
MPI Rank 1: 0x1a6ca48: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x1a6cf78: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x1a74ef8: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x1a844f8: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x1ab8088: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x1ab8248: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x1ab8408: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x1ae3088: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x1ae3248: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x1ae3408: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x1ae35c8: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0x1ae8a38: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x1af1548: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x1af1c28: {[labels Value[132 x *]] }
MPI Rank 1: 0x1af1ef8: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x1af6d28: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x1af7fa8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:39: 	MeanOfFeatures = Mean()
MPI Rank 1: 05/03/2016 18:00:39: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 05/03/2016 18:00:39: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:50: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:50: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:00:50: Starting minibatch loop.
MPI Rank 1: 05/03/2016 18:00:50:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.56947300 * 192; EvalErrorPrediction = 0.93750000 * 192; time = 0.2516s; samplesPerSecond = 763.0
MPI Rank 1: 05/03/2016 18:00:50:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.43406315 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.1682s; samplesPerSecond = 1141.5
MPI Rank 1: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.27880063 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.3847s; samplesPerSecond = 499.1
MPI Rank 1: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.08751953 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.1747s; samplesPerSecond = 1099.3
MPI Rank 1: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.21737559 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.1832s; samplesPerSecond = 1048.1
MPI Rank 1: 05/03/2016 18:00:51:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.14259750 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1842s; samplesPerSecond = 1042.6
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.03221539 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1959s; samplesPerSecond = 980.1
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.09889450 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1715s; samplesPerSecond = 1119.7
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.89612175 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.1751s; samplesPerSecond = 1096.2
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.98897999 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.1752s; samplesPerSecond = 1095.9
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93572978 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.1756s; samplesPerSecond = 1093.6
MPI Rank 1: 05/03/2016 18:00:52:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.76284095 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1679s; samplesPerSecond = 1143.5
MPI Rank 1: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.98522385 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1732s; samplesPerSecond = 1108.6
MPI Rank 1: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.66209590 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.3889s; samplesPerSecond = 493.6
MPI Rank 1: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.96368107 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.1954s; samplesPerSecond = 982.7
MPI Rank 1: 05/03/2016 18:00:53:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.76732554 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.2157s; samplesPerSecond = 890.3
MPI Rank 1: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.69456327 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1829s; samplesPerSecond = 1049.7
MPI Rank 1: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.82975145 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.1916s; samplesPerSecond = 1002.2
MPI Rank 1: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.82370243 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.1728s; samplesPerSecond = 1111.3
MPI Rank 1: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.57625565 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.1762s; samplesPerSecond = 1089.5
MPI Rank 1: 05/03/2016 18:00:54:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.38811493 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.2031s; samplesPerSecond = 945.3
MPI Rank 1: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.52208661 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.1877s; samplesPerSecond = 1022.9
MPI Rank 1: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.80866929 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1981s; samplesPerSecond = 969.1
MPI Rank 1: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.54345746 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1843s; samplesPerSecond = 1041.6
MPI Rank 1: 05/03/2016 18:00:55:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.33936350 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.4089s; samplesPerSecond = 469.6
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.43672338 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1846s; samplesPerSecond = 1040.1
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.44585129 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1687s; samplesPerSecond = 1137.9
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.43498669 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1726s; samplesPerSecond = 1112.6
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.31632754 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.1713s; samplesPerSecond = 1120.8
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.33946924 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.1813s; samplesPerSecond = 1059.2
MPI Rank 1: 05/03/2016 18:00:56:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.26118575 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.1790s; samplesPerSecond = 1072.7
MPI Rank 1: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.56686839 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1732s; samplesPerSecond = 1108.2
MPI Rank 1: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.36674876 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.1734s; samplesPerSecond = 1107.0
MPI Rank 1: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.28977127 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.1907s; samplesPerSecond = 1006.8
MPI Rank 1: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.27969909 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1838s; samplesPerSecond = 1044.4
MPI Rank 1: 05/03/2016 18:00:57:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.12259596 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.3799s; samplesPerSecond = 505.3
MPI Rank 1: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.41981056 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.1747s; samplesPerSecond = 1099.3
MPI Rank 1: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.38297602 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.1744s; samplesPerSecond = 1101.0
MPI Rank 1: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.41994711 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.1734s; samplesPerSecond = 1106.9
MPI Rank 1: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.24732267 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1769s; samplesPerSecond = 1085.3
MPI Rank 1: 05/03/2016 18:00:58:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.20269035 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1783s; samplesPerSecond = 1076.9
MPI Rank 1: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.15326365 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.1774s; samplesPerSecond = 1082.1
MPI Rank 1: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.21802066 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1990s; samplesPerSecond = 964.8
MPI Rank 1: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.26091070 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.1801s; samplesPerSecond = 1065.8
MPI Rank 1: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.94987113 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1662s; samplesPerSecond = 1155.1
MPI Rank 1: 05/03/2016 18:00:59:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 3.01829231 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1730s; samplesPerSecond = 1110.1
MPI Rank 1: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.19981302 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.3878s; samplesPerSecond = 495.1
MPI Rank 1: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.01620054 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.1734s; samplesPerSecond = 1107.2
MPI Rank 1: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.07482512 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.1728s; samplesPerSecond = 1111.2
MPI Rank 1: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.95940261 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.1744s; samplesPerSecond = 1101.1
MPI Rank 1: 05/03/2016 18:01:00:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.18955068 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.1757s; samplesPerSecond = 1092.9
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.80225800 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.1769s; samplesPerSecond = 1085.1
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.08865913 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1764s; samplesPerSecond = 1088.4
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.87171438 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1748s; samplesPerSecond = 1098.2
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.90723268 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.1810s; samplesPerSecond = 1060.6
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.96438386 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.1780s; samplesPerSecond = 1078.9
MPI Rank 1: 05/03/2016 18:01:01:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.85407675 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1724s; samplesPerSecond = 1113.5
MPI Rank 1: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.64516293 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.3982s; samplesPerSecond = 482.1
MPI Rank 1: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.78779884 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.1730s; samplesPerSecond = 1109.9
MPI Rank 1: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.77691077 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1738s; samplesPerSecond = 1105.0
MPI Rank 1: 05/03/2016 18:01:02:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.93466303 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1768s; samplesPerSecond = 1086.1
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.79665615 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.1867s; samplesPerSecond = 1028.3
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.79141433 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1755s; samplesPerSecond = 1094.1
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.85677634 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.1754s; samplesPerSecond = 1094.3
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.60438340 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1900s; samplesPerSecond = 1010.5
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.67867701 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.1872s; samplesPerSecond = 1025.6
MPI Rank 1: 05/03/2016 18:01:03:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.35420452 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.1929s; samplesPerSecond = 995.2
MPI Rank 1: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.67860524 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.1685s; samplesPerSecond = 1139.3
MPI Rank 1: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.74438644 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.4141s; samplesPerSecond = 463.7
MPI Rank 1: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.61472294 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.1826s; samplesPerSecond = 1051.4
MPI Rank 1: 05/03/2016 18:01:04:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.56292238 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.1816s; samplesPerSecond = 1057.2
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.49905414 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1738s; samplesPerSecond = 1104.6
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.77977518 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1755s; samplesPerSecond = 1094.0
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.46098943 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1815s; samplesPerSecond = 1057.8
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.53972637 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1914s; samplesPerSecond = 1003.3
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58069409 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1841s; samplesPerSecond = 1043.0
MPI Rank 1: 05/03/2016 18:01:05:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.42808307 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1728s; samplesPerSecond = 1111.3
MPI Rank 1: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.51795774 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.1657s; samplesPerSecond = 1158.4
MPI Rank 1: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.31017953 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1740s; samplesPerSecond = 1103.2
MPI Rank 1: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.42763250 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.3828s; samplesPerSecond = 501.6
MPI Rank 1: 05/03/2016 18:01:06:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.38337452 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1756s; samplesPerSecond = 1093.2
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.45688385 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.1739s; samplesPerSecond = 1103.8
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.35065649 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1964s; samplesPerSecond = 977.7
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.39950363 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1980s; samplesPerSecond = 969.7
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.48031632 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.1766s; samplesPerSecond = 1087.2
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.62124157 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.1731s; samplesPerSecond = 1109.2
MPI Rank 1: 05/03/2016 18:01:07:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.43263192 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.1918s; samplesPerSecond = 1000.9
MPI Rank 1: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.13490764 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1880s; samplesPerSecond = 1021.1
MPI Rank 1: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.52272390 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1690s; samplesPerSecond = 1136.2
MPI Rank 1: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.31215555 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1735s; samplesPerSecond = 1106.3
MPI Rank 1: 05/03/2016 18:01:08:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.33888920 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.3817s; samplesPerSecond = 503.0
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.19318149 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.1737s; samplesPerSecond = 1105.0
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.19368853 * 192; EvalErrorPrediction = 0.55208333 * 192; time = 0.1992s; samplesPerSecond = 963.9
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.31322736 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.1789s; samplesPerSecond = 1073.5
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.21496162 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.1811s; samplesPerSecond = 1060.0
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.38257678 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.1782s; samplesPerSecond = 1077.6
MPI Rank 1: 05/03/2016 18:01:09:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34785036 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1889s; samplesPerSecond = 1016.3
MPI Rank 1: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.20545861 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.2408s; samplesPerSecond = 797.4
MPI Rank 1: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.08751143 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1691s; samplesPerSecond = 1135.5
MPI Rank 1: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.28302994 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1891s; samplesPerSecond = 1015.4
MPI Rank 1: 05/03/2016 18:01:10:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.22267854 * 192; EvalErrorPrediction = 0.57291667 * 192; time = 0.1849s; samplesPerSecond = 1038.4
MPI Rank 1: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.19855044 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.3900s; samplesPerSecond = 492.4
MPI Rank 1: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.49612283 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.1734s; samplesPerSecond = 1107.4
MPI Rank 1: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25409762 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1730s; samplesPerSecond = 1110.1
MPI Rank 1: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.13085317 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1720s; samplesPerSecond = 1116.5
MPI Rank 1: 05/03/2016 18:01:11:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.28902612 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1729s; samplesPerSecond = 1110.2
MPI Rank 1: 05/03/2016 18:01:11: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01292779 * 20480; EvalErrorPrediction = 0.72778320 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=21.434s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:12: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:12: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:01:12:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.08671820 * 249; EvalErrorPrediction = 0.55020080 * 249; time = 0.2526s; samplesPerSecond = 985.6
MPI Rank 1: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16912508 * 239; EvalErrorPrediction = 0.57740586 * 239; time = 0.4339s; samplesPerSecond = 550.8
MPI Rank 1: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.09087687 * 274; EvalErrorPrediction = 0.55109489 * 274; time = 0.2663s; samplesPerSecond = 1029.0
MPI Rank 1: 05/03/2016 18:01:13:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.15400834 * 277; EvalErrorPrediction = 0.61371841 * 277; time = 0.2425s; samplesPerSecond = 1142.3
MPI Rank 1: 05/03/2016 18:01:14:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.03468379 * 280; EvalErrorPrediction = 0.54642857 * 280; time = 0.2388s; samplesPerSecond = 1172.8
MPI Rank 1: 05/03/2016 18:01:14:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.12707706 * 283; EvalErrorPrediction = 0.59363958 * 283; time = 0.2604s; samplesPerSecond = 1086.9
MPI Rank 1: 05/03/2016 18:01:14:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.05140796 * 239; EvalErrorPrediction = 0.56903766 * 239; time = 0.2214s; samplesPerSecond = 1079.3
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.51 seconds since last report (0.27 seconds on comm.); 4331 samples processed by 2 workers (2141 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.72k samplesPerSecond , throughputPerWorker = 0.86k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:15:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.01525982 * 300; EvalErrorPrediction = 0.54666667 * 300; time = 0.5920s; samplesPerSecond = 506.8
MPI Rank 1: 05/03/2016 18:01:15:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.01429833 * 269; EvalErrorPrediction = 0.54646840 * 269; time = 0.4594s; samplesPerSecond = 585.5
MPI Rank 1: 05/03/2016 18:01:15:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.17091946 * 274; EvalErrorPrediction = 0.56569343 * 274; time = 0.2296s; samplesPerSecond = 1193.4
MPI Rank 1: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.04765590 * 289; EvalErrorPrediction = 0.58823529 * 289; time = 0.2644s; samplesPerSecond = 1093.1
MPI Rank 1: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.08198284 * 280; EvalErrorPrediction = 0.62857143 * 280; time = 0.2346s; samplesPerSecond = 1193.3
MPI Rank 1: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.06262072 * 262; EvalErrorPrediction = 0.53435115 * 262; time = 0.2257s; samplesPerSecond = 1160.6
MPI Rank 1: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.08065983 * 256; EvalErrorPrediction = 0.56250000 * 256; time = 0.2250s; samplesPerSecond = 1137.8
MPI Rank 1: 05/03/2016 18:01:16:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.95307697 * 271; EvalErrorPrediction = 0.54243542 * 271; time = 0.2555s; samplesPerSecond = 1060.7
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.28 seconds since last report (0.12 seconds on comm.); 4232 samples processed by 2 workers (2078 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 1.85k samplesPerSecond , throughputPerWorker = 0.93k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:17:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.05133637 * 266; EvalErrorPrediction = 0.59022556 * 266; time = 0.6546s; samplesPerSecond = 406.4
MPI Rank 1: 05/03/2016 18:01:17:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.16121433 * 292; EvalErrorPrediction = 0.61643836 * 292; time = 0.2444s; samplesPerSecond = 1194.6
MPI Rank 1: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.04937835 * 281; EvalErrorPrediction = 0.56939502 * 281; time = 0.2436s; samplesPerSecond = 1153.7
MPI Rank 1: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.96573797 * 269; EvalErrorPrediction = 0.50557621 * 269; time = 0.2246s; samplesPerSecond = 1197.5
MPI Rank 1: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.96927408 * 293; EvalErrorPrediction = 0.54607509 * 293; time = 0.2325s; samplesPerSecond = 1260.2
MPI Rank 1: 05/03/2016 18:01:18:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.96602409 * 262; EvalErrorPrediction = 0.51526718 * 262; time = 0.2470s; samplesPerSecond = 1060.7
MPI Rank 1: 05/03/2016 18:01:19:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.06123892 * 296; EvalErrorPrediction = 0.55067568 * 296; time = 0.2472s; samplesPerSecond = 1197.6
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.32 seconds since last report (0.27 seconds on comm.); 4185 samples processed by 2 workers (2060 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 1.81k samplesPerSecond , throughputPerWorker = 0.90k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:19:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97564922 * 278; EvalErrorPrediction = 0.51079137 * 278; time = 0.6073s; samplesPerSecond = 457.8
MPI Rank 1: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.03003870 * 291; EvalErrorPrediction = 0.53951890 * 291; time = 0.4219s; samplesPerSecond = 689.7
MPI Rank 1: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.10265344 * 299; EvalErrorPrediction = 0.56187291 * 299; time = 0.2694s; samplesPerSecond = 1109.9
MPI Rank 1: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.87884845 * 273; EvalErrorPrediction = 0.51282051 * 273; time = 0.2373s; samplesPerSecond = 1150.3
MPI Rank 1: 05/03/2016 18:01:20:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.91420176 * 190; EvalErrorPrediction = 0.52631579 * 190; time = 0.1480s; samplesPerSecond = 1284.1
MPI Rank 1: 		(model aggregation stats) 4-th sync:     5.56 seconds since last report (3.96 seconds on comm.); 7732 samples processed by 2 workers (1053 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.39k samplesPerSecond , throughputPerWorker = 0.70k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:25: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00885273 * 20480; EvalErrorPrediction = 0.55078125 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=12.6872s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:25: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:25: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:01:26:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.93776302 * 1133; EvalErrorPrediction = 0.55251545 * 1133; time = 1.0652s; samplesPerSecond = 1063.7
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.44 seconds since last report (0.12 seconds on comm.); 4844 samples processed by 2 workers (2261 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 1.99k samplesPerSecond , throughputPerWorker = 0.99k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:27:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.95554942 * 1128; EvalErrorPrediction = 0.53989362 * 1128; time = 1.3711s; samplesPerSecond = 822.7
MPI Rank 1: 05/03/2016 18:01:28:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.86097969 * 1154; EvalErrorPrediction = 0.51039861 * 1154; time = 1.0426s; samplesPerSecond = 1106.8
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.14 seconds since last report (0.11 seconds on comm.); 4849 samples processed by 2 workers (2269 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 2.26k samplesPerSecond , throughputPerWorker = 1.13k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:30:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88714011 * 1115; EvalErrorPrediction = 0.52376682 * 1115; time = 1.0989s; samplesPerSecond = 1014.6
MPI Rank 1: 05/03/2016 18:01:31:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.91141402 * 1130; EvalErrorPrediction = 0.54513274 * 1130; time = 1.0042s; samplesPerSecond = 1125.3
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.41 seconds since last report (0.12 seconds on comm.); 4868 samples processed by 2 workers (2273 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 2.02k samplesPerSecond , throughputPerWorker = 1.01k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:32:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.90296336 * 1143; EvalErrorPrediction = 0.53980752 * 1143; time = 1.4060s; samplesPerSecond = 812.9
MPI Rank 1: 05/03/2016 18:01:33:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.93362099 * 758; EvalErrorPrediction = 0.53562005 * 758; time = 0.8226s; samplesPerSecond = 921.5
MPI Rank 1: 		(model aggregation stats) 4-th sync:     4.08 seconds since last report (2.17 seconds on comm.); 5919 samples processed by 2 workers (758 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.45k samplesPerSecond , throughputPerWorker = 0.73k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:36: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89787888 * 20480; EvalErrorPrediction = 0.52875977 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=11.0687s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:36: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:36: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:01:37:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.84821410 * 1146; EvalErrorPrediction = 0.50872600 * 1146; time = 0.9970s; samplesPerSecond = 1149.5
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.17 seconds since last report (0.11 seconds on comm.); 4905 samples processed by 2 workers (2324 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 2.26k samplesPerSecond , throughputPerWorker = 1.13k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:38:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84074472 * 1178; EvalErrorPrediction = 0.50764007 * 1178; time = 1.1729s; samplesPerSecond = 1004.3
MPI Rank 1: 05/03/2016 18:01:39:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89617847 * 1141; EvalErrorPrediction = 0.53198948 * 1141; time = 0.8926s; samplesPerSecond = 1278.3
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.07 seconds since last report (0.16 seconds on comm.); 4870 samples processed by 2 workers (2333 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 2.36k samplesPerSecond , throughputPerWorker = 1.18k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:40:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.90122104 * 1192; EvalErrorPrediction = 0.53859060 * 1192; time = 1.1745s; samplesPerSecond = 1014.9
MPI Rank 1: 05/03/2016 18:01:41:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.81959403 * 1192; EvalErrorPrediction = 0.51845638 * 1192; time = 1.0022s; samplesPerSecond = 1189.4
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.21 seconds since last report (0.18 seconds on comm.); 4916 samples processed by 2 workers (2403 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 2.23k samplesPerSecond , throughputPerWorker = 1.11k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:43:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.83237505 * 1211; EvalErrorPrediction = 0.50949628 * 1211; time = 1.2039s; samplesPerSecond = 1005.9
MPI Rank 1: 05/03/2016 18:01:43:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.95195212 * 785; EvalErrorPrediction = 0.54777070 * 785; time = 0.4979s; samplesPerSecond = 1576.6
MPI Rank 1: 		(model aggregation stats) 4-th sync:     3.76 seconds since last report (1.91 seconds on comm.); 5789 samples processed by 2 workers (785 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.54k samplesPerSecond , throughputPerWorker = 0.77k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:46: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.84940336 * 20480; EvalErrorPrediction = 0.51445312 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=10.2358s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:47: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:47: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:01:47:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.79235548 * 1175; EvalErrorPrediction = 0.49957447 * 1175; time = 0.8869s; samplesPerSecond = 1324.8
MPI Rank 1: 		(model aggregation stats) 1-th sync:     2.26 seconds since last report (0.19 seconds on comm.); 4916 samples processed by 2 workers (2426 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 2.18k samplesPerSecond , throughputPerWorker = 1.09k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:49:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84602168 * 1251; EvalErrorPrediction = 0.52358114 * 1251; time = 1.3676s; samplesPerSecond = 914.8
MPI Rank 1: 05/03/2016 18:01:50:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.79460940 * 1201; EvalErrorPrediction = 0.50124896 * 1201; time = 0.8201s; samplesPerSecond = 1464.4
MPI Rank 1: 		(model aggregation stats) 2-th sync:     2.13 seconds since last report (0.18 seconds on comm.); 4884 samples processed by 2 workers (2403 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 2.29k samplesPerSecond , throughputPerWorker = 1.15k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:51:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.86032081 * 1202; EvalErrorPrediction = 0.50915141 * 1202; time = 1.3104s; samplesPerSecond = 917.3
MPI Rank 1: 05/03/2016 18:01:52:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.84149612 * 1173; EvalErrorPrediction = 0.51577153 * 1173; time = 0.8040s; samplesPerSecond = 1458.9
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.19 seconds since last report (0.20 seconds on comm.); 4855 samples processed by 2 workers (2367 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 2.22k samplesPerSecond , throughputPerWorker = 1.11k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:53:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87763945 * 1194; EvalErrorPrediction = 0.52680067 * 1194; time = 1.3863s; samplesPerSecond = 861.3
MPI Rank 1: 05/03/2016 18:01:54:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.79221618 * 827; EvalErrorPrediction = 0.51269649 * 827; time = 0.5399s; samplesPerSecond = 1531.8
MPI Rank 1: 		(model aggregation stats) 4-th sync:     3.83 seconds since last report (1.95 seconds on comm.); 5825 samples processed by 2 workers (827 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 1.52k samplesPerSecond , throughputPerWorker = 0.76k samplesPerSecond
MPI Rank 1: 05/03/2016 18:01:57: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.85300231 * 20480; EvalErrorPrediction = 0.51425781 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=10.4096s
MPI Rank 1: 05/03/2016 18:01:57: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4.
MPI Rank 1: ValidateSubNetwork: InvStdOfFeatures InvStdDev operation changed, from [363 x 1] to [363].ValidateSubNetwork: MeanOfFeatures Mean operation changed, from [363 x 1] to [363].ValidateSubNetwork: Prior Mean operation changed, from [132 x 1] to [132].05/03/2016 18:01:57: learnRatePerSample reduced to 4.8828126e-05
MPI Rank 1: 05/03/2016 18:01:57: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:57: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:57: __COMPLETED__
MPI Rank 1: ~MPIWrapper