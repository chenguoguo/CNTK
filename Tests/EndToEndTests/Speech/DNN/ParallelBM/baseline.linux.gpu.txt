=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu DeviceId=0 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 17:56:15
		Last modified date: Tue May  3 11:36:23 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
		Built by philly on 87698aadbc9d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 17:56:15
		Last modified date: Tue May  3 11:36:23 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: acml
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
		Built by philly on 87698aadbc9d
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
05/03/2016 18:01:58: Redirecting stderr to file /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank0
05/03/2016 18:01:58: Redirecting stderr to file /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank1
MPI Rank 0: 05/03/2016 18:01:58: -------------------------------------------------------------------
MPI Rank 0: 05/03/2016 18:01:58: Build info: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: 		Built time: May  3 2016 17:56:15
MPI Rank 0: 05/03/2016 18:01:58: 		Last modified date: Tue May  3 11:36:23 2016
MPI Rank 0: 05/03/2016 18:01:58: 		Build type: release
MPI Rank 0: 05/03/2016 18:01:58: 		Build target: GPU
MPI Rank 0: 05/03/2016 18:01:58: 		With 1bit-SGD: yes
MPI Rank 0: 05/03/2016 18:01:58: 		Math lib: acml
MPI Rank 0: 05/03/2016 18:01:58: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 05/03/2016 18:01:58: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 05/03/2016 18:01:58: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 05/03/2016 18:01:58: 		Build Branch: HEAD
MPI Rank 0: 05/03/2016 18:01:58: 		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
MPI Rank 0: 05/03/2016 18:01:58: 		Built by philly on 87698aadbc9d
MPI Rank 0: 05/03/2016 18:01:58: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 05/03/2016 18:01:58: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Running on localhost at 2016/05/03 18:01:58
MPI Rank 0: 05/03/2016 18:01:58: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 05/03/2016 18:01:58: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 05/03/2016 18:01:58: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = 0
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=0
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 syncPeriod=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 05/03/2016 18:01:58: Commands: speechTrain
MPI Rank 0: 05/03/2016 18:01:58: Precision = "double"
MPI Rank 0: 05/03/2016 18:01:58: Using 12 CPU threads.
MPI Rank 0: 05/03/2016 18:01:58: CNTKModelPath: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 0: 05/03/2016 18:01:58: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 05/03/2016 18:01:58: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: ##############################################################################
MPI Rank 0: 05/03/2016 18:01:58: #                                                                            #
MPI Rank 0: 05/03/2016 18:01:58: # Action "train"                                                             #
MPI Rank 0: 05/03/2016 18:01:58: #                                                                            #
MPI Rank 0: 05/03/2016 18:01:58: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading script file glob_0000.scp ... 948 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Creating virgin network.
MPI Rank 0: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Created model with 25 nodes on GPU 0.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Training criterion node(s):
MPI Rank 0: 05/03/2016 18:01:58: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x19f46e8: {[features Value[363 x *]] }
MPI Rank 0: 0x225d598: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x2292138: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x22929b8: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x26ec958: {[B0 Value[512 x 1]] }
MPI Rank 0: 0x26eeae8: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x2aa30a8: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x2aa4228: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x2aa4ed8: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x2aa5d08: {[labels Value[132 x *]] }
MPI Rank 0: 0x2aa6f68: {[Prior Value[132]] }
MPI Rank 0: 0x2aac998: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x2aacaf8: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x2aaccb8: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x2aad148: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x2aad278: {[LogOfPrior Value[132]] }
MPI Rank 0: 0x2aae9d8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x2aaf198: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x2aaf3a8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x2aaf508: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2aaf6c8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x2aaf888: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x2aafa48: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x2aafc08: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x2ab0768: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x2ab0928: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2ab0ae8: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x2ab0ca8: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:01:58: 	MeanOfFeatures = Mean()
MPI Rank 0: 05/03/2016 18:01:58: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 05/03/2016 18:01:58: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:00: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:00: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:00: Starting minibatch loop.
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.57947979 * 192; EvalErrorPrediction = 0.96354167 * 192; time = 0.0207s; samplesPerSecond = 9255.2
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.45832105 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0194s; samplesPerSecond = 9873.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.29176856 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0194s; samplesPerSecond = 9873.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.15840784 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0195s; samplesPerSecond = 9853.7
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.21435783 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0195s; samplesPerSecond = 9869.9
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.14020622 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0194s; samplesPerSecond = 9876.0
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.04069876 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0194s; samplesPerSecond = 9879.6
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.04991414 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0194s; samplesPerSecond = 9877.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.88626656 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0194s; samplesPerSecond = 9877.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 4.00467833 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0194s; samplesPerSecond = 9882.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.94077029 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0195s; samplesPerSecond = 9864.9
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.78326806 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0195s; samplesPerSecond = 9867.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.94698521 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0194s; samplesPerSecond = 9878.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.66011602 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0195s; samplesPerSecond = 9867.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.98797978 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0194s; samplesPerSecond = 9875.0
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.76297655 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0194s; samplesPerSecond = 9879.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.69909670 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0194s; samplesPerSecond = 9880.6
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.83747989 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0195s; samplesPerSecond = 9869.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.82672791 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0195s; samplesPerSecond = 9869.9
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.56520696 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0195s; samplesPerSecond = 9853.7
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.40098566 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0195s; samplesPerSecond = 9856.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.50668803 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0195s; samplesPerSecond = 9865.9
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.82314351 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0194s; samplesPerSecond = 9878.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.51780740 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0194s; samplesPerSecond = 9874.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.32189431 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0195s; samplesPerSecond = 9850.7
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.42533640 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0190s; samplesPerSecond = 10079.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.42902377 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0188s; samplesPerSecond = 10208.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.42017745 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0188s; samplesPerSecond = 10209.0
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.30346679 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0188s; samplesPerSecond = 10214.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.31343403 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0188s; samplesPerSecond = 10200.3
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.22956709 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0188s; samplesPerSecond = 10212.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.54894307 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.33751842 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.25951347 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0188s; samplesPerSecond = 10208.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.24586699 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0188s; samplesPerSecond = 10211.1
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.06725828 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.39973653 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0188s; samplesPerSecond = 10200.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.34798378 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0188s; samplesPerSecond = 10207.9
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.38133778 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.19074044 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0188s; samplesPerSecond = 10201.4
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.14306337 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0188s; samplesPerSecond = 10202.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.10036521 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17040971 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0188s; samplesPerSecond = 10202.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.19888148 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.91247084 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.96972038 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.15632232 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 2.98075176 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.03076846 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0187s; samplesPerSecond = 10240.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.91480722 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0188s; samplesPerSecond = 10216.6
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.16155322 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 0: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.76157172 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0188s; samplesPerSecond = 10213.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.06347679 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10203.0
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.84053583 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0188s; samplesPerSecond = 10214.4
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.87795860 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0188s; samplesPerSecond = 10207.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.92198252 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10217.1
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.81241750 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10208.4
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.62682593 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0188s; samplesPerSecond = 10214.4
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.75758644 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74763961 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.90905834 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.76756973 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10213.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.76599748 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.83171014 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.59593490 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10220.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.64965270 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.33442260 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0188s; samplesPerSecond = 10210.1
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.67195863 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.72367540 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10197.0
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.59572337 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.53202795 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.50336278 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.77076318 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0188s; samplesPerSecond = 10217.1
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.45308521 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.54598920 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58558089 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.41075660 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10198.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.52012028 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10192.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.30719546 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.42100657 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.39894546 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.44970724 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.33418475 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.37997032 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10194.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.47517097 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10213.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.60900086 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0188s; samplesPerSecond = 10216.0
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.43300244 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.12996515 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0188s; samplesPerSecond = 10190.5
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.51181403 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0188s; samplesPerSecond = 10219.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.29330120 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10207.9
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.33352411 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.17790026 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.18521155 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0188s; samplesPerSecond = 10194.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.29833071 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.21483298 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10219.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.37232627 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0188s; samplesPerSecond = 10200.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34396058 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10216.0
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.18334302 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0188s; samplesPerSecond = 10213.3
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.07753101 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.26265833 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0188s; samplesPerSecond = 10211.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.21675905 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.18990385 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0188s; samplesPerSecond = 10234.0
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.48513433 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0188s; samplesPerSecond = 10218.2
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25336704 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10216.6
MPI Rank 0: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.13039619 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0188s; samplesPerSecond = 10201.9
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.27299748 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 0: 05/03/2016 18:02:03: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 2.99723568 * 20480; EvalErrorPrediction = 0.72426758 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.03157s
MPI Rank 0: 05/03/2016 18:02:03: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:03: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:03: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.25388628 * 519; EvalErrorPrediction = 0.63391137 * 519; time = 0.0390s; samplesPerSecond = 13322.4
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.01477571 * 529; EvalErrorPrediction = 0.53686200 * 529; time = 0.0332s; samplesPerSecond = 15929.9
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.03638222 * 494; EvalErrorPrediction = 0.55060729 * 494; time = 0.0286s; samplesPerSecond = 17260.7
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 1.97591869 * 491; EvalErrorPrediction = 0.54378819 * 491; time = 0.0286s; samplesPerSecond = 17181.6
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.17 seconds since last report (0.00 seconds on comm.); 44769483 samples processed by 2 workers (44775758 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 262443.69k samplesPerSecond , throughputPerWorker = 131221.84k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.12486189 * 488; EvalErrorPrediction = 0.53483607 * 488; time = 0.0558s; samplesPerSecond = 8742.4
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 1.99682461 * 485; EvalErrorPrediction = 0.55670103 * 485; time = 0.0285s; samplesPerSecond = 17032.5
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.98681980 * 529; EvalErrorPrediction = 0.55576560 * 529; time = 0.0384s; samplesPerSecond = 13762.1
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.94891082 * 468; EvalErrorPrediction = 0.55341880 * 468; time = 0.0262s; samplesPerSecond = 17846.9
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.16 seconds since last report (0.01 seconds on comm.); 4232 samples processed by 2 workers (2154 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 27.24k samplesPerSecond , throughputPerWorker = 13.62k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.99768818 * 499; EvalErrorPrediction = 0.53507014 * 499; time = 0.0541s; samplesPerSecond = 9219.4
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.17844696 * 494; EvalErrorPrediction = 0.57692308 * 494; time = 0.0268s; samplesPerSecond = 18438.3
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.96255558 * 479; EvalErrorPrediction = 0.53027140 * 479; time = 0.0273s; samplesPerSecond = 17528.5
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.99612126 * 488; EvalErrorPrediction = 0.54303279 * 488; time = 0.0275s; samplesPerSecond = 17764.2
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 4185 samples processed by 2 workers (2125 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 27.76k samplesPerSecond , throughputPerWorker = 13.88k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.89743886 * 506; EvalErrorPrediction = 0.52766798 * 506; time = 0.0593s; samplesPerSecond = 8532.0
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.85536959 * 512; EvalErrorPrediction = 0.52929688 * 512; time = 0.0266s; samplesPerSecond = 19268.4
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.92579626 * 497; EvalErrorPrediction = 0.49496982 * 497; time = 0.0198s; samplesPerSecond = 25108.6
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.85664750 * 502; EvalErrorPrediction = 0.52988048 * 502; time = 0.0276s; samplesPerSecond = 18199.6
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.05622489 * 476; EvalErrorPrediction = 0.56932773 * 476; time = 0.0249s; samplesPerSecond = 19133.4
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.00110796 * 487; EvalErrorPrediction = 0.53388090 * 487; time = 0.0151s; samplesPerSecond = 32253.8
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.90438413 * 499; EvalErrorPrediction = 0.51903808 * 499; time = 0.0152s; samplesPerSecond = 32775.0
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.93538095 * 475; EvalErrorPrediction = 0.51789474 * 475; time = 0.0149s; samplesPerSecond = 31900.6
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.92688744 * 506; EvalErrorPrediction = 0.53952569 * 506; time = 0.0152s; samplesPerSecond = 33234.8
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.93689941 * 472; EvalErrorPrediction = 0.53389831 * 472; time = 0.0149s; samplesPerSecond = 31705.5
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.87278053 * 490; EvalErrorPrediction = 0.53061224 * 490; time = 0.0151s; samplesPerSecond = 32482.6
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.93056324 * 477; EvalErrorPrediction = 0.50943396 * 477; time = 0.0149s; samplesPerSecond = 31972.7
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.92122823 * 469; EvalErrorPrediction = 0.52878465 * 469; time = 0.0148s; samplesPerSecond = 31672.1
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.92998622 * 495; EvalErrorPrediction = 0.53131313 * 495; time = 0.0151s; samplesPerSecond = 32748.9
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.87322468 * 322; EvalErrorPrediction = 0.54968944 * 322; time = 0.0100s; samplesPerSecond = 32303.4
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.25 seconds since last report (0.00 seconds on comm.); 7732 samples processed by 2 workers (6679 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 30.42k samplesPerSecond , throughputPerWorker = 15.21k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:03: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.99875653 * 20480; EvalErrorPrediction = 0.54526367 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.731141s
MPI Rank 0: 05/03/2016 18:02:03: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:03: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:03: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:02:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86678794 * 1939; EvalErrorPrediction = 0.50489943 * 1939; time = 0.0987s; samplesPerSecond = 19642.2
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4844 samples processed by 2 workers (2583 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 37.88k samplesPerSecond , throughputPerWorker = 18.94k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88063301 * 1944; EvalErrorPrediction = 0.53497942 * 1944; time = 0.0799s; samplesPerSecond = 24334.1
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4849 samples processed by 2 workers (2580 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.02k samplesPerSecond , throughputPerWorker = 20.51k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90227906 * 1918; EvalErrorPrediction = 0.52346194 * 1918; time = 0.0891s; samplesPerSecond = 21536.8
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4868 samples processed by 2 workers (2595 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 40.09k samplesPerSecond , throughputPerWorker = 20.04k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88640712 * 1957; EvalErrorPrediction = 0.52376086 * 1957; time = 0.0956s; samplesPerSecond = 20461.9
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.86518475 * 1942; EvalErrorPrediction = 0.52008239 * 1942; time = 0.0619s; samplesPerSecond = 31350.9
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85598666 * 1929; EvalErrorPrediction = 0.51270088 * 1929; time = 0.0439s; samplesPerSecond = 43906.8
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88794294 * 1290; EvalErrorPrediction = 0.51937984 * 1290; time = 0.0353s; samplesPerSecond = 36559.4
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 5919 samples processed by 2 workers (5161 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 39.25k samplesPerSecond , throughputPerWorker = 19.63k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.88572700 * 20480; EvalErrorPrediction = 0.52416992 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.518439s
MPI Rank 0: 05/03/2016 18:02:04: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:04: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:04: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.89976988 * 1926; EvalErrorPrediction = 0.52128764 * 1926; time = 0.0747s; samplesPerSecond = 25798.7
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4905 samples processed by 2 workers (2581 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 38.94k samplesPerSecond , throughputPerWorker = 19.47k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.79499440 * 1894; EvalErrorPrediction = 0.50844773 * 1894; time = 0.0921s; samplesPerSecond = 20563.5
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4870 samples processed by 2 workers (2537 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.59k samplesPerSecond , throughputPerWorker = 20.80k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.84956803 * 1931; EvalErrorPrediction = 0.51475919 * 1931; time = 0.0942s; samplesPerSecond = 20491.5
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4916 samples processed by 2 workers (2513 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 40.30k samplesPerSecond , throughputPerWorker = 20.15k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82336020 * 1880; EvalErrorPrediction = 0.50159574 * 1880; time = 0.0979s; samplesPerSecond = 19206.6
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.79200574 * 1880; EvalErrorPrediction = 0.49627660 * 1880; time = 0.0577s; samplesPerSecond = 32566.5
MPI Rank 0: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.80502326 * 1861; EvalErrorPrediction = 0.50994089 * 1861; time = 0.0426s; samplesPerSecond = 43690.6
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.81515951 * 1263; EvalErrorPrediction = 0.48851940 * 1263; time = 0.0287s; samplesPerSecond = 44060.7
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.00 seconds on comm.); 5789 samples processed by 2 workers (5004 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 41.74k samplesPerSecond , throughputPerWorker = 20.87k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:05: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.83787473 * 20480; EvalErrorPrediction = 0.51215820 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.503889s
MPI Rank 0: 05/03/2016 18:02:05: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:05: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:05: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.80055910 * 1897; EvalErrorPrediction = 0.49868213 * 1897; time = 0.0691s; samplesPerSecond = 27463.7
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4916 samples processed by 2 workers (2490 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 38.74k samplesPerSecond , throughputPerWorker = 19.37k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.86746838 * 1821; EvalErrorPrediction = 0.51455244 * 1821; time = 0.1038s; samplesPerSecond = 17545.9
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4884 samples processed by 2 workers (2481 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.49k samplesPerSecond , throughputPerWorker = 20.74k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89216516 * 1871; EvalErrorPrediction = 0.52057723 * 1871; time = 0.0910s; samplesPerSecond = 20551.2
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4855 samples processed by 2 workers (2488 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 41.56k samplesPerSecond , throughputPerWorker = 20.78k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81968853 * 1870; EvalErrorPrediction = 0.49144385 * 1870; time = 0.0933s; samplesPerSecond = 20037.7
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89739279 * 1899; EvalErrorPrediction = 0.51711427 * 1899; time = 0.0604s; samplesPerSecond = 31453.4
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85833241 * 1878; EvalErrorPrediction = 0.52236422 * 1878; time = 0.0423s; samplesPerSecond = 44432.9
MPI Rank 0: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86115648 * 1221; EvalErrorPrediction = 0.50696151 * 1221; time = 0.0275s; samplesPerSecond = 44345.2
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.00 seconds on comm.); 5825 samples processed by 2 workers (4998 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 41.69k samplesPerSecond , throughputPerWorker = 20.84k samplesPerSecond
MPI Rank 0: 05/03/2016 18:02:05: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84363929 * 20480; EvalErrorPrediction = 0.51025391 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.501331s
MPI Rank 0: 05/03/2016 18:02:05: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4.
MPI Rank 0: ValidateSubNetwork: InvStdOfFeatures InvStdDev operation changed, from [363 x 1] to [363].ValidateSubNetwork: MeanOfFeatures Mean operation changed, from [363 x 1] to [363].ValidateSubNetwork: Prior Mean operation changed, from [132 x 1] to [132].05/03/2016 18:02:05: learnRatePerSample reduced to 4.8828126e-05
MPI Rank 0: 05/03/2016 18:02:05: SGD: Saving checkpoint model '/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn'
MPI Rank 0: 05/03/2016 18:02:05: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:05: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 05/03/2016 18:02:05: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 05/03/2016 18:01:58: -------------------------------------------------------------------
MPI Rank 1: 05/03/2016 18:01:58: Build info: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: 		Built time: May  3 2016 17:56:15
MPI Rank 1: 05/03/2016 18:01:58: 		Last modified date: Tue May  3 11:36:23 2016
MPI Rank 1: 05/03/2016 18:01:58: 		Build type: release
MPI Rank 1: 05/03/2016 18:01:58: 		Build target: GPU
MPI Rank 1: 05/03/2016 18:01:58: 		With 1bit-SGD: yes
MPI Rank 1: 05/03/2016 18:01:58: 		Math lib: acml
MPI Rank 1: 05/03/2016 18:01:58: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 05/03/2016 18:01:58: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 05/03/2016 18:01:58: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 05/03/2016 18:01:58: 		Build Branch: HEAD
MPI Rank 1: 05/03/2016 18:01:58: 		Build SHA1: 571b092d60e131fd529081a5ed52af2dc815dc82
MPI Rank 1: 05/03/2016 18:01:58: 		Built by philly on 87698aadbc9d
MPI Rank 1: 05/03/2016 18:01:58: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 05/03/2016 18:01:58: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Running on localhost at 2016/05/03 18:01:58
MPI Rank 1: 05/03/2016 18:01:58: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 05/03/2016 18:01:58: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 05/03/2016 18:01:58: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = 0
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=0
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 syncPeriod=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 05/03/2016 18:01:58: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 05/03/2016 18:01:58: Commands: speechTrain
MPI Rank 1: 05/03/2016 18:01:58: Precision = "double"
MPI Rank 1: 05/03/2016 18:01:58: Using 12 CPU threads.
MPI Rank 1: 05/03/2016 18:01:58: CNTKModelPath: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 1: 05/03/2016 18:01:58: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 05/03/2016 18:01:58: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: ##############################################################################
MPI Rank 1: 05/03/2016 18:01:58: #                                                                            #
MPI Rank 1: 05/03/2016 18:01:58: # Action "train"                                                             #
MPI Rank 1: 05/03/2016 18:01:58: #                                                                            #
MPI Rank 1: 05/03/2016 18:01:58: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading script file glob_0000.scp ... 948 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252734 frames in 948 out of 948 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 948 utterances grouped into 3 chunks, av. chunk size: 316.0 utterances, 84244.7 frames
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Creating virgin network.
MPI Rank 1: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Created model with 25 nodes on GPU 0.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Training criterion node(s):
MPI Rank 1: 05/03/2016 18:01:58: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x2d2aad8: {[features Value[363 x *]] }
MPI Rank 1: 0x35f4e48: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x35f5358: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x35f6048: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x3b0cfb8: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x3b0dd88: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x3b0ef28: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x3b0fbd8: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x3b10a08: {[labels Value[132 x *]] }
MPI Rank 1: 0x3b11c68: {[Prior Value[132]] }
MPI Rank 1: 0x3b17508: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x3b17808: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x3b179c8: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x3b17e58: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x3b17fc8: {[LogOfPrior Value[132]] }
MPI Rank 1: 0x3b1d5c8: {[B0 Value[512 x 1]] }
MPI Rank 1: 0x3df8ca8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0x3df9468: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x3df9678: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x3df97d8: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0x3df9938: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x3df9af8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x3df9cb8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x3df9e78: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x3dfa9d8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x3dfab98: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x3dfad58: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x3dfaf18: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:01:58: 	MeanOfFeatures = Mean()
MPI Rank 1: 05/03/2016 18:01:58: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 05/03/2016 18:01:58: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252734] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:00: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:00: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:00: Starting minibatch loop.
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.57947979 * 192; EvalErrorPrediction = 0.96354167 * 192; time = 0.0209s; samplesPerSecond = 9195.8
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.45832105 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0195s; samplesPerSecond = 9871.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.29176856 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0194s; samplesPerSecond = 9873.0
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.15840784 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0195s; samplesPerSecond = 9852.7
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.21435783 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0195s; samplesPerSecond = 9868.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.14020622 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0194s; samplesPerSecond = 9877.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 4.04069876 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0194s; samplesPerSecond = 9878.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.04991414 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0194s; samplesPerSecond = 9878.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.88626656 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0194s; samplesPerSecond = 9875.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 4.00467833 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0194s; samplesPerSecond = 9883.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.94077029 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0195s; samplesPerSecond = 9862.8
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.78326806 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0195s; samplesPerSecond = 9867.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.94698521 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0194s; samplesPerSecond = 9876.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.66011602 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0195s; samplesPerSecond = 9867.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.98797978 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0194s; samplesPerSecond = 9874.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.76297655 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0194s; samplesPerSecond = 9881.1
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.69909670 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0194s; samplesPerSecond = 9878.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.83747989 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0195s; samplesPerSecond = 9867.9
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.82672791 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0195s; samplesPerSecond = 9871.0
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.56520696 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0195s; samplesPerSecond = 9854.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.40098566 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0195s; samplesPerSecond = 9855.3
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.50668803 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0195s; samplesPerSecond = 9865.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.82314351 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0194s; samplesPerSecond = 9876.0
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.51780740 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0194s; samplesPerSecond = 9876.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.32189431 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0195s; samplesPerSecond = 9865.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.42533640 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0170s; samplesPerSecond = 11280.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.42902377 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.42017745 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.30346679 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0188s; samplesPerSecond = 10212.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.31343403 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.22956709 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0188s; samplesPerSecond = 10209.0
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.54894307 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.33751842 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0188s; samplesPerSecond = 10213.3
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.25951347 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0188s; samplesPerSecond = 10194.3
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.24586699 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0188s; samplesPerSecond = 10212.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.06725828 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.39973653 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0188s; samplesPerSecond = 10200.8
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.34798378 * 192; EvalErrorPrediction = 0.78645833 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.38133778 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0188s; samplesPerSecond = 10207.9
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.19074044 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0188s; samplesPerSecond = 10197.6
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.14306337 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.10036521 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0188s; samplesPerSecond = 10192.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.17040971 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0188s; samplesPerSecond = 10201.4
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.19888148 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10210.1
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.91247084 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.96972038 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 3.15632232 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 2.98075176 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.03076846 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0188s; samplesPerSecond = 10218.2
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 2.91480722 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0188s; samplesPerSecond = 10203.0
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.16155322 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10211.1
MPI Rank 1: 05/03/2016 18:02:01:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.76157172 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0188s; samplesPerSecond = 10213.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.06347679 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.84053583 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0188s; samplesPerSecond = 10211.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.87795860 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.92198252 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10218.2
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.81241750 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10210.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.62682593 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0188s; samplesPerSecond = 10212.8
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.75758644 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.74763961 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.90905834 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.76756973 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10214.4
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.76599748 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.83171014 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0188s; samplesPerSecond = 10205.2
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.59593490 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.64965270 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0188s; samplesPerSecond = 10206.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.33442260 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.67195863 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10206.8
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.72367540 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10194.9
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.59572337 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0188s; samplesPerSecond = 10215.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.53202795 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.50336278 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.77076318 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0188s; samplesPerSecond = 10208.4
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.45308521 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10209.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.54598920 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.58558089 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.41075660 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10197.0
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.52012028 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.30719546 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.42100657 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.39894546 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10203.0
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.44970724 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.33418475 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0188s; samplesPerSecond = 10204.6
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.37997032 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.47517097 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10202.5
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.60900086 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0188s; samplesPerSecond = 10217.7
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.43300244 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0188s; samplesPerSecond = 10208.4
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.12996515 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0188s; samplesPerSecond = 10193.8
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.51181403 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0188s; samplesPerSecond = 10209.0
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.29330120 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10207.3
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.33352411 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.17790026 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.18521155 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0188s; samplesPerSecond = 10192.2
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.29833071 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0188s; samplesPerSecond = 10218.2
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.21483298 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0188s; samplesPerSecond = 10210.6
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.37232627 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0188s; samplesPerSecond = 10203.0
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.34396058 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10212.2
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.18334302 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0188s; samplesPerSecond = 10214.9
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.07753101 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0188s; samplesPerSecond = 10205.7
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.26265833 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0188s; samplesPerSecond = 10211.7
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.21675905 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0188s; samplesPerSecond = 10210.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.18990385 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0188s; samplesPerSecond = 10201.4
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.48513433 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0188s; samplesPerSecond = 10219.8
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25336704 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0188s; samplesPerSecond = 10204.1
MPI Rank 1: 05/03/2016 18:02:02:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.13039619 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0188s; samplesPerSecond = 10201.4
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.27299748 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0188s; samplesPerSecond = 10203.5
MPI Rank 1: 05/03/2016 18:02:03: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 2.99723568 * 20480; EvalErrorPrediction = 0.72426758 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.02947s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:03: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:03: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.06713643 * 249; EvalErrorPrediction = 0.52208835 * 249; time = 0.0147s; samplesPerSecond = 16980.4
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.16835808 * 239; EvalErrorPrediction = 0.57740586 * 239; time = 0.0240s; samplesPerSecond = 9970.0
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.07984091 * 274; EvalErrorPrediction = 0.55109489 * 274; time = 0.0236s; samplesPerSecond = 11594.0
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.16277557 * 277; EvalErrorPrediction = 0.60288809 * 277; time = 0.0231s; samplesPerSecond = 11997.6
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.02360967 * 280; EvalErrorPrediction = 0.54642857 * 280; time = 0.0218s; samplesPerSecond = 12851.1
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.11391771 * 283; EvalErrorPrediction = 0.59717314 * 283; time = 0.0225s; samplesPerSecond = 12555.5
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.06691231 * 239; EvalErrorPrediction = 0.57322176 * 239; time = 0.0152s; samplesPerSecond = 15752.7
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.17 seconds since last report (0.00 seconds on comm.); 64987259 samples processed by 2 workers (64985085 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 380708.12k samplesPerSecond , throughputPerWorker = 190354.06k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.00607609 * 300; EvalErrorPrediction = 0.53666667 * 300; time = 0.0232s; samplesPerSecond = 12926.6
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.99849291 * 269; EvalErrorPrediction = 0.53159851 * 269; time = 0.0234s; samplesPerSecond = 11500.1
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.14699482 * 274; EvalErrorPrediction = 0.57299270 * 274; time = 0.0224s; samplesPerSecond = 12243.6
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.04126317 * 289; EvalErrorPrediction = 0.58477509 * 289; time = 0.0130s; samplesPerSecond = 22212.0
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.06113963 * 280; EvalErrorPrediction = 0.61785714 * 280; time = 0.0220s; samplesPerSecond = 12753.9
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.05149355 * 262; EvalErrorPrediction = 0.53435115 * 262; time = 0.0224s; samplesPerSecond = 11699.0
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.07615796 * 256; EvalErrorPrediction = 0.56640625 * 256; time = 0.0244s; samplesPerSecond = 10474.2
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.93205618 * 271; EvalErrorPrediction = 0.53874539 * 271; time = 0.0110s; samplesPerSecond = 24560.4
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.16 seconds since last report (0.00 seconds on comm.); 4232 samples processed by 2 workers (2078 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 27.28k samplesPerSecond , throughputPerWorker = 13.64k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.05205732 * 266; EvalErrorPrediction = 0.58270677 * 266; time = 0.0224s; samplesPerSecond = 11854.9
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.14681400 * 292; EvalErrorPrediction = 0.60616438 * 292; time = 0.0228s; samplesPerSecond = 12830.1
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.06088333 * 281; EvalErrorPrediction = 0.56583630 * 281; time = 0.0246s; samplesPerSecond = 11408.9
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.96455898 * 269; EvalErrorPrediction = 0.51672862 * 269; time = 0.0207s; samplesPerSecond = 13002.7
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.95106467 * 293; EvalErrorPrediction = 0.52559727 * 293; time = 0.0228s; samplesPerSecond = 12839.6
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.95943138 * 262; EvalErrorPrediction = 0.51145038 * 262; time = 0.0225s; samplesPerSecond = 11662.6
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.07155768 * 296; EvalErrorPrediction = 0.54729730 * 296; time = 0.0110s; samplesPerSecond = 27009.8
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 4185 samples processed by 2 workers (2060 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 27.72k samplesPerSecond , throughputPerWorker = 13.86k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.95713212 * 278; EvalErrorPrediction = 0.50719424 * 278; time = 0.0198s; samplesPerSecond = 14043.2
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.03053119 * 291; EvalErrorPrediction = 0.53608247 * 291; time = 0.0209s; samplesPerSecond = 13921.4
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.09969286 * 299; EvalErrorPrediction = 0.55852843 * 299; time = 0.0361s; samplesPerSecond = 8274.3
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.85965889 * 273; EvalErrorPrediction = 0.50183150 * 273; time = 0.0229s; samplesPerSecond = 11941.2
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.89805579 * 190; EvalErrorPrediction = 0.51578947 * 190; time = 0.0152s; samplesPerSecond = 12540.4
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.25 seconds since last report (0.15 seconds on comm.); 7732 samples processed by 2 workers (1053 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 30.42k samplesPerSecond , throughputPerWorker = 15.21k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:03: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 1.99875653 * 20480; EvalErrorPrediction = 0.54526367 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.731155s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:03: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:03: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:02:03:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.92990384 * 1133; EvalErrorPrediction = 0.54368932 * 1133; time = 0.0485s; samplesPerSecond = 23378.2
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.02 seconds on comm.); 4844 samples processed by 2 workers (2261 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 37.91k samplesPerSecond , throughputPerWorker = 18.96k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.93806210 * 1128; EvalErrorPrediction = 0.52659574 * 1128; time = 0.0763s; samplesPerSecond = 14777.7
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.84931024 * 1154; EvalErrorPrediction = 0.51473137 * 1154; time = 0.0561s; samplesPerSecond = 20556.5
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4849 samples processed by 2 workers (2269 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.02k samplesPerSecond , throughputPerWorker = 20.51k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88039762 * 1115; EvalErrorPrediction = 0.51748879 * 1115; time = 0.0619s; samplesPerSecond = 18005.1
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89689671 * 1130; EvalErrorPrediction = 0.54336283 * 1130; time = 0.0435s; samplesPerSecond = 25963.3
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4868 samples processed by 2 workers (2273 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 40.09k samplesPerSecond , throughputPerWorker = 20.04k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.88822901 * 1143; EvalErrorPrediction = 0.53893263 * 1143; time = 0.0777s; samplesPerSecond = 14703.2
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.92708667 * 758; EvalErrorPrediction = 0.53693931 * 758; time = 0.0557s; samplesPerSecond = 13605.0
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.08 seconds on comm.); 5919 samples processed by 2 workers (758 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 39.25k samplesPerSecond , throughputPerWorker = 19.63k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.88572700 * 20480; EvalErrorPrediction = 0.52416992 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.518444s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:04: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:04: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.83907230 * 1146; EvalErrorPrediction = 0.51308901 * 1146; time = 0.0563s; samplesPerSecond = 20352.0
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4905 samples processed by 2 workers (2324 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 38.98k samplesPerSecond , throughputPerWorker = 19.49k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.83174615 * 1178; EvalErrorPrediction = 0.50509338 * 1178; time = 0.0665s; samplesPerSecond = 17709.0
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89682396 * 1141; EvalErrorPrediction = 0.53812445 * 1141; time = 0.0582s; samplesPerSecond = 19594.0
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4870 samples processed by 2 workers (2333 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.59k samplesPerSecond , throughputPerWorker = 20.80k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88667869 * 1192; EvalErrorPrediction = 0.53271812 * 1192; time = 0.0587s; samplesPerSecond = 20313.2
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80769004 * 1192; EvalErrorPrediction = 0.52265101 * 1192; time = 0.0625s; samplesPerSecond = 19065.6
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4916 samples processed by 2 workers (2403 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 40.30k samplesPerSecond , throughputPerWorker = 20.15k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.82030293 * 1211; EvalErrorPrediction = 0.49958712 * 1211; time = 0.0593s; samplesPerSecond = 20423.7
MPI Rank 1: 05/03/2016 18:02:04:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.94035074 * 785; EvalErrorPrediction = 0.54267516 * 785; time = 0.0418s; samplesPerSecond = 18781.3
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.07 seconds on comm.); 5789 samples processed by 2 workers (785 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 41.72k samplesPerSecond , throughputPerWorker = 20.86k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:05: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.83787473 * 20480; EvalErrorPrediction = 0.51215820 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.503896s
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:05: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000 ,block momentum time constant = 2954.6394 ,block learning rate = 1.0000 ,sync period = 2048 samples ,, using Nesterov style block momentum, resetting SGD momentum after sync
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:05: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.78955055 * 1175; EvalErrorPrediction = 0.49021277 * 1175; time = 0.0612s; samplesPerSecond = 19203.7
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4916 samples processed by 2 workers (2426 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 38.77k samplesPerSecond , throughputPerWorker = 19.38k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.83857800 * 1251; EvalErrorPrediction = 0.51239009 * 1251; time = 0.0624s; samplesPerSecond = 20039.7
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.78033156 * 1201; EvalErrorPrediction = 0.50374688 * 1201; time = 0.0621s; samplesPerSecond = 19332.0
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4884 samples processed by 2 workers (2403 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.49k samplesPerSecond , throughputPerWorker = 20.74k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.85251684 * 1202; EvalErrorPrediction = 0.51331115 * 1202; time = 0.0554s; samplesPerSecond = 21678.4
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83755982 * 1173; EvalErrorPrediction = 0.50809889 * 1173; time = 0.0609s; samplesPerSecond = 19260.1
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4855 samples processed by 2 workers (2367 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 41.56k samplesPerSecond , throughputPerWorker = 20.78k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.86874300 * 1194; EvalErrorPrediction = 0.52680067 * 1194; time = 0.0557s; samplesPerSecond = 21420.5
MPI Rank 1: 05/03/2016 18:02:05:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.78761926 * 827; EvalErrorPrediction = 0.51753325 * 827; time = 0.0365s; samplesPerSecond = 22672.4
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.14 seconds since last report (0.07 seconds on comm.); 5825 samples processed by 2 workers (827 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 41.68k samplesPerSecond , throughputPerWorker = 20.84k samplesPerSecond
MPI Rank 1: 05/03/2016 18:02:05: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84363929 * 20480; EvalErrorPrediction = 0.51025391 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.501333s
MPI Rank 1: 05/03/2016 18:02:05: Loading (rolling back to) previous model with best training-criterion value: /tmp/cntk-test-20160503180003.29154/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4.
MPI Rank 1: ValidateSubNetwork: InvStdOfFeatures InvStdDev operation changed, from [363 x 1] to [363].ValidateSubNetwork: MeanOfFeatures Mean operation changed, from [363 x 1] to [363].ValidateSubNetwork: Prior Mean operation changed, from [132 x 1] to [132].05/03/2016 18:02:05: learnRatePerSample reduced to 4.8828126e-05
MPI Rank 1: 05/03/2016 18:02:05: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:05: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 05/03/2016 18:02:05: __COMPLETED__
MPI Rank 1: ~MPIWrapper