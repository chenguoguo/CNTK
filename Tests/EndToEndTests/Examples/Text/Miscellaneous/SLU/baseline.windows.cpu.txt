=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu DeviceId=-1 timestamping=true NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 13:23:06
		Last modified date: Mon Apr 18 00:00:12 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: af96f7cce6c3c78a4f1e9315e061291c79360e12
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
05/03/2016 14:07:22: -------------------------------------------------------------------
05/03/2016 14:07:22: Build info: 

05/03/2016 14:07:22: 		Built time: May  3 2016 13:23:06
05/03/2016 14:07:22: 		Last modified date: Mon Apr 18 00:00:12 2016
05/03/2016 14:07:22: 		Build type: Release
05/03/2016 14:07:22: 		Build target: GPU
05/03/2016 14:07:22: 		With 1bit-SGD: no
05/03/2016 14:07:22: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
05/03/2016 14:07:22: 		CUB_PATH: C:\src\cub-1.4.1
05/03/2016 14:07:22: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
05/03/2016 14:07:22: 		Build Branch: HEAD
05/03/2016 14:07:22: 		Build SHA1: af96f7cce6c3c78a4f1e9315e061291c79360e12
05/03/2016 14:07:22: 		Built by svcphil on LIANA-09-w
05/03/2016 14:07:22: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
05/03/2016 14:07:22: -------------------------------------------------------------------

05/03/2016 14:07:22: Running on DPHAIM-25 at 2016/05/03 14:07:22
05/03/2016 14:07:22: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU/rnnlu.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu  DeviceId=-1  timestamping=true  NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU  ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu  OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu



05/03/2016 14:07:22: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/03/2016 14:07:22: precision="float"
deviceId = $DeviceId$
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=$ExpDir$/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=$ExpDir$/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=$DataDir$/inputmap.txt
          file=$DataDir$/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=$ExpDir$/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=$DataDir$/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=$DataDir$/output.txt
            labelMappingFile=$ExpDir$/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=$ExpDir$/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=$DataDir$/output.txt
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=$ExpDir$/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=$DataDir$/inputmap.txt
      file=$DataDir$/atis.test.apos.pred.pos.head.IOB.simple
      wfile=$ExpDir$/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=$ExpDir$/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=$DataDir$/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=$DataDir$/output.txt
        labelDim=127
        labelMappingFile=$ExpDir$/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=$OutDir$/output.rec.txt
            token=$DataDir$/output.txt
        ]
        labels=[
            file=$OutDir$/output.lbl.txt
            token=$DataDir$/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
DeviceId=-1
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu

05/03/2016 14:07:22: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/03/2016 14:07:22: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/03/2016 14:07:22: precision="float"
deviceId = -1
command=LSTM:LSTMTest
traceLevel=1
LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]
LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
DeviceId=-1
timestamping=true
NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu

05/03/2016 14:07:22: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/03/2016 14:07:22: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnnlu.cntk:command=LSTM:LSTMTest
configparameters: rnnlu.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU
configparameters: rnnlu.cntk:deviceId=-1
configparameters: rnnlu.cntk:ExpDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:LSTM=[
    action=train
	makeMode=true
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    SimpleNetworkBuilder=[
        rnnType=LSTM
        layerSizes=2832:50:300:300:300:127
        lookupTableOrder=3
        recurrentLayer=2:3:4
        defaultHiddenActivity=0.1
        initValueScale=6.0
        trainingCriterion=crossentropywithsoftmax
        evalCriterion=crossentropywithsoftmax
    ]
    SGD=[
maxEpochs=100   
epochSize=71524     
        minibatchSize=10000
        learningRatesPerSample=0.1
        momentumAsTimeConstant=1000
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=15.0
        numMBsToShowResult=50
        loadBestModel=true
        AutoAdjust=[
            autoAdjustLR=adjustafterepoch
            reduceLearnRateIfImproveLessThan=0
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            learnRateIncreaseFactor=1.382
        ]
    ]
    reader=[
        readerType=LUSequenceReader
        wordContext=0:1:2
        randomize=None
nbruttsineachrecurrentiter=10  
        equalLength = false
        wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
        wsize=256
        wrecords=1000
        windowSize=10000
        unk="<unk>"
          wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
          file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
          features=[
            dim=0
            sectionType=data
          ]
          sequence=[
            dim=1
            wrecords=2
            sectionType=data
          ]
          labelIn=[
            dim=1
            usewordmap=true
            labelDim=10000
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
            labelType=Category
            beginSequence="BOS"
            endSequence="EOS"
            usewordmap=true
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
            elementSize=4
            sectionType=labels
            mapping=[
              wrecords=11
              elementSize=10
              sectionType=labelMapping
            ]
            category=[
              dim=11
              sectionType=categoryLabels
            ]
          ]
          labels=[
            dim=1
            labelType=Category
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
            labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
            sectionType=labels
            mapping=[
              sectionType=labelMapping
            ]
            category=[
              sectionType=categoryLabels
            ]
          ]
    ]
    cvReader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      nbruttsineachrecurrentiter=200
      equalLength = false
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.valid.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple
      features=[
        dim=0
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.in.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
]

configparameters: rnnlu.cntk:LSTMTest=[
    action=write
    epochSize=4430000
    defaultHiddenActivity=0.1
    modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
    outputNodeNames=outputs:labels
    reader=[
      readerType=LUSequenceReader
      randomize=None
      wordContext=0:1:2
      unk="<unk>"
      wordmap=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/inputmap.txt
      file=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple
      wfile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sequenceSentence.bin
      wsize=256
      wrecords=1000
      windowSize=10000
      features=[
        dim=0 
        sectionType=data
      ]
      sequence=[
        dim=1
        wrecords=2
        sectionType=data
      ]
      labelIn=[
        dim=1
        labelDim=10000
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.txt
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        usewordmap=true
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/input.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=11
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=11
          sectionType=categoryLabels
        ]
      ]
      labels=[
        dim=1
        labelType=Category
        beginSequence="BOS"
        endSequence="EOS"
        token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        labelDim=127
        labelMappingFile=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/sentenceLabels.out.txt
        elementSize=4
        sectionType=labels
        mapping=[
          wrecords=3
          elementSize=10
          sectionType=labelMapping
        ]
        category=[
          dim=3
          sectionType=categoryLabels
        ]
      ]
    ]
    writer=[
        writerType=LUSequenceWriter
        outputs=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/output.rec.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
        labels=[
            file=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/output.lbl.txt
            token=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/output.txt
        ]
    ]
]

configparameters: rnnlu.cntk:NdlDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Examples\Text\Miscellaneous\SLU
configparameters: rnnlu.cntk:OutDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:precision=float
configparameters: rnnlu.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu
configparameters: rnnlu.cntk:timestamping=true
configparameters: rnnlu.cntk:traceLevel=1
05/03/2016 14:07:22: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/03/2016 14:07:22: Commands: LSTM LSTMTest
05/03/2016 14:07:22: Precision = "float"
05/03/2016 14:07:22: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn
05/03/2016 14:07:22: CNTKCommandTrainInfo: LSTM : 100
05/03/2016 14:07:22: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 100

05/03/2016 14:07:22: ##############################################################################
05/03/2016 14:07:22: #                                                                            #
05/03/2016 14:07:22: # Action "train"                                                             #
05/03/2016 14:07:22: #                                                                            #
05/03/2016 14:07:22: ##############################################################################

05/03/2016 14:07:22: CNTKCommandTrainBegin: LSTM
SimpleNetworkBuilder Using CPU
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.train.apos.pred.pos.head.IOB.simple
BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.dev.IOB.simple

05/03/2016 14:07:22: Creating virgin network.

Post-processing network...

3 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *] -> [300 x *]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300] -> [300]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300] -> [300]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300] -> [300]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300] -> [300]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300] -> [300]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300] -> [300]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300] -> [300]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300] -> [300]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300] -> [300]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300] -> [300]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300] -> [300]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300] -> [300]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300] -> [300]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300] -> [300]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300] -> [300]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300] -> [300]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300] -> [300]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *], [300] -> [300 x 1 x *]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300] -> [300]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *], [127 x 1 x *] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *] -> [127 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *] -> [127 x 1 x *]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *] -> [300 x 1 x *]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *], [300 x 1] -> [300 x 1 x *]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/03/2016 14:07:22: Created model with 168 nodes on CPU.

05/03/2016 14:07:22: Training criterion node(s):
05/03/2016 14:07:22: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[127 x 1 x *]] [PosteriorProb Value[127 x 1 x *]] [features Gradient[2832 x *]] [labels Gradient[127 x *]] [outputs Gradient[127 x 1 x *]] }
00000044B9AF65F0: {[features Value[2832 x *]] }
00000044B9AF6730: {[bf0 Value[300 x 1]] }
00000044B9AF6870: {[WXF0 Value[300 x 150]] }
00000044B9AF6AF0: {[WXO0 Value[300 x 150]] }
00000044B9AF6E10: {[WXI0 Value[300 x 150]] }
00000044B9AF6EB0: {[WXC0 Value[300 x 150]] }
00000044B9AF6FF0: {[E0 Value[50 x 944]] }
00000044B9AF7130: {[bo0 Value[300 x 1]] }
00000044B9AF7270: {[bc0 Value[300 x 1]] }
00000044B9AF73B0: {[bi0 Value[300 x 1]] }
00000044B9BB4FC0: {[WHC0 Value[300 x 300]] }
00000044B9BB5240: {[AutoName6 Value[300 x 1 x *]] }
00000044B9BB5420: {[WCI0 Value[300 x 1]] }
00000044B9BB5600: {[WCO0 Value[300 x 1]] }
00000044B9BB56A0: {[AutoName2 Value[300 x 1 x *]] [WXC0 Gradient[300 x 150]] }
00000044B9BB57E0: {[AutoName5 Value[300 x 1 x *]] }
00000044B9BB5BA0: {[WHI0 Value[300 x 300]] }
00000044B9BB5CE0: {[AutoName0 Value[300 x 1 x *]] }
00000044B9BB5E20: {[AutoName1 Value[300 x 1 x *]] }
00000044B9BB5EC0: {[AutoName3 Value[300 x 1 x *]] }
00000044B9BB6280: {[WHO0 Value[300 x 300]] }
00000044B9BB6460: {[WCF0 Value[300 x 1]] }
00000044B9BB66E0: {[AutoName4 Value[300 x 1 x *]] }
00000044B9BB6960: {[WHF0 Value[300 x 300]] }
00000044BB8F9F70: {[WXC2 Value[300 x 300]] }
00000044BB8FA010: {[WCF2 Value[300 x 1]] }
00000044BB8FA0B0: {[WHO2 Value[300 x 300]] }
00000044BB8FA290: {[AutoName27 Gradient[300 x 1 x *]] [AutoName39 Value[300 x 1 x *]] }
00000044BB8FA510: {[bi2 Value[300 x 1]] }
00000044BB8FA5B0: {[WHC2 Value[300 x 300]] }
00000044BB8FA650: {[AutoName15 Gradient[300 x 1 x *]] [AutoName43 Value[300 x 1 x *]] }
00000044BB8FA6F0: {[WHI2 Value[300 x 300]] }
00000044BB8FA970: {[AutoName40 Value[300 x 1 x *]] [WXC2 Gradient[300 x 300]] }
00000044BB8FAAB0: {[bo2 Value[300 x 1]] }
00000044BB8FAD30: {[WXF2 Value[300 x 300]] }
00000044BB8FADD0: {[bc2 Value[300 x 1]] }
00000044BB8FB050: {[bf2 Value[300 x 1]] }
00000044BB8FB190: {[AutoName38 Value[300 x 1 x *]] [WHI0 Gradient[300 x 300]] }
00000044BB8FB230: {[WHF2 Value[300 x 300]] }
00000044BB8FB370: {[AutoName30 Gradient[300 x 1 x *]] [AutoName41 Value[300 x 1 x *]] }
00000044BB8FB5F0: {[WCI2 Value[300 x 1]] }
00000044BB8FB870: {[WCO2 Value[300 x 1]] }
00000044BB8FB910: {[WXO2 Value[300 x 300]] }
00000044BB8FBB90: {[AutoName20 Gradient[300 x 1 x *]] [AutoName42 Value[300 x 1 x *]] }
00000044BB8FBE10: {[WXI2 Value[300 x 300]] }
00000044C1AE7100: {[bi3 Value[300 x 1]] }
00000044C1AE7240: {[bf3 Value[300 x 1]] }
00000044C1AE7740: {[bo3 Value[300 x 1]] }
00000044C1AE77E0: {[bc3 Value[300 x 1]] }
00000044C1AE8000: {[WXF3 Value[300 x 300]] }
00000044C1AE8500: {[WXC3 Value[300 x 300]] }
00000044C1AE8820: {[AutoName44 Value[300 x 1 x *]] [WCI0 Gradient[300 x 1]] }
00000044C1AE8960: {[WXI3 Value[300 x 300]] }
00000044C1AE8B40: {[WXO3 Value[300 x 300]] }
00000044C1AF2FD0: {[AutoName78 Value[300 x 1 x *]] [WXC3 Gradient[300 x 300]] }
00000044C1AF3070: {[AutoName12 Gradient[300 x 1 x *]] [AutoName58 Gradient[300 x 1 x *]] [AutoName80 Value[300 x 1 x *]] }
00000044C1AF3110: {[AutoName65 Gradient[300 x 1 x *]] [AutoName77 Value[300 x 1 x *]] [AutoName8 Gradient[300 x 1 x *]] }
00000044C1AF31B0: {[WHI3 Value[300 x 300]] }
00000044C1AF3250: {[AutoName53 Gradient[300 x 1 x *]] [AutoName81 Value[300 x 1 x *]] }
00000044C1AF34D0: {[AutoName82 Value[300 x 1 x *]] [WCI2 Gradient[300 x 1]] }
00000044C1AF37F0: {[WHF3 Value[300 x 300]] }
00000044C1AF3C50: {[WCI3 Value[300 x 1]] }
00000044C1AF3CF0: {[WHO3 Value[300 x 300]] }
00000044C1AF43D0: {[AutoName68 Gradient[300 x 1 x *]] [AutoName79 Value[300 x 1 x *]] }
00000044C1AF4470: {[WCF3 Value[300 x 1]] }
00000044C1AF4970: {[AutoName76 Value[300 x 1 x *]] [WHI2 Gradient[300 x 300]] }
00000044C1AF4B50: {[WCO3 Value[300 x 1]] }
00000044C1AF4D30: {[WHC3 Value[300 x 300]] }
00000044C1B022B0: {[outputs Value[127 x 1 x *]] }
00000044C1B02350: {[AutoName7 Value[300 x 1 x *]] }
00000044C1B023F0: {[AutoName10 Value[300 x 1 x *]] [WXI0 Gradient[300 x 150]] }
00000044C1B02490: {[AutoName14 Value[300 x 1 x *]] }
00000044C1B02530: {[AutoName16 Value[300 x *]] [AutoName9 Gradient[300 x *]] [bf0 Gradient[300 x 1]] }
00000044C1B02710: {[AutoName25 Value[300 x 1 x *]] }
00000044C1B027B0: {[labels Value[127 x *]] }
00000044C1B02850: {[AutoName31 Value[300 x *]] [E0 Gradient[50 x 944]] }
00000044C1B028F0: {[AutoName32 Value[300 x 1 x *]] [WXO0 Gradient[300 x 150]] }
00000044C1B02A30: {[LookupTable Value[150 x *]] }
00000044C1B02C10: {[CrossEntropyWithSoftmax Value[1]] }
00000044C1B02CB0: {[AutoName22 Value[300 x *]] [AutoName31 Gradient[300 x *]] }
00000044C1B02D50: {[AutoName21 Value[300 x 1 x *]] }
00000044C1B02DF0: {[AutoName30 Value[300 x 1 x *]] }
00000044C1B02FD0: {[AutoName20 Value[300 x 1 x *]] }
00000044C1B03070: {[AutoName15 Value[300 x 1 x *]] }
00000044C1B031B0: {[W4 Value[127 x 300]] }
00000044C1B034D0: {[AutoName24 Value[300 x 1 x *]] }
00000044C1B03570: {[AutoName8 Value[300 x 1 x *]] }
00000044C1B03610: {[AutoName22 Gradient[300 x *]] [AutoName9 Value[300 x *]] [bo0 Gradient[300 x 1]] }
00000044C1B03750: {[AutoName26 Value[300 x 1 x *]] }
00000044C1B037F0: {[AutoName27 Value[300 x 1 x *]] }
00000044C1B03890: {[AutoName18 Value[300 x 1 x *]] }
00000044C1B03930: {[AutoName19 Value[300 x 1 x *]] }
00000044C1B039D0: {[AutoName13 Value[300 x 1 x *]] }
00000044C1B03A70: {[AutoName11 Value[300 x 1 x *]] }
00000044C1B03C50: {[AutoName33 Value[300 x 1 x *]] }
00000044C1B03CF0: {[AutoName23 Value[300 x 1 x *]] [WXF0 Gradient[300 x 150]] }
00000044C1B03D90: {[AutoName12 Value[300 x 1 x *]] }
00000044C1B03E30: {[AutoName17 Value[300 x 1 x *]] }
00000044C1B19D30: {[AutoName111 Value[300 x 1 x *]] }
00000044C1B19E70: {[W4 Gradient[127 x 300]] }
00000044C1B19F10: {[AutoName28 Gradient[300 x 1 x *]] [AutoName70 Gradient[300 x 1 x *]] [AutoName89 Gradient[300 x 1 x *]] }
00000044C1B19FB0: {[AutoName92 Gradient[300 x 1 x *]] [bi3 Gradient[300 x 1]] }
00000044C1B1A050: {[AutoName34 Gradient[300 x 1 x *]] [AutoName61 Gradient[300 x 1 x *]] [AutoName83 Gradient[300 x 1 x *]] }
00000044C1B1A0F0: {[AutoName94 Gradient[300 x 1 x *]] }
00000044C1B1A190: {[AutoName63 Gradient[300 x 1 x *]] [AutoName7 Gradient[300 x 1 x *]] [AutoName87 Value[300 x 1 x *]] }
00000044C1B1A230: {[AutoName37 Gradient[300 x 1 x *]] [AutoName40 Gradient[300 x 1 x *]] [AutoName90 Value[300 x 1 x *]] }
00000044C1B1A2D0: {[AutoName104 Value[300 x 1 x *]] }
00000044C1B1A370: {[CrossEntropyWithSoftmax Gradient[1]] }
00000044C1B1A410: {[AutoName110 Gradient[300 x 1 x *]] }
00000044C1B1A4B0: {[AutoName94 Value[300 x 1 x *]] }
00000044C1B1A550: {[WCO3 Gradient[300 x 1]] }
00000044C1B1A5F0: {[AutoName91 Gradient[300 x 1 x *]] }
00000044C1B1A690: {[WCF2 Gradient[300 x 1]] }
00000044C1B1A730: {[AutoName93 Value[300 x 1 x *]] }
00000044C1B1A7D0: {[bc0 Gradient[300 x 1]] }
00000044C1B1A870: {[WCI3 Gradient[300 x 1]] }
00000044C1B1A910: {[AutoName110 Value[300 x 1 x *]] }
00000044C1B1A9B0: {[AutoName88 Gradient[300 x 1 x *]] [WHF2 Gradient[300 x 300]] }
00000044C1B1AA50: {[AutoName80 Gradient[300 x 1 x *]] [WHC0 Gradient[300 x 300]] }
00000044C1B1AAF0: {[AutoName112 Value[300 x 1 x *]] }
00000044C1B1AB90: {[AutoName112 Gradient[300 x 1 x *]] [AutoName114 Gradient[127 x 1 x *]] }
00000044C1B1AC30: {[AutoName109 Gradient[300 x 1 x *]] [WCO2 Gradient[300 x 1]] }
00000044C1B1ACD0: {[AutoName103 Value[300 x 1 x *]] [AutoName33 Gradient[300 x 1 x *]] [AutoName48 Gradient[300 x 1 x *]] }
00000044C1B1AE10: {[AutoName111 Gradient[300 x 1 x *]] [AutoName114 Value[127 x 1 x *]] }
00000044C1B1AEB0: {[AutoName95 Gradient[300 x 1 x *]] }
00000044C1B1AF50: {[AutoName79 Gradient[300 x 1 x *]] [WHO2 Gradient[300 x 300]] }
00000044C1B1AFF0: {[AutoName93 Gradient[300 x 1 x *]] }
00000044C1B1B090: {[WHC3 Gradient[300 x 300]] }
00000044C1B1B130: {[AutoName19 Gradient[300 x 1 x *]] [AutoName39 Gradient[300 x 1 x *]] [AutoName89 Value[300 x 1 x *]] }
00000044C1B1B1D0: {[AutoName105 Gradient[300 x 1 x *]] }
00000044C1B1B270: {[AutoName14 Gradient[300 x 1 x *]] [AutoName43 Gradient[300 x 1 x *]] [AutoName83 Value[300 x 1 x *]] }
00000044C1B1B310: {[AutoName90 Gradient[300 x 1 x *]] }
00000044C1B1B3B0: {[AutoName104 Gradient[300 x 1 x *]] }
00000044C1B1B450: {[AutoName64 Gradient[300 x 1 x *]] [AutoName84 Value[300 x 1 x *]] }
00000044C1B1B590: {[AutoName103 Gradient[300 x 1 x *]] [AutoName46 Gradient[300 x 1 x *]] [AutoName6 Gradient[300 x 1 x *]] }
00000044C1B1B630: {[AutoName105 Value[300 x 1 x *]] }
00000044C1B1B6D0: {[bc3 Gradient[300 x 1]] }
00000044C1B1B770: {[AutoName113 Gradient[300 x 1 x *]] }
00000044C1B1B8B0: {[AutoName16 Gradient[300 x *]] [AutoName62 Gradient[300 x 1 x *]] [AutoName87 Gradient[300 x 1 x *]] [bi0 Gradient[300 x 1]] }
00000044C1B1B950: {[AutoName113 Value[300 x 1 x *]] }
00000044C1B1B9F0: {[AutoName91 Value[300 x 1 x *]] }
00000044C1B1BA90: {[AutoName18 Gradient[300 x 1 x *]] [AutoName59 Gradient[300 x 1 x *]] [AutoName88 Value[300 x 1 x *]] }
00000044C1B1BB30: {[AutoName95 Value[300 x 1 x *]] }
00000044C1B1BBD0: {[AutoName102 Value[300 x 1 x *]] [WCF0 Gradient[300 x 1]] }
00000044C2098FE0: {[AutoName35 Gradient[300 x 1 x *]] [AutoName69 Value[300 x 1 x *]] }
00000044C2099080: {[AutoName28 Value[300 x 1 x *]] }
00000044C2099120: {[AutoName10 Gradient[300 x 1 x *]] [AutoName65 Value[300 x 1 x *]] }
00000044C20991C0: {[AutoName36 Value[300 x 1 x *]] }
00000044C2099260: {[AutoName37 Value[300 x 1 x *]] }
00000044C2099300: {[AutoName29 Value[300 x 1 x *]] }
00000044C20993A0: {[AutoName47 Value[300 x 1 x *]] [AutoName60 Gradient[300 x 1 x *]] [bo2 Gradient[300 x 1]] }
00000044C2099440: {[AutoName45 Value[300 x 1 x *]] [AutoName5 Gradient[300 x 1 x *]] }
00000044C20994E0: {[AutoName1 Gradient[300 x 1 x *]] [AutoName51 Value[300 x 1 x *]] }
00000044C2099580: {[AutoName53 Value[300 x 1 x *]] }
00000044C2099620: {[AutoName34 Value[300 x 1 x *]] }
00000044C20996C0: {[AutoName72 Value[300 x 1 x *]] }
00000044C2099760: {[AutoName67 Value[300 x 1 x *]] }
00000044C2099800: {[AutoName73 Value[300 x 1 x *]] }
00000044C20998A0: {[AutoName66 Value[300 x 1 x *]] }
00000044C2099940: {[AutoName99 Value[300 x 1 x *]] [WXF3 Gradient[300 x 300]] }
00000044C20999E0: {[AutoName71 Value[300 x 1 x *]] }
00000044C2099A80: {[AutoName11 Gradient[300 x 1 x *]] [AutoName63 Value[300 x 1 x *]] }
00000044C2099B20: {[AutoName64 Value[300 x 1 x *]] }
00000044C2099BC0: {[AutoName2 Gradient[300 x 1 x *]] [AutoName52 Value[300 x 1 x *]] [LookupTable Gradient[150 x *]] }
00000044C2099C60: {[AutoName57 Value[300 x 1 x *]] }
00000044C2099D00: {[AutoName85 Value[300 x 1 x *]] [AutoName98 Gradient[300 x 1 x *]] [bo3 Gradient[300 x 1]] }
00000044C2099DA0: {[AutoName107 Value[300 x 1 x *]] [AutoName73 Gradient[300 x 1 x *]] }
00000044C2099E40: {[AutoName108 Value[300 x 1 x *]] [WXO3 Gradient[300 x 300]] }
00000044C2099EE0: {[AutoName21 Gradient[300 x 1 x *]] [AutoName50 Value[300 x 1 x *]] }
00000044C2099F80: {[AutoName56 Value[300 x 1 x *]] }
00000044C209A020: {[AutoName74 Value[300 x 1 x *]] }
00000044C209A0C0: {[AutoName75 Value[300 x 1 x *]] }
00000044C209A160: {[AutoName107 Gradient[300 x 1 x *]] [AutoName74 Gradient[300 x 1 x *]] [AutoName98 Value[300 x 1 x *]] }
00000044C209A200: {[AutoName109 Value[300 x 1 x *]] }
00000044C209A2A0: {[AutoName86 Value[300 x 1 x *]] [WXI3 Gradient[300 x 300]] }
00000044C209A340: {[AutoName35 Value[300 x 1 x *]] }
00000044C209A3E0: {[AutoName48 Value[300 x 1 x *]] [WXI2 Gradient[300 x 300]] }
00000044C209A480: {[AutoName13 Gradient[300 x 1 x *]] [AutoName59 Value[300 x 1 x *]] }
00000044C209A520: {[AutoName70 Value[300 x 1 x *]] [WXO2 Gradient[300 x 300]] }
00000044C209A5C0: {[AutoName61 Value[300 x 1 x *]] [WXF2 Gradient[300 x 300]] }
00000044C209A660: {[AutoName17 Gradient[300 x 1 x *]] [AutoName62 Value[300 x 1 x *]] }
00000044C209A700: {[AutoName26 Gradient[300 x 1 x *]] [AutoName46 Value[300 x 1 x *]] }
00000044C209A7A0: {[AutoName25 Gradient[300 x 1 x *]] [AutoName49 Value[300 x 1 x *]] }
00000044C209A840: {[AutoName85 Gradient[300 x 1 x *]] [AutoName92 Value[300 x 1 x *]] [bf3 Gradient[300 x 1]] }
00000044C209A8E0: {[AutoName32 Gradient[300 x 1 x *]] [AutoName51 Gradient[300 x 1 x *]] [AutoName97 Value[300 x 1 x *]] }
00000044C209A980: {[AutoName29 Gradient[300 x 1 x *]] [AutoName68 Value[300 x 1 x *]] }
00000044C209AA20: {[AutoName3 Gradient[300 x 1 x *]] [AutoName58 Value[300 x 1 x *]] }
00000044C209AAC0: {[AutoName100 Value[300 x 1 x *]] [AutoName55 Gradient[300 x 1 x *]] }
00000044C209AB60: {[AutoName55 Value[300 x 1 x *]] }
00000044C209AC00: {[AutoName36 Gradient[300 x 1 x *]] [AutoName60 Value[300 x 1 x *]] [AutoName69 Gradient[300 x 1 x *]] }
00000044C209ACA0: {[AutoName106 Value[300 x 1 x *]] [AutoName67 Gradient[300 x 1 x *]] }
00000044C209AD40: {[AutoName41 Gradient[300 x 1 x *]] [AutoName96 Value[300 x 1 x *]] [WHO0 Gradient[300 x 300]] }
00000044C209ADE0: {[AutoName101 Value[300 x 1 x *]] [AutoName24 Gradient[300 x 1 x *]] [AutoName49 Gradient[300 x 1 x *]] }
00000044C209AE80: {[AutoName47 Gradient[300 x 1 x *]] [AutoName54 Value[300 x 1 x *]] [bf2 Gradient[300 x 1]] }
00000044C209D000: {[bc2 Gradient[300 x 1]] }
00000044C209D0A0: {[AutoName57 Gradient[300 x 1 x *]] [AutoName77 Gradient[300 x 1 x *]] }
00000044C209D140: {[WHO3 Gradient[300 x 300]] }
00000044C209D3C0: {[AutoName50 Gradient[300 x 1 x *]] [AutoName96 Gradient[300 x 1 x *]] [WHF0 Gradient[300 x 300]] }
00000044C209D460: {[AutoName100 Gradient[300 x 1 x *]] [AutoName54 Gradient[300 x 1 x *]] [bi2 Gradient[300 x 1]] }
00000044C209D500: {[AutoName56 Gradient[300 x 1 x *]] [AutoName97 Gradient[300 x 1 x *]] }
00000044C209D640: {[AutoName106 Gradient[300 x 1 x *]] }
00000044C209D820: {[AutoName72 Gradient[300 x 1 x *]] [AutoName99 Gradient[300 x 1 x *]] }
00000044C209D8C0: {[AutoName4 Gradient[300 x 1 x *]] [AutoName44 Gradient[300 x 1 x *]] [AutoName84 Gradient[300 x 1 x *]] }
00000044C209DAA0: {[AutoName0 Gradient[300 x 1 x *]] [AutoName38 Gradient[300 x 1 x *]] [AutoName76 Gradient[300 x 1 x *]] }
00000044C209DBE0: {[AutoName75 Gradient[300 x 1 x *]] [AutoName78 Gradient[300 x 1 x *]] }
00000044C209DF00: {[AutoName42 Gradient[300 x 1 x *]] [AutoName82 Gradient[300 x 1 x *]] }
00000044C209E040: {[WCF3 Gradient[300 x 1]] }
00000044C209E540: {[AutoName108 Gradient[300 x 1 x *]] [AutoName66 Gradient[300 x 1 x *]] }
00000044C209E5E0: {[WHI3 Gradient[300 x 300]] }
00000044C209E680: {[WHF3 Gradient[300 x 300]] }
00000044C209E7C0: {[AutoName52 Gradient[300 x 1 x *]] [AutoName81 Gradient[300 x 1 x *]] }
00000044C209E900: {[AutoName102 Gradient[300 x 1 x *]] }
00000044C209ED60: {[WHC2 Gradient[300 x 300]] }
00000044C209EE00: {[AutoName101 Gradient[300 x 1 x *]] [AutoName23 Gradient[300 x 1 x *]] [AutoName45 Gradient[300 x 1 x *]] }
00000044C209EEA0: {[AutoName71 Gradient[300 x 1 x *]] [AutoName86 Gradient[300 x 1 x *]] [WCO0 Gradient[300 x 1]] }

05/03/2016 14:07:22: No PreCompute nodes found, skipping PreCompute step.

05/03/2016 14:07:23: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:23: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:23: Finished Epoch[ 1 of 100]: [Training] CrossEntropyWithSoftmax = 4.84376733 * 81; totalSamplesSeen = 81; learningRatePerSample = 0.1; epochTime=0.205823s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.80951644 * 81; perplexity = 122.67228325
05/03/2016 14:07:23: Finished Epoch[ 1 of 100]: [Validate] CrossEntropyWithSoftmax = 4.80951644 * 81
05/03/2016 14:07:23: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.1'

05/03/2016 14:07:23: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:23: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:23: Finished Epoch[ 2 of 100]: [Training] CrossEntropyWithSoftmax = 4.80951644 * 81; totalSamplesSeen = 162; learningRatePerSample = 0.1; epochTime=0.17403s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:23: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.74450118 * 81; perplexity = 114.95045214
05/03/2016 14:07:23: Finished Epoch[ 2 of 100]: [Validate] CrossEntropyWithSoftmax = 4.74450118 * 81
05/03/2016 14:07:24: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.2'

05/03/2016 14:07:24: Starting Epoch 3: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:24: Finished Epoch[ 3 of 100]: [Training] CrossEntropyWithSoftmax = 4.74450118 * 81; totalSamplesSeen = 243; learningRatePerSample = 0.1; epochTime=0.171867s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:24: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.64950072 * 81; perplexity = 104.53278114
05/03/2016 14:07:24: Finished Epoch[ 3 of 100]: [Validate] CrossEntropyWithSoftmax = 4.64950072 * 81
05/03/2016 14:07:24: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.3'

05/03/2016 14:07:24: Starting Epoch 4: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:24: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:25: Finished Epoch[ 4 of 100]: [Training] CrossEntropyWithSoftmax = 4.64950072 * 81; totalSamplesSeen = 324; learningRatePerSample = 0.1; epochTime=0.171107s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.51978782 * 81; perplexity = 91.81611471
05/03/2016 14:07:25: Finished Epoch[ 4 of 100]: [Validate] CrossEntropyWithSoftmax = 4.51978782 * 81
05/03/2016 14:07:25: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.4'

05/03/2016 14:07:25: Starting Epoch 5: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:25: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:25: Finished Epoch[ 5 of 100]: [Training] CrossEntropyWithSoftmax = 4.51978782 * 81; totalSamplesSeen = 405; learningRatePerSample = 0.1; epochTime=0.312349s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:25: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.34198375 * 81; perplexity = 76.85985880
05/03/2016 14:07:25: Finished Epoch[ 5 of 100]: [Validate] CrossEntropyWithSoftmax = 4.34198375 * 81
05/03/2016 14:07:26: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.5'

05/03/2016 14:07:26: Starting Epoch 6: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:26: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:26: Finished Epoch[ 6 of 100]: [Training] CrossEntropyWithSoftmax = 4.34198375 * 81; totalSamplesSeen = 486; learningRatePerSample = 0.1; epochTime=0.171435s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:26: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 4.09081956 * 81; perplexity = 59.78887214
05/03/2016 14:07:26: Finished Epoch[ 6 of 100]: [Validate] CrossEntropyWithSoftmax = 4.09081956 * 81
05/03/2016 14:07:26: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.6'

05/03/2016 14:07:26: Starting Epoch 7: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:26: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:26: Finished Epoch[ 7 of 100]: [Training] CrossEntropyWithSoftmax = 4.09081956 * 81; totalSamplesSeen = 567; learningRatePerSample = 0.1; epochTime=0.170543s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:27: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.72673054 * 81; perplexity = 41.54306230
05/03/2016 14:07:27: Finished Epoch[ 7 of 100]: [Validate] CrossEntropyWithSoftmax = 3.72673054 * 81
05/03/2016 14:07:27: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.7'

05/03/2016 14:07:27: Starting Epoch 8: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:27: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:27: Finished Epoch[ 8 of 100]: [Training] CrossEntropyWithSoftmax = 3.72673054 * 81; totalSamplesSeen = 648; learningRatePerSample = 0.1; epochTime=0.172075s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:27: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 3.20413999 * 81; perplexity = 24.63430521
05/03/2016 14:07:27: Finished Epoch[ 8 of 100]: [Validate] CrossEntropyWithSoftmax = 3.20413999 * 81
05/03/2016 14:07:27: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.8'

05/03/2016 14:07:28: Starting Epoch 9: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:28: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:28: Finished Epoch[ 9 of 100]: [Training] CrossEntropyWithSoftmax = 3.20413999 * 81; totalSamplesSeen = 729; learningRatePerSample = 0.1; epochTime=0.172617s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:28: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.57160328 * 81; perplexity = 13.08678942
05/03/2016 14:07:28: Finished Epoch[ 9 of 100]: [Validate] CrossEntropyWithSoftmax = 2.57160328 * 81
05/03/2016 14:07:28: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.9'

05/03/2016 14:07:28: Starting Epoch 10: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:28: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:28: Finished Epoch[10 of 100]: [Training] CrossEntropyWithSoftmax = 2.57160328 * 81; totalSamplesSeen = 810; learningRatePerSample = 0.1; epochTime=0.171637s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:28: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.37671953 * 81; perplexity = 10.76951582
05/03/2016 14:07:28: Finished Epoch[10 of 100]: [Validate] CrossEntropyWithSoftmax = 2.37671953 * 81
05/03/2016 14:07:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10'

05/03/2016 14:07:29: Starting Epoch 11: learning rate per sample = 0.100000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:29: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:29: Finished Epoch[11 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.1; epochTime=0.173352s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:29: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.76593470 * 81; perplexity = 15.89388902
05/03/2016 14:07:29: Finished Epoch[11 of 100]: [Validate] CrossEntropyWithSoftmax = 2.76593470 * 81
05/03/2016 14:07:29: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.10.
05/03/2016 14:07:29: learnRatePerSample reduced to 0.050000001
05/03/2016 14:07:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.11'

05/03/2016 14:07:30: Starting Epoch 12: learning rate per sample = 0.050000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:30: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:30: Finished Epoch[12 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.050000001; epochTime=0.171971s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:30: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.83866355 * 81; perplexity = 17.09290643
05/03/2016 14:07:30: Finished Epoch[12 of 100]: [Validate] CrossEntropyWithSoftmax = 2.83866355 * 81
05/03/2016 14:07:30: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.11.
05/03/2016 14:07:30: learnRatePerSample reduced to 0.025
05/03/2016 14:07:30: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.12'

05/03/2016 14:07:30: Starting Epoch 13: learning rate per sample = 0.025000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:30: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:31: Finished Epoch[13 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.025; epochTime=0.172329s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:31: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.87639439 * 81; perplexity = 17.75015751
05/03/2016 14:07:31: Finished Epoch[13 of 100]: [Validate] CrossEntropyWithSoftmax = 2.87639439 * 81
05/03/2016 14:07:31: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.12.
05/03/2016 14:07:31: learnRatePerSample reduced to 0.0125
05/03/2016 14:07:31: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.13'

05/03/2016 14:07:31: Starting Epoch 14: learning rate per sample = 0.012500  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:31: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:31: Finished Epoch[14 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0125; epochTime=0.173942s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:31: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.89559842 * 81; perplexity = 18.09432627
05/03/2016 14:07:31: Finished Epoch[14 of 100]: [Validate] CrossEntropyWithSoftmax = 2.89559842 * 81
05/03/2016 14:07:31: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.13.
05/03/2016 14:07:32: learnRatePerSample reduced to 0.0062500001
05/03/2016 14:07:32: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.14'

05/03/2016 14:07:32: Starting Epoch 15: learning rate per sample = 0.006250  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:32: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:32: Finished Epoch[15 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0062500001; epochTime=0.1813s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:32: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.90528436 * 81; perplexity = 18.27043836
05/03/2016 14:07:32: Finished Epoch[15 of 100]: [Validate] CrossEntropyWithSoftmax = 2.90528436 * 81
05/03/2016 14:07:32: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.14.
05/03/2016 14:07:33: learnRatePerSample reduced to 0.003125
05/03/2016 14:07:33: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.15'

05/03/2016 14:07:33: Starting Epoch 16: learning rate per sample = 0.003125  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:33: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:33: Finished Epoch[16 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.003125; epochTime=0.244832s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:33: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91014815 * 81; perplexity = 18.35951832
05/03/2016 14:07:33: Finished Epoch[16 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91014815 * 81
05/03/2016 14:07:33: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.15.
05/03/2016 14:07:33: learnRatePerSample reduced to 0.0015625
05/03/2016 14:07:34: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.16'

05/03/2016 14:07:34: Starting Epoch 17: learning rate per sample = 0.001563  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:34: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:34: Finished Epoch[17 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0015625; epochTime=0.171136s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:34: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91258560 * 81; perplexity = 18.40432332
05/03/2016 14:07:34: Finished Epoch[17 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91258560 * 81
05/03/2016 14:07:34: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.16.
05/03/2016 14:07:34: learnRatePerSample reduced to 0.00078125001
05/03/2016 14:07:34: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.17'

05/03/2016 14:07:35: Starting Epoch 18: learning rate per sample = 0.000781  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:35: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:35: Finished Epoch[18 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.00078125001; epochTime=0.169912s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:35: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91380517 * 81; perplexity = 18.42678242
05/03/2016 14:07:35: Finished Epoch[18 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91380517 * 81
05/03/2016 14:07:35: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.17.
05/03/2016 14:07:35: learnRatePerSample reduced to 0.00039062501
05/03/2016 14:07:35: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.18'

05/03/2016 14:07:35: Starting Epoch 19: learning rate per sample = 0.000391  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:35: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:36: Finished Epoch[19 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.00039062501; epochTime=0.170062s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:36: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91441571 * 81; perplexity = 18.43803614
05/03/2016 14:07:36: Finished Epoch[19 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91441571 * 81
05/03/2016 14:07:36: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.18.
05/03/2016 14:07:36: learnRatePerSample reduced to 0.0001953125
05/03/2016 14:07:36: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.19'

05/03/2016 14:07:36: Starting Epoch 20: learning rate per sample = 0.000195  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:36: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:36: Finished Epoch[20 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 0.0001953125; epochTime=0.171266s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:36: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91472089 * 81; perplexity = 18.44366385
05/03/2016 14:07:36: Finished Epoch[20 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91472089 * 81
05/03/2016 14:07:36: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.19.
05/03/2016 14:07:37: learnRatePerSample reduced to 9.7656251e-005
05/03/2016 14:07:37: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.20'

05/03/2016 14:07:37: Starting Epoch 21: learning rate per sample = 0.000098  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:37: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:37: Finished Epoch[21 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 9.7656251e-005; epochTime=0.171713s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:37: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91487348 * 81; perplexity = 18.44647834
05/03/2016 14:07:37: Finished Epoch[21 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91487348 * 81
05/03/2016 14:07:37: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.20.
05/03/2016 14:07:38: learnRatePerSample reduced to 4.8828126e-005
05/03/2016 14:07:38: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.21'

05/03/2016 14:07:38: Starting Epoch 22: learning rate per sample = 0.000049  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:38: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:38: Finished Epoch[22 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 4.8828126e-005; epochTime=0.170737s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:38: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91494977 * 81; perplexity = 18.44788575
05/03/2016 14:07:38: Finished Epoch[22 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91494977 * 81
05/03/2016 14:07:38: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.21.
05/03/2016 14:07:38: learnRatePerSample reduced to 2.4414063e-005
05/03/2016 14:07:38: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.22'

05/03/2016 14:07:39: Starting Epoch 23: learning rate per sample = 0.000024  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:39: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:39: Finished Epoch[23 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.4414063e-005; epochTime=0.170655s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:39: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91498801 * 81; perplexity = 18.44859123
05/03/2016 14:07:39: Finished Epoch[23 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91498801 * 81
05/03/2016 14:07:39: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.22.
05/03/2016 14:07:39: learnRatePerSample reduced to 1.2207031e-005
05/03/2016 14:07:39: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.23'

05/03/2016 14:07:39: Starting Epoch 24: learning rate per sample = 0.000012  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:39: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:40: Finished Epoch[24 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.2207031e-005; epochTime=0.169678s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:40: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91500704 * 81; perplexity = 18.44894224
05/03/2016 14:07:40: Finished Epoch[24 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91500704 * 81
05/03/2016 14:07:40: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.23.
05/03/2016 14:07:40: learnRatePerSample reduced to 6.1035157e-006
05/03/2016 14:07:40: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.24'

05/03/2016 14:07:40: Starting Epoch 25: learning rate per sample = 0.000006  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:40: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:40: Finished Epoch[25 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 6.1035157e-006; epochTime=0.170514s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:40: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91501646 * 81; perplexity = 18.44911602
05/03/2016 14:07:40: Finished Epoch[25 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91501646 * 81
05/03/2016 14:07:40: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.24.
05/03/2016 14:07:41: learnRatePerSample reduced to 3.0517579e-006
05/03/2016 14:07:41: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.25'

05/03/2016 14:07:41: Starting Epoch 26: learning rate per sample = 0.000003  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:41: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:41: Finished Epoch[26 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 3.0517579e-006; epochTime=0.171247s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:41: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502135 * 81; perplexity = 18.44920638
05/03/2016 14:07:41: Finished Epoch[26 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502135 * 81
05/03/2016 14:07:41: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.25.
05/03/2016 14:07:42: learnRatePerSample reduced to 1.5258789e-006
05/03/2016 14:07:42: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.26'

05/03/2016 14:07:42: Starting Epoch 27: learning rate per sample = 0.000002  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:42: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:42: Finished Epoch[27 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.5258789e-006; epochTime=0.171463s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:42: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502380 * 81; perplexity = 18.44925156
05/03/2016 14:07:42: Finished Epoch[27 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502380 * 81
05/03/2016 14:07:42: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.26.
05/03/2016 14:07:42: learnRatePerSample reduced to 7.6293946e-007
05/03/2016 14:07:42: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.27'

05/03/2016 14:07:43: Starting Epoch 28: learning rate per sample = 0.000001  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:43: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:43: Finished Epoch[28 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 7.6293946e-007; epochTime=0.1715s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:43: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502512 * 81; perplexity = 18.44927589
05/03/2016 14:07:43: Finished Epoch[28 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502512 * 81
05/03/2016 14:07:43: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.27.
05/03/2016 14:07:43: learnRatePerSample reduced to 3.8146973e-007
05/03/2016 14:07:43: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.28'

05/03/2016 14:07:43: Starting Epoch 29: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:43: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:44: Finished Epoch[29 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 3.8146973e-007; epochTime=0.169994s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:44: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502569 * 81; perplexity = 18.44928631
05/03/2016 14:07:44: Finished Epoch[29 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502569 * 81
05/03/2016 14:07:44: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.28.
05/03/2016 14:07:44: learnRatePerSample reduced to 1.9073487e-007
05/03/2016 14:07:44: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.29'

05/03/2016 14:07:44: Starting Epoch 30: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:44: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:44: Finished Epoch[30 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.9073487e-007; epochTime=0.17135s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:44: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502588 * 81; perplexity = 18.44928979
05/03/2016 14:07:44: Finished Epoch[30 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502588 * 81
05/03/2016 14:07:44: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.29.
05/03/2016 14:07:45: learnRatePerSample reduced to 9.5367433e-008
05/03/2016 14:07:45: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.30'

05/03/2016 14:07:45: Starting Epoch 31: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:45: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:45: Finished Epoch[31 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 9.5367433e-008; epochTime=0.173121s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:45: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502606 * 81; perplexity = 18.44929326
05/03/2016 14:07:45: Finished Epoch[31 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502606 * 81
05/03/2016 14:07:45: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.30.
05/03/2016 14:07:46: learnRatePerSample reduced to 4.7683717e-008
05/03/2016 14:07:46: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.31'

05/03/2016 14:07:46: Starting Epoch 32: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:46: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:46: Finished Epoch[32 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 4.7683717e-008; epochTime=0.170394s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:46: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502606 * 81; perplexity = 18.44929326
05/03/2016 14:07:46: Finished Epoch[32 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502606 * 81
05/03/2016 14:07:46: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.31.
05/03/2016 14:07:46: learnRatePerSample reduced to 2.3841858e-008
05/03/2016 14:07:46: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.32'

05/03/2016 14:07:47: Starting Epoch 33: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:47: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:47: Finished Epoch[33 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.3841858e-008; epochTime=0.17752s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:47: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502625 * 81; perplexity = 18.44929674
05/03/2016 14:07:47: Finished Epoch[33 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502625 * 81
05/03/2016 14:07:47: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.32.
05/03/2016 14:07:47: learnRatePerSample reduced to 1.1920929e-008
05/03/2016 14:07:47: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.33'

05/03/2016 14:07:47: Starting Epoch 34: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:47: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:48: Finished Epoch[34 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.1920929e-008; epochTime=0.170604s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:48: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502625 * 81; perplexity = 18.44929674
05/03/2016 14:07:48: Finished Epoch[34 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502625 * 81
05/03/2016 14:07:48: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.33.
05/03/2016 14:07:48: learnRatePerSample reduced to 5.9604646e-009
05/03/2016 14:07:48: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.34'

05/03/2016 14:07:48: Starting Epoch 35: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:48: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:48: Finished Epoch[35 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 5.9604646e-009; epochTime=0.170253s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:48: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502625 * 81; perplexity = 18.44929674
05/03/2016 14:07:48: Finished Epoch[35 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502625 * 81
05/03/2016 14:07:48: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.34.
05/03/2016 14:07:49: learnRatePerSample reduced to 2.9802323e-009
05/03/2016 14:07:49: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.35'

05/03/2016 14:07:49: Starting Epoch 36: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:49: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:49: Finished Epoch[36 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 2.9802323e-009; epochTime=0.17132s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:49: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502625 * 81; perplexity = 18.44929674
05/03/2016 14:07:49: Finished Epoch[36 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502625 * 81
05/03/2016 14:07:49: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.35.
05/03/2016 14:07:50: learnRatePerSample reduced to 1.4901161e-009
05/03/2016 14:07:50: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.36'

05/03/2016 14:07:50: Starting Epoch 37: learning rate per sample = 0.000000  effective momentum = 0.000045  momentum as time constant = 1000.0 samples

05/03/2016 14:07:50: Starting minibatch loop.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:50: Finished Epoch[37 of 100]: [Training] CrossEntropyWithSoftmax = 2.37671953 * 81; totalSamplesSeen = 891; learningRatePerSample = 1.4901161e-009; epochTime=0.170539s
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 6 lines with a total of 81+6 tokens.
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
05/03/2016 14:07:50: Final Results: Minibatch[1-1]: CrossEntropyWithSoftmax = 2.91502625 * 81; perplexity = 18.44929674
05/03/2016 14:07:50: Finished Epoch[37 of 100]: [Validate] CrossEntropyWithSoftmax = 2.91502625 * 81
05/03/2016 14:07:50: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.36.
05/03/2016 14:07:50: learnRatePerSample reduced to 7.4505807e-010
05/03/2016 14:07:50: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\Miscellaneous_SLU@release_cpu/cntkdebug.dnn.37'
05/03/2016 14:07:51: Learn Rate Per Sample for Epoch[38] = 7.4505807e-010 is less than minLearnRate 9.9999997e-010. Training complete.
05/03/2016 14:07:51: CNTKCommandTrainEnd: LSTM

05/03/2016 14:07:51: Action "train" complete.


05/03/2016 14:07:51: ##############################################################################
05/03/2016 14:07:51: #                                                                            #
05/03/2016 14:07:51: # Action "write"                                                             #
05/03/2016 14:07:51: #                                                                            #
05/03/2016 14:07:51: ##############################################################################

BatchLUSequenceReader: Input file is C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Text\SLU/atis.test.apos.pred.pos.head.IOB.simple

Post-processing network...

4 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	PosteriorProb = Softmax()
	labels = InputValue()
	outputs = Times()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Loop[1] --> Loop_AutoName75 -> 31 nodes

	AutoName40	AutoName68	AutoName71
	AutoName39	AutoName59	AutoName62
	AutoName43	AutoName58	AutoName63
	AutoName64	AutoName44	AutoName65
	AutoName38	AutoName46	AutoName49
	AutoName42	AutoName45	AutoName50
	AutoName51	AutoName41	AutoName52
	AutoName53	AutoName55	AutoName56
	AutoName57	AutoName66	AutoName67
	AutoName72	AutoName73	AutoName74
	AutoName75

Loop[2] --> Loop_AutoName113 -> 31 nodes

	AutoName78	AutoName106	AutoName109
	AutoName77	AutoName97	AutoName100
	AutoName81	AutoName96	AutoName101
	AutoName102	AutoName82	AutoName103
	AutoName76	AutoName84	AutoName87
	AutoName80	AutoName83	AutoName88
	AutoName89	AutoName79	AutoName90
	AutoName91	AutoName93	AutoName94
	AutoName95	AutoName104	AutoName105
	AutoName110	AutoName111	AutoName112
	AutoName113

Validating network. 168 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [127 x *1]
Validating --> W4 = LearnableParameter() :  -> [127 x 300]
Validating --> WXO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WXO0 = LearnableParameter() :  -> [300 x 150]
Validating --> E0 = LearnableParameter() :  -> [50 x 944]
Validating --> features = InputValue() :  -> [2832 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [50 x 944], [2832 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bo0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bf0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> bi0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI0 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [300 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [300 x 150], [150 x *1] -> [300 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [300 x 300]
Validating --> bc0 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [300 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName69 = Times (WXO2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName70 = Plus (AutoName69, bo2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName60 = Times (WXF2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName61 = Plus (AutoName60, bf2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName47 = Times (WXI2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName48 = Plus (AutoName47, bi2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI2 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI2 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC2 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName54 = Times (WXC2, AutoName37) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC2 = LearnableParameter() :  -> [300 x 300]
Validating --> bc2 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName71 = Plus (AutoName70, AutoName68) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName62 = Plus (AutoName61, AutoName59) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName63 = Plus (AutoName62, AutoName58) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName64 = Sigmoid (AutoName63) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName65 = ElementTimes (AutoName64, AutoName44) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName49 = Plus (AutoName48, AutoName46) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName50 = Plus (AutoName49, AutoName45) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName51 = Sigmoid (AutoName50) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName55 = Plus (AutoName54, AutoName53) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName56 = Tanh (AutoName55) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName57 = ElementTimes (AutoName51, AutoName56) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName66 = Plus (AutoName65, AutoName57) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName67 = DiagTimes (WCO2, AutoName66) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName72 = Plus (AutoName71, AutoName67) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName73 = Sigmoid (AutoName72) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName74 = Tanh (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName75 = ElementTimes (AutoName73, AutoName74) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName107 = Times (WXO3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bo3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName108 = Plus (AutoName107, bo3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHO3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCO3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXF3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName98 = Times (WXF3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bf3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName99 = Plus (AutoName98, bf3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHF3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCF3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXI3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName85 = Times (WXI3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> bi3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName86 = Plus (AutoName85, bi3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> WHI3 = LearnableParameter() :  -> [300 x 300]
Validating --> WCI3 = LearnableParameter() :  -> [300 x 1]
Validating --> WXC3 = LearnableParameter() :  -> [300 x 300]
Validating --> AutoName92 = Times (WXC3, AutoName75) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> WHC3 = LearnableParameter() :  -> [300 x 300]
Validating --> bc3 = LearnableParameter() :  -> [300 x 1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName109 = Plus (AutoName108, AutoName106) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName100 = Plus (AutoName99, AutoName97) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName101 = Plus (AutoName100, AutoName96) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName102 = Sigmoid (AutoName101) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName103 = ElementTimes (AutoName102, AutoName82) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName87 = Plus (AutoName86, AutoName84) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName88 = Plus (AutoName87, AutoName83) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName89 = Sigmoid (AutoName88) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1] -> [300 x 1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1], [300 x 1] -> [300 x 1]
Validating --> AutoName93 = Plus (AutoName92, AutoName91) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName94 = Tanh (AutoName93) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName95 = ElementTimes (AutoName89, AutoName94) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName104 = Plus (AutoName103, AutoName95) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName105 = DiagTimes (WCO3, AutoName104) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName110 = Plus (AutoName109, AutoName105) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName111 = Sigmoid (AutoName110) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName112 = Tanh (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName113 = ElementTimes (AutoName111, AutoName112) : [300 x 1 x *1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName114 = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, AutoName114) : [127 x *1], [127 x 1 x *1] -> [1]
Validating --> outputs = Times (W4, AutoName113) : [127 x 300], [300 x 1 x *1] -> [127 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [127 x 1 x *1] -> [127 x 1 x *1]

Validating network. 119 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName40 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName68 = Times (WHO2, AutoName40) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName39 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName59 = Times (WHF2, AutoName39) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName43 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName58 = DiagTimes (WCF2, AutoName43) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName44 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName38 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName46 = Times (WHI2, AutoName38) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName42 = PastValue (AutoName66) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName45 = DiagTimes (WCI2, AutoName42) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName41 = PastValue (AutoName75) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName52 = Times (WHC2, AutoName41) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName53 = Plus (AutoName52, bc2) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]
Validating --> AutoName78 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName106 = Times (WHO3, AutoName78) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName77 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName97 = Times (WHF3, AutoName77) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName81 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName96 = DiagTimes (WCF3, AutoName81) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName82 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName76 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName84 = Times (WHI3, AutoName76) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName80 = PastValue (AutoName104) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName83 = DiagTimes (WCI3, AutoName80) : [300 x 1], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName79 = PastValue (AutoName113) : [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName90 = Times (WHC3, AutoName79) : [300 x 300], [300 x 1 x *1] -> [300 x 1 x *1]
Validating --> AutoName91 = Plus (AutoName90, bc3) : [300 x 1 x *1], [300 x 1] -> [300 x 1 x *1]

Validating network. 42 nodes to process in pass 3.


Validating network, final pass.



48 out of 168 nodes do not share the minibatch layout with the input data.

Post-processing network complete.



Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[300 x 1 x *1]] [AutoName1 Gradient[300 x 1 x *1]] [AutoName10 Gradient[300 x 1 x *1]] [AutoName100 Gradient[300 x 1 x *1]] [AutoName101 Gradient[300 x 1 x *1]] [AutoName102 Gradient[300 x 1 x *1]] [AutoName103 Gradient[300 x 1 x *1]] [AutoName104 Gradient[300 x 1 x *1]] [AutoName105 Gradient[300 x 1 x *1]] [AutoName106 Gradient[300 x 1 x *1]] [AutoName107 Gradient[300 x 1 x *1]] [AutoName108 Gradient[300 x 1 x *1]] [AutoName109 Gradient[300 x 1 x *1]] [AutoName11 Gradient[300 x 1 x *1]] [AutoName110 Gradient[300 x 1 x *1]] [AutoName111 Gradient[300 x 1 x *1]] [AutoName112 Gradient[300 x 1 x *1]] [AutoName113 Gradient[300 x 1 x *1]] [AutoName114 Gradient[127 x 1 x *1]] [AutoName114 Value[127 x 1 x *1]] [AutoName12 Gradient[300 x 1 x *1]] [AutoName13 Gradient[300 x 1 x *1]] [AutoName14 Gradient[300 x 1 x *1]] [AutoName15 Gradient[300 x 1 x *1]] [AutoName16 Gradient[300 x *1]] [AutoName17 Gradient[300 x 1 x *1]] [AutoName18 Gradient[300 x 1 x *1]] [AutoName19 Gradient[300 x 1 x *1]] [AutoName2 Gradient[300 x 1 x *1]] [AutoName20 Gradient[300 x 1 x *1]] [AutoName21 Gradient[300 x 1 x *1]] [AutoName22 Gradient[300 x *1]] [AutoName23 Gradient[300 x 1 x *1]] [AutoName24 Gradient[300 x 1 x *1]] [AutoName25 Gradient[300 x 1 x *1]] [AutoName26 Gradient[300 x 1 x *1]] [AutoName27 Gradient[300 x 1 x *1]] [AutoName28 Gradient[300 x 1 x *1]] [AutoName29 Gradient[300 x 1 x *1]] [AutoName3 Gradient[300 x 1 x *1]] [AutoName30 Gradient[300 x 1 x *1]] [AutoName31 Gradient[300 x *1]] [AutoName32 Gradient[300 x 1 x *1]] [AutoName33 Gradient[300 x 1 x *1]] [AutoName34 Gradient[300 x 1 x *1]] [AutoName35 Gradient[300 x 1 x *1]] [AutoName36 Gradient[300 x 1 x *1]] [AutoName37 Gradient[300 x 1 x *1]] [AutoName38 Gradient[300 x 1 x *1]] [AutoName39 Gradient[300 x 1 x *1]] [AutoName4 Gradient[300 x 1 x *1]] [AutoName40 Gradient[300 x 1 x *1]] [AutoName41 Gradient[300 x 1 x *1]] [AutoName42 Gradient[300 x 1 x *1]] [AutoName43 Gradient[300 x 1 x *1]] [AutoName44 Gradient[300 x 1 x *1]] [AutoName45 Gradient[300 x 1 x *1]] [AutoName46 Gradient[300 x 1 x *1]] [AutoName47 Gradient[300 x 1 x *1]] [AutoName48 Gradient[300 x 1 x *1]] [AutoName49 Gradient[300 x 1 x *1]] [AutoName5 Gradient[300 x 1 x *1]] [AutoName50 Gradient[300 x 1 x *1]] [AutoName51 Gradient[300 x 1 x *1]] [AutoName52 Gradient[300 x 1 x *1]] [AutoName53 Gradient[300 x 1 x *1]] [AutoName54 Gradient[300 x 1 x *1]] [AutoName55 Gradient[300 x 1 x *1]] [AutoName56 Gradient[300 x 1 x *1]] [AutoName57 Gradient[300 x 1 x *1]] [AutoName58 Gradient[300 x 1 x *1]] [AutoName59 Gradient[300 x 1 x *1]] [AutoName6 Gradient[300 x 1 x *1]] [AutoName60 Gradient[300 x 1 x *1]] [AutoName61 Gradient[300 x 1 x *1]] [AutoName62 Gradient[300 x 1 x *1]] [AutoName63 Gradient[300 x 1 x *1]] [AutoName64 Gradient[300 x 1 x *1]] [AutoName65 Gradient[300 x 1 x *1]] [AutoName66 Gradient[300 x 1 x *1]] [AutoName67 Gradient[300 x 1 x *1]] [AutoName68 Gradient[300 x 1 x *1]] [AutoName69 Gradient[300 x 1 x *1]] [AutoName7 Gradient[300 x 1 x *1]] [AutoName70 Gradient[300 x 1 x *1]] [AutoName71 Gradient[300 x 1 x *1]] [AutoName72 Gradient[300 x 1 x *1]] [AutoName73 Gradient[300 x 1 x *1]] [AutoName74 Gradient[300 x 1 x *1]] [AutoName75 Gradient[300 x 1 x *1]] [AutoName76 Gradient[300 x 1 x *1]] [AutoName77 Gradient[300 x 1 x *1]] [AutoName78 Gradient[300 x 1 x *1]] [AutoName79 Gradient[300 x 1 x *1]] [AutoName8 Gradient[300 x 1 x *1]] [AutoName80 Gradient[300 x 1 x *1]] [AutoName81 Gradient[300 x 1 x *1]] [AutoName82 Gradient[300 x 1 x *1]] [AutoName83 Gradient[300 x 1 x *1]] [AutoName84 Gradient[300 x 1 x *1]] [AutoName85 Gradient[300 x 1 x *1]] [AutoName86 Gradient[300 x 1 x *1]] [AutoName87 Gradient[300 x 1 x *1]] [AutoName88 Gradient[300 x 1 x *1]] [AutoName89 Gradient[300 x 1 x *1]] [AutoName9 Gradient[300 x *1]] [AutoName90 Gradient[300 x 1 x *1]] [AutoName91 Gradient[300 x 1 x *1]] [AutoName92 Gradient[300 x 1 x *1]] [AutoName93 Gradient[300 x 1 x *1]] [AutoName94 Gradient[300 x 1 x *1]] [AutoName95 Gradient[300 x 1 x *1]] [AutoName96 Gradient[300 x 1 x *1]] [AutoName97 Gradient[300 x 1 x *1]] [AutoName98 Gradient[300 x 1 x *1]] [AutoName99 Gradient[300 x 1 x *1]] [CrossEntropyWithSoftmax Gradient[1]] [CrossEntropyWithSoftmax Value[1]] [E0 Gradient[50 x 944]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[127 x 1 x *1]] [PosteriorProb Value[127 x 1 x *1]] [W4 Gradient[127 x 300]] [WCF0 Gradient[300 x 1]] [WCF2 Gradient[300 x 1]] [WCF3 Gradient[300 x 1]] [WCI0 Gradient[300 x 1]] [WCI2 Gradient[300 x 1]] [WCI3 Gradient[300 x 1]] [WCO0 Gradient[300 x 1]] [WCO2 Gradient[300 x 1]] [WCO3 Gradient[300 x 1]] [WHC0 Gradient[300 x 300]] [WHC2 Gradient[300 x 300]] [WHC3 Gradient[300 x 300]] [WHF0 Gradient[300 x 300]] [WHF2 Gradient[300 x 300]] [WHF3 Gradient[300 x 300]] [WHI0 Gradient[300 x 300]] [WHI2 Gradient[300 x 300]] [WHI3 Gradient[300 x 300]] [WHO0 Gradient[300 x 300]] [WHO2 Gradient[300 x 300]] [WHO3 Gradient[300 x 300]] [WXC0 Gradient[300 x 150]] [WXC2 Gradient[300 x 300]] [WXC3 Gradient[300 x 300]] [WXF0 Gradient[300 x 150]] [WXF2 Gradient[300 x 300]] [WXF3 Gradient[300 x 300]] [WXI0 Gradient[300 x 150]] [WXI2 Gradient[300 x 300]] [WXI3 Gradient[300 x 300]] [WXO0 Gradient[300 x 150]] [WXO2 Gradient[300 x 300]] [WXO3 Gradient[300 x 300]] [bc0 Gradient[300 x 1]] [bc2 Gradient[300 x 1]] [bc3 Gradient[300 x 1]] [bf0 Gradient[300 x 1]] [bf2 Gradient[300 x 1]] [bf3 Gradient[300 x 1]] [bi0 Gradient[300 x 1]] [bi2 Gradient[300 x 1]] [bi3 Gradient[300 x 1]] [bo0 Gradient[300 x 1]] [bo2 Gradient[300 x 1]] [bo3 Gradient[300 x 1]] [features Gradient[2832 x *1]] [labels Gradient[127 x *1]] [outputs Gradient[127 x 1 x *1]] }
00000044AFFA3ED0: {[AutoName58 Value[300 x 1 x *1]] }
00000044AFFA3F70: {[AutoName18 Value[300 x 1 x *1]] }
00000044AFFA4010: {[AutoName15 Value[300 x 1 x *1]] }
00000044AFFA40B0: {[AutoName69 Value[300 x 1 x *1]] }
00000044AFFA4150: {[AutoName68 Value[300 x 1 x *1]] }
00000044AFFA41F0: {[AutoName64 Value[300 x 1 x *1]] }
00000044AFFA4290: {[AutoName51 Value[300 x 1 x *1]] }
00000044AFFA4330: {[AutoName70 Value[300 x 1 x *1]] }
00000044AFFA43D0: {[AutoName55 Value[300 x 1 x *1]] }
00000044AFFA4470: {[AutoName57 Value[300 x 1 x *1]] }
00000044AFFA4510: {[AutoName34 Value[300 x 1 x *1]] }
00000044AFFA45B0: {[AutoName71 Value[300 x 1 x *1]] }
00000044AFFA4650: {[AutoName49 Value[300 x 1 x *1]] }
00000044AFFA46F0: {[AutoName98 Value[300 x 1 x *1]] }
00000044AFFA4790: {[AutoName85 Value[300 x 1 x *1]] }
00000044AFFA4830: {[AutoName86 Value[300 x 1 x *1]] }
00000044AFFA48D0: {[AutoName60 Value[300 x 1 x *1]] }
00000044AFFA4970: {[AutoName17 Value[300 x 1 x *1]] }
00000044AFFA4A10: {[AutoName92 Value[300 x 1 x *1]] }
00000044AFFA4AB0: {[AutoName109 Value[300 x 1 x *1]] }
00000044AFFA4B50: {[AutoName106 Value[300 x 1 x *1]] }
00000044AFFA4BF0: {[AutoName35 Value[300 x 1 x *1]] }
00000044AFFA4C90: {[AutoName29 Value[300 x 1 x *1]] }
00000044AFFA4D30: {[AutoName63 Value[300 x 1 x *1]] }
00000044AFFA4DD0: {[AutoName48 Value[300 x 1 x *1]] }
00000044AFFA4E70: {[AutoName67 Value[300 x 1 x *1]] }
00000044AFFA4F10: {[AutoName50 Value[300 x 1 x *1]] }
00000044AFFA4FB0: {[AutoName74 Value[300 x 1 x *1]] }
00000044AFFA5050: {[AutoName28 Value[300 x 1 x *1]] }
00000044AFFA50F0: {[AutoName62 Value[300 x 1 x *1]] }
00000044AFFA5190: {[AutoName56 Value[300 x 1 x *1]] }
00000044AFFA5230: {[AutoName52 Value[300 x 1 x *1]] }
00000044AFFA52D0: {[AutoName19 Value[300 x 1 x *1]] }
00000044AFFA5370: {[AutoName61 Value[300 x 1 x *1]] }
00000044AFFA5410: {[AutoName47 Value[300 x 1 x *1]] }
00000044AFFA54B0: {[AutoName46 Value[300 x 1 x *1]] }
00000044AFFA5550: {[AutoName45 Value[300 x 1 x *1]] }
00000044AFFA55F0: {[AutoName53 Value[300 x 1 x *1]] }
00000044AFFA5690: {[AutoName66 Value[300 x 1 x *1]] }
00000044AFFA5730: {[AutoName73 Value[300 x 1 x *1]] }
00000044AFFA57D0: {[AutoName59 Value[300 x 1 x *1]] }
00000044AFFA5870: {[AutoName75 Value[300 x 1 x *1]] }
00000044AFFA5910: {[AutoName107 Value[300 x 1 x *1]] }
00000044AFFA59B0: {[AutoName36 Value[300 x 1 x *1]] }
00000044AFFA5A50: {[AutoName72 Value[300 x 1 x *1]] }
00000044AFFA5AF0: {[AutoName108 Value[300 x 1 x *1]] }
00000044AFFA5B90: {[AutoName54 Value[300 x 1 x *1]] }
00000044AFFA5C30: {[AutoName37 Value[300 x 1 x *1]] }
00000044AFFA5CD0: {[AutoName65 Value[300 x 1 x *1]] }
00000044AFFA5D70: {[AutoName99 Value[300 x 1 x *1]] }
00000044AFFA9FA0: {[AutoName87 Value[300 x 1 x *1]] }
00000044AFFAA040: {[AutoName90 Value[300 x 1 x *1]] }
00000044AFFAA0E0: {[AutoName93 Value[300 x 1 x *1]] }
00000044AFFAA180: {[AutoName100 Value[300 x 1 x *1]] }
00000044AFFAA220: {[AutoName101 Value[300 x 1 x *1]] }
00000044AFFAA2C0: {[AutoName110 Value[300 x 1 x *1]] }
00000044AFFAA4A0: {[AutoName88 Value[300 x 1 x *1]] }
00000044AFFAA540: {[AutoName97 Value[300 x 1 x *1]] }
00000044AFFAA5E0: {[AutoName105 Value[300 x 1 x *1]] }
00000044AFFAA720: {[AutoName83 Value[300 x 1 x *1]] }
00000044AFFAA9A0: {[AutoName91 Value[300 x 1 x *1]] }
00000044AFFAAAE0: {[AutoName103 Value[300 x 1 x *1]] }
00000044AFFAACC0: {[AutoName104 Value[300 x 1 x *1]] }
00000044AFFAAEA0: {[AutoName89 Value[300 x 1 x *1]] }
00000044AFFAB080: {[AutoName95 Value[300 x 1 x *1]] }
00000044AFFAB120: {[AutoName111 Value[300 x 1 x *1]] }
00000044AFFAB300: {[AutoName94 Value[300 x 1 x *1]] }
00000044AFFAB440: {[AutoName84 Value[300 x 1 x *1]] }
00000044AFFAB580: {[AutoName96 Value[300 x 1 x *1]] }
00000044AFFAB760: {[AutoName102 Value[300 x 1 x *1]] }
00000044AFFAB9E0: {[AutoName112 Value[300 x 1 x *1]] }
00000044AFFABC60: {[AutoName113 Value[300 x 1 x *1]] }
00000044B9AF65F0: {[AutoName77 Value[300 x 1 x *1]] }
00000044B9AF6690: {[AutoName79 Value[300 x 1 x *1]] }
00000044B9AF6910: {[AutoName76 Value[300 x 1 x *1]] }
00000044B9AF6EB0: {[AutoName78 Value[300 x 1 x *1]] }
00000044B9AF7130: {[AutoName80 Value[300 x 1 x *1]] }
00000044B9AF7310: {[AutoName81 Value[300 x 1 x *1]] }
00000044C1B0F230: {[AutoName0 Value[300 x 1 x *1]] }
00000044C1B0FE10: {[AutoName39 Value[300 x 1 x *1]] }
00000044C1B10450: {[AutoName4 Value[300 x 1 x *1]] }
00000044C1B10810: {[AutoName1 Value[300 x 1 x *1]] }
00000044C1B109F0: {[AutoName2 Value[300 x 1 x *1]] }
00000044C1B10F90: {[AutoName3 Value[300 x 1 x *1]] }
00000044C1B110D0: {[AutoName14 Value[300 x 1 x *1]] }
00000044C1B11350: {[AutoName38 Value[300 x 1 x *1]] }
00000044C1B12070: {[AutoName6 Value[300 x 1 x *1]] }
00000044C1B12250: {[AutoName5 Value[300 x 1 x *1]] }
00000044C1B126B0: {[AutoName42 Value[300 x 1 x *1]] }
00000044C1B127F0: {[AutoName44 Value[300 x 1 x *1]] }
00000044C1B12890: {[AutoName43 Value[300 x 1 x *1]] }
00000044C1B12930: {[AutoName40 Value[300 x 1 x *1]] }
00000044C1B12C50: {[AutoName41 Value[300 x 1 x *1]] }
00000044C2098FE0: {[AutoName26 Value[300 x 1 x *1]] }
00000044C2099120: {[WXI2 Value[300 x 300]] }
00000044C20991C0: {[WXF3 Value[300 x 300]] }
00000044C2099260: {[outputs Value[127 x 1 x *1]] }
00000044C2099300: {[AutoName16 Value[300 x *1]] }
00000044C20993A0: {[WXI3 Value[300 x 300]] }
00000044C2099440: {[AutoName30 Value[300 x 1 x *1]] }
00000044C2099620: {[WXI0 Value[300 x 150]] }
00000044C2099800: {[WXO0 Value[300 x 150]] }
00000044C20999E0: {[LookupTable Value[150 x *1]] }
00000044C2099A80: {[WXC2 Value[300 x 300]] }
00000044C2099C60: {[AutoName31 Value[300 x *1]] }
00000044C2099D00: {[AutoName23 Value[300 x 1 x *1]] }
00000044C2099DA0: {[AutoName10 Value[300 x 1 x *1]] }
00000044C2099E40: {[AutoName32 Value[300 x 1 x *1]] }
00000044C2099EE0: {[WXO3 Value[300 x 300]] }
00000044C209A020: {[AutoName9 Value[300 x *1]] }
00000044C209A0C0: {[WXF0 Value[300 x 150]] }
00000044C209A160: {[WXF2 Value[300 x 300]] }
00000044C209A2A0: {[AutoName21 Value[300 x 1 x *1]] }
00000044C209A340: {[AutoName24 Value[300 x 1 x *1]] }
00000044C209A3E0: {[AutoName20 Value[300 x 1 x *1]] }
00000044C209A480: {[AutoName25 Value[300 x 1 x *1]] }
00000044C209A5C0: {[WXC3 Value[300 x 300]] }
00000044C209A660: {[AutoName8 Value[300 x 1 x *1]] }
00000044C209A840: {[AutoName11 Value[300 x 1 x *1]] }
00000044C209A980: {[AutoName27 Value[300 x 1 x *1]] }
00000044C209AAC0: {[WXO2 Value[300 x 300]] }
00000044C209AB60: {[AutoName7 Value[300 x 1 x *1]] }
00000044C209ACA0: {[AutoName22 Value[300 x *1]] }
00000044C209AD40: {[AutoName12 Value[300 x 1 x *1]] }
00000044C209ADE0: {[AutoName13 Value[300 x 1 x *1]] }
00000044C209AE80: {[AutoName33 Value[300 x 1 x *1]] }
00000044C291FDE0: {[bi0 Value[300 x 1]] }
00000044C291FE80: {[bf2 Value[300 x 1]] }
00000044C29201A0: {[bo2 Value[300 x 1]] }
00000044C2920240: {[AutoName82 Value[300 x 1 x *1]] }
00000044C29204C0: {[bi3 Value[300 x 1]] }
00000044C2920560: {[bo0 Value[300 x 1]] }
00000044C29206A0: {[bc2 Value[300 x 1]] }
00000044C2920920: {[bi2 Value[300 x 1]] }
00000044C2920A60: {[E0 Value[50 x 944]] }
00000044C2920BA0: {[labels Value[127 x *1]] }
00000044C2920CE0: {[bc3 Value[300 x 1]] }
00000044C2920EC0: {[bf3 Value[300 x 1]] }
00000044C2921960: {[bo3 Value[300 x 1]] }
00000044C2921AA0: {[features Value[2832 x *1]] }
00000044C2921B40: {[bf0 Value[300 x 1]] }
00000044C2921C80: {[bc0 Value[300 x 1]] }
00000044C29299D0: {[WHC3 Value[300 x 300]] }
00000044C2929A70: {[WCI2 Value[300 x 1]] }
00000044C2929B10: {[WCO3 Value[300 x 1]] }
00000044C2929BB0: {[WCI0 Value[300 x 1]] }
00000044C2929ED0: {[WHO0 Value[300 x 300]] }
00000044C2929F70: {[WHF3 Value[300 x 300]] }
00000044C292A010: {[WXC0 Value[300 x 150]] }
00000044C292A0B0: {[WCF3 Value[300 x 1]] }
00000044C292A290: {[WCI3 Value[300 x 1]] }
00000044C292A330: {[WCF0 Value[300 x 1]] }
00000044C292A5B0: {[WHI3 Value[300 x 300]] }
00000044C292A650: {[WHO3 Value[300 x 300]] }
00000044C292A8D0: {[WCO0 Value[300 x 1]] }
00000044C292AA10: {[WHC0 Value[300 x 300]] }
00000044C292AAB0: {[WHI0 Value[300 x 300]] }
00000044C292AB50: {[WHI2 Value[300 x 300]] }
00000044C292AC90: {[WHF2 Value[300 x 300]] }
00000044C292AD30: {[WHO2 Value[300 x 300]] }
00000044C292AFB0: {[WHC2 Value[300 x 300]] }
00000044C292B2D0: {[W4 Value[127 x 300]] }
00000044C292B410: {[WCF2 Value[300 x 1]] }
00000044C292B550: {[WHF0 Value[300 x 300]] }
00000044C292B730: {[WCO2 Value[300 x 1]] }

BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 5 lines with a total of 92+5 tokens.
O O O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O O O O O B-stoploc.city_name I-stoploc.city_name O 
O O O O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_time.time_relative B-depart_time.time I-depart_time.time O 
O O O O O O O O O O O O O O O O O O 
O O B-depart_date.month_name B-depart_date.day_number O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O 
O O O O O O O O O O O O O O O 
O O O O O O O B-round_trip I-round_trip O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O 
O O O O O O O O O O O O O O O O O O 
O O O O O O O B-fromloc.city_name O B-toloc.city_name I-toloc.city_name I-toloc.city_name O B-depart_date.month_name B-depart_date.day_number O B-airline_name I-airline_name O 
O O O O O O O O O O O O O O O O O O O 
BatchLUSequenceParser: Parsing input data...
BatchLUSequenceParser: Parsed 0 lines with a total of 0+0 tokens.
EnsureDataAvailable: No more data.
Total Samples Evaluated = 91

05/03/2016 14:07:51: Action "write" complete.

05/03/2016 14:07:51: __COMPLETED__