=== Running /cygdrive/c/jenkins/workspace/CNTK-Test-Windows-W1/x64/release/cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config/rnn.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu DeviceId=-1 timestamping=true initOnCPUOnly=true command=writeWordAndClassInfo:train:test train=[SGD=[maxEpochs=3]] train=[epochSize=2048]] test=[SGD=[maxEpochs=3]] train=[epochSize=2048]]
-------------------------------------------------------------------
Build info: 

		Built time: May  3 2016 13:23:06
		Last modified date: Mon Apr 18 00:00:12 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: C:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: af96f7cce6c3c78a4f1e9315e061291c79360e12
		Built by svcphil on LIANA-09-w
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
05/03/2016 14:08:15: -------------------------------------------------------------------
05/03/2016 14:08:15: Build info: 

05/03/2016 14:08:15: 		Built time: May  3 2016 13:23:06
05/03/2016 14:08:15: 		Last modified date: Mon Apr 18 00:00:12 2016
05/03/2016 14:08:15: 		Build type: Release
05/03/2016 14:08:15: 		Build target: GPU
05/03/2016 14:08:15: 		With 1bit-SGD: no
05/03/2016 14:08:15: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
05/03/2016 14:08:15: 		CUB_PATH: C:\src\cub-1.4.1
05/03/2016 14:08:15: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
05/03/2016 14:08:15: 		Build Branch: HEAD
05/03/2016 14:08:15: 		Build SHA1: af96f7cce6c3c78a4f1e9315e061291c79360e12
05/03/2016 14:08:15: 		Built by svcphil on LIANA-09-w
05/03/2016 14:08:15: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
05/03/2016 14:08:15: -------------------------------------------------------------------

05/03/2016 14:08:15: Running on DPHAIM-25 at 2016/05/03 14:08:15
05/03/2016 14:08:15: Command line: 
C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config/rnn.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu  DeviceId=-1  timestamping=true  initOnCPUOnly=true  command=writeWordAndClassInfo:train:test  train=[SGD=[maxEpochs=3]]  train=[epochSize=2048]]  test=[SGD=[maxEpochs=3]]  train=[epochSize=2048]]



05/03/2016 14:08:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
05/03/2016 14:08:15: RootDir = ".."
ConfigDir = "$RootDir$/Config"
DataDir   = "$RootDir$/Data"
OutputDir = "$RootDir$/Output"
ModelDir  = "$OutputDir$/Models"
deviceId = "auto"
command = writeWordAndClassInfo:train:test:write
precision  = "float"
traceLevel = 1
modelPath  = "$ModelDir$/rnn.dnn"
numCPUThreads = 1
confVocabSize = 10000
confClassSize = 50
trainFile = "ptb.train.txt"
validFile = "ptb.valid.txt"
testFile  = "ptb.test.txt"
writeWordAndClassInfo = [
    action = "writeWordAndClass"
    inputFile = "$DataDir$/$trainFile$"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "$ModelDir$/vocab.txt"
    outputWord2Cls  = "$ModelDir$/word2cls.txt"
    outputCls2Index = "$ModelDir$/cls2idx.txt"
    vocabSize = "$confVocabSize$"
    nbrClass = "$confClassSize$"
    cutoff = 0
    printValues = true
]
train = [
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "$confVocabSize$:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "$confVocabSize$"
        nbrClass  = "$confClassSize$"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$trainFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$validFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
test = [
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$testFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
write = [
    action = "write"
    outputPath = "$OutputDir$/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "$ModelDir$/vocab.txt"
        wfile = "$OutputDir$/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "$confVocabSize$"
        file = "$DataDir$/$testFile$"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "$confVocabSize$"
            labelMappingFile = "$OutputDir$/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
DeviceId=-1
timestamping=true
initOnCPUOnly=true
command=writeWordAndClassInfo:train:test
train=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]
test=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]

05/03/2016 14:08:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

05/03/2016 14:08:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
05/03/2016 14:08:15: RootDir = ".."
ConfigDir = "../Config"
DataDir   = "../Data"
OutputDir = "../Output"
ModelDir  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models"
deviceId = "auto"
command = writeWordAndClassInfo:train:test:write
precision  = "float"
traceLevel = 1
modelPath  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn"
numCPUThreads = 1
confVocabSize = 10000
confClassSize = 50
trainFile = "ptb.train.txt"
validFile = "ptb.valid.txt"
testFile  = "ptb.test.txt"
writeWordAndClassInfo = [
    action = "writeWordAndClass"
    inputFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
    outputWord2Cls  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt"
    outputCls2Index = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt"
    vocabSize = "10000"
    nbrClass = "50"
    cutoff = 0
    printValues = true
]
train = [
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "10000:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "10000"
        nbrClass  = "50"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
test = [
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
write = [
    action = "write"
    outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]
currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
DeviceId=-1
timestamping=true
initOnCPUOnly=true
command=writeWordAndClassInfo:train:test
train=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]
test=[SGD=[maxEpochs=3]]
train=[epochSize=2048]]

05/03/2016 14:08:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

05/03/2016 14:08:15: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: rnn.cntk:]=true
configparameters: rnn.cntk:command=writeWordAndClassInfo:train:test
configparameters: rnn.cntk:confClassSize=50
configparameters: rnn.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Config
configparameters: rnn.cntk:confVocabSize=10000
configparameters: rnn.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
configparameters: rnn.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data
configparameters: rnn.cntk:deviceId=-1
configparameters: rnn.cntk:initOnCPUOnly=true
configparameters: rnn.cntk:ModelDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models
configparameters: rnn.cntk:modelPath=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn
configparameters: rnn.cntk:numCPUThreads=1
configparameters: rnn.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
configparameters: rnn.cntk:precision=float
configparameters: rnn.cntk:RootDir=..
configparameters: rnn.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu
configparameters: rnn.cntk:test=[
    action = "eval"
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]]

configparameters: rnn.cntk:testFile=ptb.test.txt
configparameters: rnn.cntk:timestamping=true
configparameters: rnn.cntk:traceLevel=1
configparameters: rnn.cntk:train=[
    action = "train"
    traceLevel = 1
epochSize = 0               
    SimpleNetworkBuilder = [
rnnType = "CLASSLSTM"   
recurrentLayer = 1      
        trainingCriterion = "classCrossEntropyWithSoftmax"
        evalCriterion     = "classCrossEntropyWithSoftmax"
        initValueScale = 6.0
        uniformInit = true
        layerSizes = "10000:150:200:10000"
defaultHiddenActivity = 0.1 
        addPrior = false
        addDropoutNodes = false
        applyMeanVarNorm = false
lookupTableOrder = 1        
        vocabSize = "10000"
        nbrClass  = "50"
    ]
    SGD = [
        minibatchSize = 128:256:512
        learningRatesPerSample = 0.1
        momentumPerMB = 0
        gradientClippingWithTruncation = true
        clippingThresholdPerSample = 15.0
        maxEpochs = 16
        numMBsToShowResult = 100
        gradUpdateType = "none"
        loadBestModel = true
        dropoutRate = 0.0
        AutoAdjust = [
            autoAdjustLR = "adjustAfterEpoch"
            reduceLearnRateIfImproveLessThan = 0.001
            continueReduce = false
            increaseLearnRateIfImproveMoreThan = 1000000000
            learnRateDecreaseFactor = 0.5
            learnRateIncreaseFactor = 1.382
            numMiniBatch4LRSearch = 100
            numPrevLearnRates = 5
            numBestSearchEpoch = 1
        ]
    ]
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11                
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = categoryLabels
            ]
        ]
    ]
    cvReader = [
        readerType = "LMSequenceReader"
        randomize = "none"
nbruttsineachrecurrentiter = 0  
cacheBlockSize = 2000000        
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.valid.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
] [SGD=[maxEpochs=3]] [epochSize=2048] [epochSize=2048]

configparameters: rnn.cntk:trainFile=ptb.train.txt
configparameters: rnn.cntk:validFile=ptb.valid.txt
configparameters: rnn.cntk:write=[
    action = "write"
    outputPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Write"
outputNodeNames = TrainNodeClassBasedCrossEntropy 
    format = [
sequencePrologue = "log P(W)="    
        type = "real"
    ]
minibatchSize = 8192                
    traceLevel = 1
    epochSize = 0
    reader = [
        readerType = "LMSequenceReader"
randomize = "none"              
nbruttsineachrecurrentiter = 1  
cacheBlockSize = 1              
        wordclass = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
        wfile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sequenceSentence.bin"
        wsize = 256
        wrecords = 1000
        windowSize = "10000"
        file = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt"
        features = [
            dim = 0
            sectionType = "data"
        ]
        labelIn = [
            dim = 1
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt"
            labelType = "Category"
            beginSequence = "</s>"
            endSequence = "</s>"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 11
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 11
                sectionType = "categoryLabels"
            ]
        ]
        labels = [
            dim = 1
            labelType = "NextWord"
            beginSequence = "O"
            endSequence = "O"
            labelDim = "10000"
            labelMappingFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt"
            elementSize = 4
            sectionType = "labels"
            mapping = [
                wrecords = 3
                elementSize = 10
                sectionType = "labelMapping"
            ]
            category = [
                dim = 3
                sectionType = "categoryLabels"
            ]
        ]
    ]
]

configparameters: rnn.cntk:writeWordAndClassInfo=[
    action = "writeWordAndClass"
    inputFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt"
    beginSequence = "</s>"
    endSequence   = "</s>"
    outputVocabFile = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt"
    outputWord2Cls  = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt"
    outputCls2Index = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt"
    vocabSize = "10000"
    nbrClass = "50"
    cutoff = 0
    printValues = true
]

05/03/2016 14:08:15: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
05/03/2016 14:08:15: Commands: writeWordAndClassInfo train test
05/03/2016 14:08:15: Precision = "float"
05/03/2016 14:08:15: Using 1 CPU threads.
05/03/2016 14:08:15: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn
05/03/2016 14:08:15: CNTKCommandTrainInfo: train : 3
05/03/2016 14:08:15: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 3

05/03/2016 14:08:15: ##############################################################################
05/03/2016 14:08:15: #                                                                            #
05/03/2016 14:08:15: # Action "writeWordAndClass"                                                 #
05/03/2016 14:08:15: #                                                                            #
05/03/2016 14:08:15: ##############################################################################

Vocabulary file    --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/vocab.txt
Word-to-class map  --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/word2cls.txt
Class-to-index map --> C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/cls2idx.txt

Reading input file inputFile: C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt
Vocabulary size 10000.
Created vocabulary file with 10000 entries.
Created word-to-class map with 10000 entries.
Created class-to-index map with 50 entries.

05/03/2016 14:08:15: Action "writeWordAndClass" complete.


05/03/2016 14:08:15: ##############################################################################
05/03/2016 14:08:15: #                                                                            #
05/03/2016 14:08:15: # Action "train"                                                             #
05/03/2016 14:08:15: #                                                                            #
05/03/2016 14:08:15: ##############################################################################

05/03/2016 14:08:15: CNTKCommandTrainBegin: train
SimpleNetworkBuilder Using CPU
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.train.txt'.
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.valid.txt'.

05/03/2016 14:08:16: Creating virgin network.

Post-processing network...

3 roots:
	PosteriorProb = Softmax()
	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax()
	outputs = TransposeTimes()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Validating network. 63 nodes to process in pass 1.

Validating --> W2 = LearnableParameter() :  -> [200 x 10000]
Validating --> WXO0 = LearnableParameter() :  -> [200 x 150]
Validating --> E0 = LearnableParameter() :  -> [150 x 10000]
Validating --> features = SparseInputValue() :  -> [10000 x *]
Validating --> LookupTable = LookupTable (E0, features) : [150 x 10000], [10000 x *] -> [150 x *]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bo0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHO0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCO0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bf0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHF0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCF0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> bi0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> WHI0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCI0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [200 x 150], [150 x *] -> [200 x *]
Validating --> WHC0 = LearnableParameter() :  -> [200 x 200]
Validating --> bc0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200] -> [200]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200] -> [200]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200] -> [200]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName26 = Sigmoid (AutoName25) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200] -> [200]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200] -> [200]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [200 x 1 x *], [200] -> [200 x 1 x *]
Validating --> AutoName13 = Sigmoid (AutoName12) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200] -> [200]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200], [200 x 1] -> [200 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [200 x *], [200 x 1] -> [200 x 1 x *]
Validating --> AutoName18 = Tanh (AutoName17) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName35 = Sigmoid (AutoName34) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName36 = Tanh (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [200 x 1 x *], [200 x 1 x *] -> [200 x 1 x *]
Validating --> outputs = TransposeTimes (W2, AutoName37) : [200 x 10000], [200 x 1 x *] -> [10000 x 1 x *]
Validating --> PosteriorProb = Softmax (outputs) : [10000 x 1 x *] -> [10000 x 1 x *]
Validating --> labels = InputValue() :  -> [4 x *]
Validating --> WeightForClassPostProb = LearnableParameter() :  -> [50 x 200]
Validating --> ClassPostProb = Times (WeightForClassPostProb, AutoName37) : [50 x 200], [200 x 1 x *] -> [50 x 1 x *]
Validating --> TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax (labels, AutoName37, W2, ClassPostProb) : [4 x *], [200 x 1 x *], [200 x 10000], [50 x 1 x *] -> [1]

Validating network. 43 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName1 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName5 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName6 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName0 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName4 = PastValue (AutoName28) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName3 = PastValue (AutoName37) : [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1 x *] -> [200 x 1 x *]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1 x *], [200 x 1] -> [200 x 1 x *]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 63 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

05/03/2016 14:08:16: Created model with 63 nodes on CPU.

05/03/2016 14:08:16: Training criterion node(s):
05/03/2016 14:08:16: 	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[PosteriorProb Gradient[10000 x 1 x *]] [PosteriorProb Value[10000 x 1 x *]] [features Gradient[10000 x *]] [labels Gradient[4 x *]] [outputs Gradient[10000 x 1 x *]] }
000000DB939DB0E0: {[E0 Value[150 x 10000]] }
000000DB939DB5E0: {[features Value[10000 x *]] }
000000DB93A9D1B0: {[WCF0 Value[200 x 1]] }
000000DB93A9D250: {[WXO0 Value[200 x 150]] }
000000DB93A9D430: {[bo0 Value[200 x 1]] }
000000DB93A9D570: {[WHO0 Value[200 x 200]] }
000000DB93A9D610: {[WHI0 Value[200 x 200]] }
000000DB93A9D750: {[bc0 Value[200 x 1]] }
000000DB93A9D930: {[WXC0 Value[200 x 150]] }
000000DB93A9D9D0: {[WXI0 Value[200 x 150]] }
000000DB93A9DA70: {[bi0 Value[200 x 1]] }
000000DB93A9DBB0: {[WXF0 Value[200 x 150]] }
000000DB93A9DC50: {[bf0 Value[200 x 1]] }
000000DB93A9DED0: {[WCI0 Value[200 x 1]] }
000000DB93A9E010: {[WHF0 Value[200 x 200]] }
000000DB96B561E0: {[AutoName6 Value[200 x 1 x *]] }
000000DB96B563C0: {[AutoName1 Value[200 x 1 x *]] }
000000DB96B565A0: {[WCO0 Value[200 x 1]] }
000000DB96B56640: {[AutoName4 Value[200 x 1 x *]] }
000000DB96B566E0: {[AutoName5 Value[200 x 1 x *]] }
000000DB96B56A00: {[AutoName0 Value[200 x 1 x *]] }
000000DB96B57540: {[WHC0 Value[200 x 200]] }
000000DB96B575E0: {[AutoName2 Value[200 x 1 x *]] [WXC0 Gradient[200 x 150]] }
000000DB96B57B80: {[AutoName3 Value[200 x 1 x *]] }
000000DB96C0D090: {[AutoName33 Value[200 x 1 x *]] }
000000DB96C0D130: {[AutoName20 Value[200 x 1 x *]] }
000000DB96C0D1D0: {[AutoName13 Value[200 x 1 x *]] }
000000DB96C0D270: {[AutoName17 Value[200 x 1 x *]] }
000000DB96C0D3B0: {[labels Value[4 x *]] }
000000DB96C0D4F0: {[outputs Value[10000 x 1 x *]] }
000000DB96C0D590: {[AutoName15 Value[200 x 1 x *]] }
000000DB96C0D630: {[AutoName22 Value[200 x *]] [AutoName31 Gradient[200 x *]] }
000000DB96C0D770: {[AutoName7 Value[200 x 1 x *]] }
000000DB96C0D810: {[AutoName12 Value[200 x 1 x *]] }
000000DB96C0D8B0: {[AutoName32 Value[200 x 1 x *]] [WXO0 Gradient[200 x 150]] }
000000DB96C0D9F0: {[W2 Value[200 x 10000]] }
000000DB96C0DB30: {[AutoName24 Value[200 x 1 x *]] }
000000DB96C0DBD0: {[AutoName27 Value[200 x 1 x *]] }
000000DB96C0DC70: {[AutoName11 Value[200 x 1 x *]] }
000000DB96C0DDB0: {[AutoName10 Value[200 x 1 x *]] [WXI0 Gradient[200 x 150]] }
000000DB96C0DE50: {[AutoName30 Value[200 x 1 x *]] }
000000DB96C0DEF0: {[AutoName26 Value[200 x 1 x *]] }
000000DB96C0DF90: {[AutoName8 Value[200 x 1 x *]] }
000000DB96C0E030: {[AutoName23 Value[200 x 1 x *]] [WXF0 Gradient[200 x 150]] }
000000DB96C0E170: {[AutoName16 Value[200 x *]] [AutoName9 Gradient[200 x *]] [bf0 Gradient[200 x 1]] }
000000DB96C0E210: {[AutoName21 Value[200 x 1 x *]] }
000000DB96C0E2B0: {[AutoName14 Value[200 x 1 x *]] }
000000DB96C0E350: {[AutoName19 Value[200 x 1 x *]] }
000000DB96C0E3F0: {[AutoName28 Value[200 x 1 x *]] }
000000DB96C0E490: {[AutoName29 Value[200 x 1 x *]] }
000000DB96C0E530: {[AutoName34 Value[200 x 1 x *]] }
000000DB96C0E5D0: {[AutoName35 Value[200 x 1 x *]] }
000000DB96C0E710: {[LookupTable Value[150 x *]] }
000000DB96C0E7B0: {[AutoName25 Value[200 x 1 x *]] }
000000DB96C0E8F0: {[WeightForClassPostProb Value[50 x 200]] }
000000DB96C0E990: {[AutoName18 Value[200 x 1 x *]] }
000000DB96C0EA30: {[AutoName36 Value[200 x 1 x *]] }
000000DB96C0EAD0: {[AutoName37 Value[200 x 1 x *]] }
000000DB96C0EB70: {[AutoName35 Gradient[200 x 1 x *]] [ClassPostProb Value[50 x 1 x *]] }
000000DB96C0EC10: {[TrainNodeClassBasedCrossEntropy Gradient[1]] }
000000DB96C0ECB0: {[AutoName37 Gradient[200 x 1 x *]] }
000000DB96C0EDF0: {[TrainNodeClassBasedCrossEntropy Value[1]] }
000000DB96C0EE90: {[AutoName31 Value[200 x *]] [E0 Gradient[150 x 10000]] }
000000DB96C0EF30: {[AutoName22 Gradient[200 x *]] [AutoName9 Value[200 x *]] [bo0 Gradient[200 x 1]] }
000000DB9727BCE0: {[AutoName16 Gradient[200 x *]] [bi0 Gradient[200 x 1]] }
000000DB9727BE20: {[WCI0 Gradient[200 x 1]] }
000000DB9727BEC0: {[AutoName28 Gradient[200 x 1 x *]] }
000000DB9727BF60: {[AutoName25 Gradient[200 x 1 x *]] }
000000DB9727C000: {[AutoName7 Gradient[200 x 1 x *]] }
000000DB9727C0A0: {[AutoName20 Gradient[200 x 1 x *]] }
000000DB9727C1E0: {[AutoName30 Gradient[200 x 1 x *]] }
000000DB9727C280: {[AutoName33 Gradient[200 x 1 x *]] }
000000DB9727C460: {[AutoName34 Gradient[200 x 1 x *]] }
000000DB9727C500: {[AutoName27 Gradient[200 x 1 x *]] }
000000DB9727C5A0: {[AutoName2 Gradient[200 x 1 x *]] [LookupTable Gradient[150 x *]] }
000000DB9727C6E0: {[WHI0 Gradient[200 x 200]] }
000000DB9727C820: {[AutoName11 Gradient[200 x 1 x *]] }
000000DB9727C8C0: {[WeightForClassPostProb Gradient[50 x 200]] }
000000DB9727C960: {[AutoName29 Gradient[200 x 1 x *]] }
000000DB9727CA00: {[AutoName4 Gradient[200 x 1 x *]] }
000000DB9727CAA0: {[AutoName10 Gradient[200 x 1 x *]] }
000000DB9727CBE0: {[AutoName6 Gradient[200 x 1 x *]] }
000000DB9727CC80: {[AutoName23 Gradient[200 x 1 x *]] }
000000DB9727CD20: {[WHF0 Gradient[200 x 200]] }
000000DB9727CDC0: {[W2 Gradient[200 x 10000]] }
000000DB9727CE60: {[AutoName21 Gradient[200 x 1 x *]] }
000000DB9727CF00: {[AutoName15 Gradient[200 x 1 x *]] }
000000DB9727CFA0: {[AutoName5 Gradient[200 x 1 x *]] }
000000DB9727D040: {[AutoName1 Gradient[200 x 1 x *]] }
000000DB9727D0E0: {[AutoName13 Gradient[200 x 1 x *]] }
000000DB9727D180: {[AutoName14 Gradient[200 x 1 x *]] }
000000DB9727D220: {[WHC0 Gradient[200 x 200]] }
000000DB9727D2C0: {[AutoName3 Gradient[200 x 1 x *]] }
000000DB9727D360: {[AutoName12 Gradient[200 x 1 x *]] }
000000DB9727D400: {[AutoName8 Gradient[200 x 1 x *]] }
000000DB9727D4A0: {[AutoName26 Gradient[200 x 1 x *]] }
000000DB9727D540: {[AutoName32 Gradient[200 x 1 x *]] }
000000DB9727D5E0: {[WHO0 Gradient[200 x 200]] }
000000DB9727D680: {[AutoName36 Gradient[200 x 1 x *]] [ClassPostProb Gradient[50 x 1 x *]] }
000000DB9727D720: {[AutoName17 Gradient[200 x 1 x *]] }
000000DB9727D7C0: {[WCF0 Gradient[200 x 1]] }
000000DB9727D860: {[AutoName24 Gradient[200 x 1 x *]] }
000000DB9727D900: {[AutoName0 Gradient[200 x 1 x *]] }
000000DB9727D9A0: {[AutoName19 Gradient[200 x 1 x *]] }
000000DB9727DA40: {[AutoName18 Gradient[200 x 1 x *]] }
000000DB9727DAE0: {[WCO0 Gradient[200 x 1]] }
000000DB9727DB80: {[bc0 Gradient[200 x 1]] }

05/03/2016 14:08:16: No PreCompute nodes found, skipping PreCompute step.

05/03/2016 14:08:16: Starting Epoch 1: learning rate per sample = 0.100000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

05/03/2016 14:08:16: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
05/03/2016 14:08:17: Finished Epoch[ 1 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.81610395 * 2061; totalSamplesSeen = 2061; learningRatePerSample = 0.1; epochTime=1.37122s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
05/03/2016 14:08:29: Final Results: Minibatch[1-704]: TrainNodeClassBasedCrossEntropy = 6.49594388 * 73760; perplexity = 662.44920590
05/03/2016 14:08:29: Finished Epoch[ 1 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.49594388 * 73760
05/03/2016 14:08:29: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.1'

05/03/2016 14:08:30: Starting Epoch 2: learning rate per sample = 0.100000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

05/03/2016 14:08:30: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
05/03/2016 14:08:31: Finished Epoch[ 2 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.49383841 * 2081; totalSamplesSeen = 4142; learningRatePerSample = 0.1; epochTime=0.956799s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
05/03/2016 14:08:41: Final Results: Minibatch[1-353]: TrainNodeClassBasedCrossEntropy = 6.60359331 * 73760; perplexity = 737.74136292
05/03/2016 14:08:41: Finished Epoch[ 2 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.60359331 * 73760
05/03/2016 14:08:41: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.1.
05/03/2016 14:08:42: learnRatePerSample reduced to 0.050000001
05/03/2016 14:08:42: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.2'

05/03/2016 14:08:42: Starting Epoch 3: learning rate per sample = 0.050000  effective momentum = 0.000000  momentum as time constant = 0.0 samples

05/03/2016 14:08:42: Starting minibatch loop.
LMSequenceReader: Reading epoch data... 42068 sequences read.
05/03/2016 14:08:43: Finished Epoch[ 3 of 3]: [Training] TrainNodeClassBasedCrossEntropy = 6.39187373 * 2343; totalSamplesSeen = 4404; learningRatePerSample = 0.050000001; epochTime=0.952381s
LMSequenceReader: Reading epoch data... 3370 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
05/03/2016 14:08:53: Final Results: Minibatch[1-193]: TrainNodeClassBasedCrossEntropy = 6.95174027 * 73760; perplexity = 1044.96666706
05/03/2016 14:08:53: Finished Epoch[ 3 of 3]: [Validate] TrainNodeClassBasedCrossEntropy = 6.95174027 * 73760
05/03/2016 14:08:53: Loading (rolling back to) previous model with best training-criterion value: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn.2.
05/03/2016 14:08:53: learnRatePerSample reduced to 0.025
05/03/2016 14:08:54: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/Models/rnn.dnn'
05/03/2016 14:08:54: CNTKCommandTrainEnd: train

05/03/2016 14:08:54: Action "train" complete.


05/03/2016 14:08:54: ##############################################################################
05/03/2016 14:08:54: #                                                                            #
05/03/2016 14:08:54: # Action "eval"                                                              #
05/03/2016 14:08:54: #                                                                            #
05/03/2016 14:08:54: ##############################################################################

LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.txt
LMSequenceReader: Label mapping will be created internally on the fly because the labelMappingFile was not found: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160503140043.234881\Examples\Text\PennTreebank_RNN@release_cpu/sentenceLabels.out.txt
LMSequenceReader: Input file is 'C:\jenkins\workspace\CNTK-Test-Windows-W1\Examples\Text\PennTreebank\Data/ptb.test.txt'.

Post-processing network...

3 roots:
	PosteriorProb = Softmax()
	TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax()
	outputs = TransposeTimes()

Loop[0] --> Loop_AutoName37 -> 31 nodes

	AutoName2	AutoName30	AutoName33
	AutoName1	AutoName21	AutoName24
	AutoName5	AutoName20	AutoName25
	AutoName26	AutoName6	AutoName27
	AutoName0	AutoName8	AutoName11
	AutoName4	AutoName7	AutoName12
	AutoName13	AutoName3	AutoName14
	AutoName15	AutoName17	AutoName18
	AutoName19	AutoName28	AutoName29
	AutoName34	AutoName35	AutoName36
	AutoName37

Validating network. 63 nodes to process in pass 1.

Validating --> W2 = LearnableParameter() :  -> [200 x 10000]
Validating --> WXO0 = LearnableParameter() :  -> [200 x 150]
Validating --> E0 = LearnableParameter() :  -> [150 x 10000]
Validating --> features = SparseInputValue() :  -> [10000 x *1]
Validating --> LookupTable = LookupTable (E0, features) : [150 x 10000], [10000 x *1] -> [150 x *1]
Validating --> AutoName31 = Times (WXO0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bo0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName32 = Plus (AutoName31, bo0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHO0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCO0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXF0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName22 = Times (WXF0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bf0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName23 = Plus (AutoName22, bf0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHF0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCF0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXI0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName9 = Times (WXI0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> bi0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName10 = Plus (AutoName9, bi0) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> WHI0 = LearnableParameter() :  -> [200 x 200]
Validating --> WCI0 = LearnableParameter() :  -> [200 x 1]
Validating --> WXC0 = LearnableParameter() :  -> [200 x 150]
Validating --> AutoName16 = Times (WXC0, LookupTable) : [200 x 150], [150 x *1] -> [200 x *1]
Validating --> WHC0 = LearnableParameter() :  -> [200 x 200]
Validating --> bc0 = LearnableParameter() :  -> [200 x 1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName33 = Plus (AutoName32, AutoName30) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName24 = Plus (AutoName23, AutoName21) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName25 = Plus (AutoName24, AutoName20) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName26 = Sigmoid (AutoName25) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName27 = ElementTimes (AutoName26, AutoName6) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName11 = Plus (AutoName10, AutoName8) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName12 = Plus (AutoName11, AutoName7) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName13 = Sigmoid (AutoName12) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1] -> [200 x 1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1], [200 x 1] -> [200 x 1]
Validating --> AutoName17 = Plus (AutoName16, AutoName15) : [200 x *1], [200 x 1] -> [200 x 1 x *1]
Validating --> AutoName18 = Tanh (AutoName17) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName19 = ElementTimes (AutoName13, AutoName18) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName28 = Plus (AutoName27, AutoName19) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName29 = DiagTimes (WCO0, AutoName28) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName34 = Plus (AutoName33, AutoName29) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName35 = Sigmoid (AutoName34) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName36 = Tanh (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName37 = ElementTimes (AutoName35, AutoName36) : [200 x 1 x *1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> outputs = TransposeTimes (W2, AutoName37) : [200 x 10000], [200 x 1 x *1] -> [10000 x 1 x *1]
Validating --> PosteriorProb = Softmax (outputs) : [10000 x 1 x *1] -> [10000 x 1 x *1]
Validating --> labels = InputValue() :  -> [4 x *1]
Validating --> WeightForClassPostProb = LearnableParameter() :  -> [50 x 200]
Validating --> ClassPostProb = Times (WeightForClassPostProb, AutoName37) : [50 x 200], [200 x 1 x *1] -> [50 x 1 x *1]
Validating --> TrainNodeClassBasedCrossEntropy = ClassBasedCrossEntropyWithSoftmax (labels, AutoName37, W2, ClassPostProb) : [4 x *1], [200 x 1 x *1], [200 x 10000], [50 x 1 x *1] -> [1]

Validating network. 43 nodes to process in pass 2.

Validating --> AutoName2 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName30 = Times (WHO0, AutoName2) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName1 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName21 = Times (WHF0, AutoName1) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName5 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName20 = DiagTimes (WCF0, AutoName5) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName6 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName0 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName8 = Times (WHI0, AutoName0) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName4 = PastValue (AutoName28) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName7 = DiagTimes (WCI0, AutoName4) : [200 x 1], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName3 = PastValue (AutoName37) : [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName14 = Times (WHC0, AutoName3) : [200 x 200], [200 x 1 x *1] -> [200 x 1 x *1]
Validating --> AutoName15 = Plus (AutoName14, bc0) : [200 x 1 x *1], [200 x 1] -> [200 x 1 x *1]

Validating network. 14 nodes to process in pass 3.


Validating network, final pass.



19 out of 63 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

0000000000000000: {[AutoName0 Gradient[200 x 1 x *1]] [AutoName1 Gradient[200 x 1 x *1]] [AutoName10 Gradient[200 x 1 x *1]] [AutoName11 Gradient[200 x 1 x *1]] [AutoName12 Gradient[200 x 1 x *1]] [AutoName13 Gradient[200 x 1 x *1]] [AutoName14 Gradient[200 x 1 x *1]] [AutoName15 Gradient[200 x 1 x *1]] [AutoName16 Gradient[200 x *1]] [AutoName17 Gradient[200 x 1 x *1]] [AutoName18 Gradient[200 x 1 x *1]] [AutoName19 Gradient[200 x 1 x *1]] [AutoName2 Gradient[200 x 1 x *1]] [AutoName20 Gradient[200 x 1 x *1]] [AutoName21 Gradient[200 x 1 x *1]] [AutoName22 Gradient[200 x *1]] [AutoName23 Gradient[200 x 1 x *1]] [AutoName24 Gradient[200 x 1 x *1]] [AutoName25 Gradient[200 x 1 x *1]] [AutoName26 Gradient[200 x 1 x *1]] [AutoName27 Gradient[200 x 1 x *1]] [AutoName28 Gradient[200 x 1 x *1]] [AutoName29 Gradient[200 x 1 x *1]] [AutoName3 Gradient[200 x 1 x *1]] [AutoName30 Gradient[200 x 1 x *1]] [AutoName31 Gradient[200 x *1]] [AutoName32 Gradient[200 x 1 x *1]] [AutoName33 Gradient[200 x 1 x *1]] [AutoName34 Gradient[200 x 1 x *1]] [AutoName35 Gradient[200 x 1 x *1]] [AutoName36 Gradient[200 x 1 x *1]] [AutoName37 Gradient[200 x 1 x *1]] [AutoName4 Gradient[200 x 1 x *1]] [AutoName5 Gradient[200 x 1 x *1]] [AutoName6 Gradient[200 x 1 x *1]] [AutoName7 Gradient[200 x 1 x *1]] [AutoName8 Gradient[200 x 1 x *1]] [AutoName9 Gradient[200 x *1]] [ClassPostProb Gradient[50 x 1 x *1]] [E0 Gradient[150 x 10000]] [LookupTable Gradient[150 x *1]] [PosteriorProb Gradient[10000 x 1 x *1]] [PosteriorProb Value[10000 x 1 x *1]] [TrainNodeClassBasedCrossEntropy Gradient[1]] [W2 Gradient[200 x 10000]] [WCF0 Gradient[200 x 1]] [WCI0 Gradient[200 x 1]] [WCO0 Gradient[200 x 1]] [WHC0 Gradient[200 x 200]] [WHF0 Gradient[200 x 200]] [WHI0 Gradient[200 x 200]] [WHO0 Gradient[200 x 200]] [WXC0 Gradient[200 x 150]] [WXF0 Gradient[200 x 150]] [WXI0 Gradient[200 x 150]] [WXO0 Gradient[200 x 150]] [WeightForClassPostProb Gradient[50 x 200]] [bc0 Gradient[200 x 1]] [bf0 Gradient[200 x 1]] [bi0 Gradient[200 x 1]] [bo0 Gradient[200 x 1]] [features Gradient[10000 x *1]] [labels Gradient[4 x *1]] [outputs Gradient[10000 x 1 x *1]] [outputs Value[10000 x 1 x *1]] }
000000DB939DB180: {[AutoName1 Value[200 x 1 x *1]] }
000000DB939DB4A0: {[AutoName0 Value[200 x 1 x *1]] }
000000DB96AB0C20: {[AutoName6 Value[200 x 1 x *1]] }
000000DB96AB0E00: {[bi0 Value[200 x 1]] }
000000DB96AB1940: {[AutoName5 Value[200 x 1 x *1]] }
000000DB96AB1BC0: {[AutoName4 Value[200 x 1 x *1]] }
000000DB96AB1C60: {[bf0 Value[200 x 1]] }
000000DB96AB2020: {[bc0 Value[200 x 1]] }
000000DB96AB2160: {[AutoName2 Value[200 x 1 x *1]] }
000000DB96AB2340: {[bo0 Value[200 x 1]] }
000000DB96AB2480: {[AutoName3 Value[200 x 1 x *1]] }
000000DB96C18160: {[AutoName26 Value[200 x 1 x *1]] }
000000DB96C18340: {[AutoName35 Value[200 x 1 x *1]] }
000000DB96C183E0: {[AutoName36 Value[200 x 1 x *1]] }
000000DB96C18660: {[AutoName18 Value[200 x 1 x *1]] }
000000DB96C18700: {[AutoName15 Value[200 x 1 x *1]] }
000000DB96C18840: {[AutoName17 Value[200 x 1 x *1]] }
000000DB96C18980: {[AutoName7 Value[200 x 1 x *1]] }
000000DB96C18A20: {[AutoName8 Value[200 x 1 x *1]] }
000000DB96C18AC0: {[AutoName21 Value[200 x 1 x *1]] }
000000DB96C18B60: {[AutoName13 Value[200 x 1 x *1]] }
000000DB96C18C00: {[AutoName14 Value[200 x 1 x *1]] }
000000DB96C18CA0: {[AutoName27 Value[200 x 1 x *1]] }
000000DB96C18D40: {[AutoName19 Value[200 x 1 x *1]] }
000000DB96C18DE0: {[AutoName12 Value[200 x 1 x *1]] }
000000DB96C18E80: {[ClassPostProb Value[50 x 1 x *1]] }
000000DB96C19060: {[AutoName34 Value[200 x 1 x *1]] }
000000DB96C19560: {[AutoName24 Value[200 x 1 x *1]] }
000000DB96C19600: {[AutoName20 Value[200 x 1 x *1]] }
000000DB96C196A0: {[AutoName25 Value[200 x 1 x *1]] }
000000DB96C19740: {[AutoName11 Value[200 x 1 x *1]] }
000000DB96C19880: {[AutoName28 Value[200 x 1 x *1]] }
000000DB96C19B00: {[AutoName29 Value[200 x 1 x *1]] }
000000DB96C19BA0: {[AutoName37 Value[200 x 1 x *1]] }
000000DB9FDB6820: {[AutoName33 Value[200 x 1 x *1]] }
000000DB9FDB6A00: {[WHF0 Value[200 x 200]] }
000000DB9FDB6AA0: {[AutoName32 Value[200 x 1 x *1]] }
000000DB9FDB6B40: {[WXF0 Value[200 x 150]] }
000000DB9FDB6BE0: {[WHC0 Value[200 x 200]] }
000000DB9FDB6C80: {[labels Value[4 x *1]] }
000000DB9FDB70E0: {[WXI0 Value[200 x 150]] }
000000DB9FDB7180: {[TrainNodeClassBasedCrossEntropy Value[1]] }
000000DB9FDB72C0: {[WCF0 Value[200 x 1]] }
000000DB9FDB74A0: {[WHO0 Value[200 x 200]] }
000000DB9FDB7720: {[WCO0 Value[200 x 1]] }
000000DB9FDB7860: {[WXO0 Value[200 x 150]] }
000000DB9FDB79A0: {[WXC0 Value[200 x 150]] }
000000DB9FDB7A40: {[LookupTable Value[150 x *1]] }
000000DB9FDB7B80: {[AutoName31 Value[200 x *1]] }
000000DB9FDB7D60: {[AutoName22 Value[200 x *1]] }
000000DB9FDB7E00: {[WeightForClassPostProb Value[50 x 200]] }
000000DB9FDB7EA0: {[WHI0 Value[200 x 200]] }
000000DB9FDB7F40: {[AutoName23 Value[200 x 1 x *1]] }
000000DB9FDB7FE0: {[WCI0 Value[200 x 1]] }
000000DB9FDB8080: {[AutoName9 Value[200 x *1]] }
000000DB9FDB8120: {[W2 Value[200 x 10000]] }
000000DB9FDB8260: {[features Value[10000 x *1]] }
000000DB9FDB8300: {[AutoName10 Value[200 x 1 x *1]] }
000000DB9FDB83A0: {[AutoName16 Value[200 x *1]] }
000000DB9FDB84E0: {[E0 Value[150 x 10000]] }
000000DB9FDB8620: {[AutoName30 Value[200 x 1 x *1]] }

LMSequenceReader: Reading epoch data... 3760 sequences read.
LMSequenceReader: Reading epoch data... 0 sequences read.
05/03/2016 14:09:04: Final Results: Minibatch[1-60]: TrainNodeClassBasedCrossEntropy = 6.44845979 * 82402; perplexity = 631.72854820

05/03/2016 14:09:04: Action "eval" complete.

05/03/2016 14:09:04: __COMPLETED__